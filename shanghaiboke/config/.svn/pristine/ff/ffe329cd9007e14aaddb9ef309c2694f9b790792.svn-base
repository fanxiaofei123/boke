<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<Form Caption="包装材料出库单" FormType="Entity" Key="V_PackingMaterialType">
    <DataSource RefObjectKey="LRP_PackingMaterialType"/>
    <OperationCollection>
        <Operation Caption="新增" Key="New" Visible="ReadOnly()">
            <Action>
                <![CDATA[
				New('V_PackingMaterialType');
			]]>
            </Action>
        </Operation>
        <Operation Caption="保存" Key="Save" ShortCuts="Ctrl+S" Visible="!ReadOnly()&amp;&amp;Status==100">
            <Action>
                <![CDATA[			
					var DischargingMaterialID_V = DischargingMaterialID;
					var DischargingMaterialName_V = DischargingMaterialName;
					SaveData();
					UpdateView();
					DischargingMaterialID = DischargingMaterialID_V;
					DischargingMaterialName = DischargingMaterialName_V;
				]]>
            </Action>
        </Operation>
        <Operation Caption="编辑" Key="Edit" Visible="ReadOnly()&amp;&amp;Status==StatusValue('prepared')">
            <Action>
                <![CDATA[Edit();]]>
            </Action>
        </Operation>
        <Operation Caption="删除" Key="Delete" Visible="ReadOnly()&amp;&amp;Status==StatusValue('prepared')">
            <Action>
                <![CDATA[
			Confirm(LocaleString('CommonDef','key2'),'YES_NO',{YES:{DeleteData();UpdateView();Close();},NO:{}});
			
			]]>
            </Action>
        </Operation>
        <Operation Caption="取消" Key="Cancel" RefKey="Cancel"/>
		<Operation Caption="确认" Key="Confirm" Visible="ReadOnly()&amp;&amp;Status==StatusValue('prepared')">
            <Action>
                <![CDATA[
				var DischargingMaterialID_V = DischargingMaterialID;
				var DischargingMaterialName_V = DischargingMaterialName;
				Status=StatusValue('confirmed');SaveData();UpdateView();
				DischargingMaterialID = DischargingMaterialID_V;
				DischargingMaterialName = DischargingMaterialName_V;
				]]>
            </Action>
            <ExceptionHandler>
                <![CDATA[				
				Status=StatusValue('prepared');
			]]>
            </ExceptionHandler>
        </Operation>
        <Operation Caption="撤销确认" Key="Confirm-R" Visible="ReadOnly()&amp;&amp;Status==StatusValue('confirmed')">
            <Action>
                <![CDATA[
				var count = GetRowCount('Grid0');
				var i = 0;
				var b = false;
				while ( i < count ) {
					if(GetCellValue('Grid0',i,"Status_Outbound") == 90){
						b = true;
						break;
					}
					i = i + 1;
				}
				if(b){
					Confirm(LocaleString('PAshow','pakey8'),'OK','OK:{}');	
					return true;
				}
				Confirm(LocaleString('PAshow','pakey9'),'YES_NO',{YES:{
					ClearAllRows('Grid0');
					var count1 = GetRowCount('Grid_Sum');
					var j = 0;
					while ( j < count1 ) {
						SetCellValue('Grid_Sum',j,'OutboundQty',0);
						j = j + 1;
					}
					var DischargingMaterialID_V = DischargingMaterialID;
					var DischargingMaterialName_V = DischargingMaterialName;
					Status=StatusValue('prepared');SaveData();UpdateView();
					DischargingMaterialID = DischargingMaterialID_V;
					DischargingMaterialName = DischargingMaterialName_V;
				},NO:{}});
				]]>
            </Action>
            <ExceptionHandler>
                <![CDATA[				
				Status=StatusValue('confirmed');
			]]>
            </ExceptionHandler>
        </Operation>
		<Operation Caption="整储位出库" Key="LocationOutbound" Visible="Status==StatusValue('confirmed')">
			<Action>
                <![CDATA[
			ShowModal('LocationOutbound');
			
			]]>
            </Action>
		</Operation>
		<Operation Caption="匹配方案" Key="GetPackingStrategy" Visible="!ReadOnly()&amp;&amp;Status==100">
            <Action>
                <![CDATA[				
					var count = GetRowCount('Grid_Type',false);
					var i = 0;
					while ( i < count ) {
						if(GetCellValue('Grid_Type',i,"PackingQty_Type") <= 0){
							i = i + 1;
							var s = LocaleParaFormat('PAshow','pakey31',i);
							Confirm(s,'OK','OK:{}');	
							return true;									
						}
						i = i + 1;
					}				
					
					if(IsNew()){
						SaveData();
						UpdateView();
						Edit();
					}
					
					//调用二次开发获取的匹配的包装方案
					InvokeService("LRP_BatchMatchPackingStrategy", true, true);
					
					if(GetRowCount('Grid_Type')>0){
						var PackingStrategyId = GetCellValue('Grid_Type',0,"PackingStrategyId_Type");
						if(PackingStrategyId > 0){
							var dt=DBNamedQuery("GetPackingStrategyMaterialDetail",PackingStrategyId);
							dt.beforefirst();
							while(dt.next()){							
								if(dt.Discharging>0){								
									DischargingMaterialID = dt.PackingMaterialID;
									DischargingMaterialName = dt.MaterialName;
									break;
								}
							}
						}
					}
				]]>
            </Action>
        </Operation>
		<Operation Caption="出库" Key="Outbound" Visible="Status==StatusValue('confirmed')">
            <Action>
                <![CDATA[			
					var count = GetRowCount('Grid_Sum');
					var i = 0;
					while ( i < count ) {
						if(GetCellValue('Grid_Sum',i,"MaterialId") == DischargingMaterialID){
							if(GetCellValue('Grid_Sum',i,"OutboundQty") < GetCellValue('Grid_Sum',i,"Qty")){
								var s = LocaleParaFormat('PAshow','pakey10',DischargingMaterialName);
								Confirm(s,'OK','OK:{}');	
								return true;
							}
							break;													
						}
						i = i + 1;
					}
					var DischargingMaterialID_V = DischargingMaterialID;
					var DischargingMaterialName_V = DischargingMaterialName;
					
					var Date = ServerDate();
					count = GetRowCount('Grid0');
					i = 0;
					var OutboundCount = 0;
					while ( i < count ) {
						if(GetCellValue('Grid0',i,"Status_Outbound") == 10){
							SetCellValue('Grid0',i,"Status_Outbound",90);
							SetCellValue('Grid0',i,"OutboundDateTime_Outbound",Date);		
							OutboundCount = OutboundCount + 1;							
						}
						i = i + 1;
					}
					if(OutboundCount==0){
						Confirm(LocaleString('PAshow','pakey11'),'OK','OK:{}');	
						return true;
					}
					OutboundDateTime = Date;
					SaveData();UpdateView();
					DischargingMaterialID = DischargingMaterialID_V;
					DischargingMaterialName = DischargingMaterialName_V;
										
					//启动释冷计时器
					var DischargTime = -1;
					var	DischargOverTime = -1;
					if(GetRowCount('Grid_Type')>0){
						var PackingStrategyId = GetCellValue('Grid_Type',0,"PackingStrategyId_Type");
						if(PackingStrategyId > 0){
							var dt=DBNamedQuery("GetPackingStrategyMaterialDetail",PackingStrategyId);
							dt.beforefirst();
							while(dt.next()){							
								if(dt.Discharging>0){
									DischargTime = dt.Discharging;
									DischargOverTime = dt.DischargingOverTime;
									StrategyDischargTimeLabel = dt.Discharging;
									StrategyDischargOverTimeLabel = dt.DischargingOverTime;
									DischargingMaterialID = dt.PackingMaterialID;
									DischargingMaterialName = dt.MaterialName;
									
									DischargTimerType = "1";
									var d = GetValue('DischargTimerStart');
									DischargTimerCur = DateAdd(d,"n",DischargTime);
									StartTimerTask('DischargTimer');
									break;
								}
							}
						}
					}
				]]>
            </Action>
        </Operation>
		<Operation Caption="完成释冷" Key="DischargEnd" Visible="Status==StatusValue('confirmed')">
            <Action>
                <![CDATA[					
					var DischargingMaterialID_V = DischargingMaterialID;
					var DischargingMaterialName_V = DischargingMaterialName;					
					
					//检查需要释冷的材料
					var DischargTime = -1;
					var	DischargOverTime = -1;
					if(GetRowCount('Grid_Type')>0){
						var PackingStrategyId = GetCellValue('Grid_Type',0,"PackingStrategyId_Type");
						var dt=DBNamedQuery("GetPackingStrategyMaterialDetail",PackingStrategyId);
						dt.beforefirst();
						while(dt.next()){							
							if(dt.Discharging>0){
								DischargTime = dt.Discharging;
								DischargOverTime = dt.DischargingOverTime;
							}
						}
					}
					
					if(DischargTime < 0){
						return true;
					}
					var CurDate = ServerDate();
					
					var LackDischargCount = 0;
					var OverDischargCount = 0;
					var DischargCount = 0;
					var count = GetRowCount('Grid0');
					var i = 0;
					while ( i < count ) {
						if(GetCellValue('Grid0',i,"MaterialId_Outbound") == DischargingMaterialID && GetCellValue('Grid0',i,"Status_Outbound") == 90){
							var DischargDate = GetCellValue('Grid0',i,"OutboundDateTime_Outbound");
							DischargDate = DateAdd(DischargDate,"n",DischargTime);
							if(CurDate < DischargDate){
								LackDischargCount = LackDischargCount + 1;
							}
						}
						i = i + 1;
					}
					
					if(LackDischargCount > 0){
						Confirm(LocaleParaFormat('PAshow','pakey12',LackDischargCount),'OK','OK:{}');											
						return true;
					}
					
					i = 0;
					while ( i < count ) {
						if(GetCellValue('Grid0',i,"MaterialId_Outbound") == DischargingMaterialID && GetCellValue('Grid0',i,"Status_Outbound") == 90){
							var DischargDate = GetCellValue('Grid0',i,"OutboundDateTime_Outbound");
							DischargDate = DateAdd(DischargDate,"n",DischargTime);
							DischargDate = DateAdd(DischargDate,"n",DischargOverTime);
							if(CurDate > DischargDate){
								OverDischargCount = OverDischargCount + 1;
								SetCellValue('Grid0',i,"Status_Outbound",92);
							}
							else{
								DischargCount = DischargCount + 1;
								SetCellValue('Grid0',i,"Status_Outbound",91);
							}
							SetCellValue('Grid0',i,"DischargEndDateTime_Outbound",CurDate);							
						}
						i = i + 1;
					}
					if(DischargCount + OverDischargCount==0){
						Confirm(LocaleString('PAshow','pakey13'),'OK','OK:{}');	
						return true;
					}
					DischargEndDateTime = CurDate;
					SaveData();UpdateView();
					DischargingMaterialID = DischargingMaterialID_V;
					DischargingMaterialName = DischargingMaterialName_V;				
					
					//关闭释冷计时器
					DischargTimerType = "4";
					DischargTimerLabel = "完成释冷";
					StopTimerTask('DischargTimer');
					
					if(OverDischargCount > 0){
						Confirm(LocaleParaFormat('PAshow','pakey14',OverDischargCount),'OK','OK:{}');											
						return true;
					}
				]]>
            </Action>
        </Operation>
		<Operation Caption="完成" Key="Finish" Visible="Status==StatusValue('confirmed')">
            <Action>
                <![CDATA[				
					if(GetRowCount('Grid_Type',false)<=0){
						Confirm(LocaleString('CommonDef','key1'),'OK','OK:{}');	
						return true;
					}
					
					var s = LocaleString('PAshow','pakey32');
					var count = GetRowCount('Grid_Sum');
					var i = 0;
					while ( i < count ) {
						if(GetCellValue('Grid_Sum',i,"OutboundQty") < GetCellValue('Grid_Sum',i,"Qty")){
							i = i + 1;
							s = LocaleParaFormat('PAshow','pakey33',i);
							break;													
						}
						i = i + 1;
					}
					Confirm(s,'YES_NO',{YES:{
						var DischargingMaterialID_V = DischargingMaterialID;
						var DischargingMaterialName_V = DischargingMaterialName;
						Status=StatusValue('finished');						
						SaveData();
						UpdateView();
						DischargingMaterialID = DischargingMaterialID_V;
						DischargingMaterialName = DischargingMaterialName_V;
					},NO:{}});
				]]>
            </Action>
            <ExceptionHandler>
                <![CDATA[				
				Status=StatusValue('confirmed');
			]]>
            </ExceptionHandler>
        </Operation> 
		
        <Operation Caption="关闭界面" Key="Close" RefKey="Close"/>
    </OperationCollection>
    <Body>
        <Block>
            <FlexFlowLayoutPanel Key="main">
                <ToolBar Height="pref" Key="main_toolbar">
                    <ToolBarItemCollection/>
                </ToolBar>
                <SplitPanel Height="100%" Key="main_split" Orientation="Vertical">
                    <TabPanel Caption="TabPanel0" Key="TabPanel0">
                        <GridLayoutPanel Caption="基本信息" Key="BasicTab" Padding="10px">
                            <TextEditor Caption="出库单号" Enable="false" Key="No" X="1" XSpan="2" Y="0">
                                <DataBinding ColumnKey="No" TableKey="LRP_PackingMaterialType_H"/>
                            </TextEditor>
                            <Label Caption="出库单号" Key="L_No" X="0" Y="0"/>                            
							<ComboBox Caption="状态" Enable="false" Key="Status" SourceType="Status" X="5" XSpan="2" Y="0">
                                <DataBinding ColumnKey="Status" TableKey="LRP_PackingMaterialType_H" DefaultValue="100"/>
                            </ComboBox>
                            <Label Caption="状态" Key="L_Status" X="4" Y="0"/>						
                            
                            <DatePicker Caption="出库日期时间" Enable="false" Key="OutboundDateTime" OnlyDate="false" X="9" XSpan="2" Y="0">
                                <DataBinding ColumnKey="OutboundDateTime" TableKey="LRP_PackingMaterialType_H"/>
                            </DatePicker>
                            <Label Caption="出库日期时间" Key="L_OutboundDateTime" X="8" Y="0"/>

							<DatePicker Caption="完成释冷日期时间" Visible="false" Enable="false" Key="DischargEndDateTime" OnlyDate="false" X="9" XSpan="2" Y="0">
                                <DataBinding ColumnKey="DischargEndDateTime" TableKey="LRP_PackingMaterialType_H"/>
                            </DatePicker>
                            <Label Caption="完成释冷日期时间" Visible="false" Key="L_DischargEndDateTime" X="8" Y="0"/>                                           
										   
							<Label Key="DischargTimerLabel" Visible="Status==StatusValue('confirmed')" Caption="" X="8" Y="4" XSpan="3">
                                <Format ForeColor="#ff0000"/>
                            </Label>
							<Label Key="DischargTimerType" Visible="false" Caption="" X="8" Y="4" XSpan="3"/>
							<DatePicker Caption="DischargTimerStart" Visible="false" Key="DischargTimerStart" OnlyDate="false" X="8" Y="4" XSpan="3">
                                <DataBinding DefaultValue="1980-01-01 00:00:00"/>
                            </DatePicker>
							<DatePicker Caption="DischargTimerCur" Visible="false" Key="DischargTimerCur" OnlyDate="false" X="8" Y="4" XSpan="3">
                                <DataBinding DefaultValue="1980-01-01 00:00:00"/>
                            </DatePicker>
							<Label Key="StrategyDischargTimeLabel" Visible="false" Caption="-1" X="8" Y="4" XSpan="3">
                                <Format ForeColor="#ff0000"/>
                            </Label>
							<Label Key="StrategyDischargOverTimeLabel" Visible="false" Caption="-1" X="8" Y="4" XSpan="3">
                                <Format ForeColor="#ff0000"/>
                            </Label>
							
							<Dict BuddyKey="Lab_SendCityId" Caption="始发地" Enable="!ReadOnly()" ItemKey="LRP_City" Key="SendCityId" X="1" XSpan="2" Y="1">
								<DataBinding ColumnKey="SendCityId" TableKey="LRP_PackingMaterialType_H"/>						
							</Dict>
							<Label Caption="始发地" Key="Lab_SendCityId" X="0" Y="1"/>
							<NumberEditor Caption="始发地最低温度" Enable="!ReadOnly()" Key="SendMinTemp" Precision="16" Scale="3" X="5" XSpan="2" Y="1">
								<DataBinding ColumnKey="SendMinTemp" DefaultValue="-9999" TableKey="LRP_PackingMaterialType_H"/>
							</NumberEditor>
							<Label Caption="始发地最低温度" Key="Lab_SendMinTemp" X="4" Y="1"/>
							<NumberEditor Caption="始发地最高温度" Enable="!ReadOnly()" Key="SendMaxTemp" Precision="16" Scale="3" X="9" XSpan="2" Y="1">
								<DataBinding ColumnKey="SendMaxTemp" DefaultValue="-9999" TableKey="LRP_PackingMaterialType_H"/>
							</NumberEditor>
							<Label Caption="始发地最高温度" Key="Lab_SendMaxTemp" X="8" Y="1"/>
							
							<Dict BuddyKey="Lab_DestCityId" Caption="目的地" Enable="!ReadOnly()" ItemKey="LRP_City" Key="DestCityId" X="1" XSpan="2" Y="2">
								<DataBinding ColumnKey="DestCityId" TableKey="LRP_PackingMaterialType_H"/>						
							</Dict>
							<Label Caption="目的地" Key="Lab_DestCityId" X="0" Y="2"/>
							<NumberEditor Caption="目的地最低温度" Enable="!ReadOnly()" Key="DestMinTemp" Precision="16" Scale="3" X="5" XSpan="2" Y="2">
								<DataBinding ColumnKey="DestMinTemp" DefaultValue="-9999" TableKey="LRP_PackingMaterialType_H"/>
							</NumberEditor>
							<Label Caption="目的地最低温度" Key="Lab_DestMinTemp" X="4" Y="2"/>
							<NumberEditor Caption="目的地最高温度" Enable="!ReadOnly()" Key="DestMaxTemp" Precision="16" Scale="3" X="9" XSpan="2" Y="2">
								<DataBinding ColumnKey="DestMaxTemp" DefaultValue="-9999" TableKey="LRP_PackingMaterialType_H"/>
							</NumberEditor>
							<Label Caption="目的地最高温度" Key="Lab_DestMaxTemp" X="8" Y="2"/>
							
                            <TextEditor BuddyKey="Lab_Remark" Caption="备注" Enable="!ReadOnly()" Key="Remark" X="1" XSpan="6" Y="3">
                                <DataBinding ColumnKey="Remark" TableKey="LRP_PackingMaterialType_H"/>
                            </TextEditor>
                            <Label Caption="备注" Key="Lab_Remark" X="0" Y="3"/>
							<Dict BuddyKey="Lab_WarehouseCenterId" Caption="仓储中心" ItemKey="LRP_WarehouseCenter" Key="WarehouseCenterId" Visible="false" X="2" XSpan="2" Y="6">
                                <DataBinding ColumnKey="WarehouseCenterId" DefaultFormulaValue="getCurOrgID()" TableKey="LRP_PackingMaterialType_H"/>
                            </Dict>
                            <Label Caption="仓储中心" Key="Lab_WarehouseCenterId" Visible="false" X="0" Y="6"/>	
							<NumberEditor Caption="需要释冷的物料ID" Precision="16" Scale="0" Key="DischargingMaterialID" Visible="false" X="0" Y="6"/>
							<Label Caption="需要释冷的物料名称" Key="DischargingMaterialName" Visible="false" X="0" Y="6"/>
							<TextEditor BuddyKey="Lab_EnterMaterialBarCode" Caption="扫描出库物料条码" Enable="Status==StatusValue('confirmed')" Key="EnterMaterialBarCode" X="1" XSpan="6" Y="4">
								<KeyEnter>
									<![CDATA[
										//检查扫入的条码是否已存在
										var count = GetRowCount('Grid0');
										var i = 0;
										while ( i < count ) {
											if(GetCellValue('Grid0',i,"MaterialBarCode") == EnterMaterialBarCode){
												i = i + 1;
												Confirm(LocaleParaFormat('PAshow','pakey5',i),'OK','OK:{}');
												return true;
											}
											i = i + 1;
										}

										//从库存中查询对应的条码
										var dt=DBNamedQuery("QueryPackingMaterialQuant",EnterMaterialBarCode,WarehouseCenterId); 
										if(dt.size()==0)
										{									
											Confirm(LocaleString('PAshow','pakey23'),'OK','OK:{}');	
											SetFocus('EnterMaterialBarCode',true);											
											return true;
										}
											
										dt.beforefirst();
										dt.next();
										//如果有预冷时间需求，检查预冷时间是否符合
										if(dt.PreCool > 0){
											var PreCoolDate = DateAdd(dt.RecvDate,"h",dt.PreCool);
											if(ServerDate() < PreCoolDate){
												Confirm(LocaleParaFormat('PAshow','pakey24',dt.MaterialName,Format(PreCoolDate,'yyyy-MM-dd HH:mm:ss')),'OK','OK:{}');					
												SetFocus('EnterMaterialBarCode',true);
												return true;
											}
										}
										//检查并修改包装物料明细汇总的已出库数量
										var count = GetRowCount('Grid_Sum');
										var i = 0;
										var b = false;
										while ( i < count ) {
											if(GetCellValue('Grid_Sum',i,"MaterialId") == dt.PackingMaterialId){
												SetCellValue('Grid_Sum',i,'OutboundQty',GetCellValue('Grid_Sum',i,"OutboundQty") + 1);
												b = true;
												break;													
											}
											i = i + 1;
										}
										if(!b)
										{
											Confirm(LocaleParaFormat('PAshow','pakey25',dt.MaterialName),'OK','OK:{}');					
											SetFocus('EnterMaterialBarCode',true);
											return true;
										}
										
										//在出库物料明细中插入一条记录
										var index = InsertRow('Grid0',-1);
										SetCellValue('Grid0', index,'MaterialId_Outbound',dt.PackingMaterialId);
										SetCellValue('Grid0', index,'MaterialBarCode',dt.MaterialBarCode);
										SetCellValue('Grid0', index,'Qty_Outbound',1);
										SetCellValue('Grid0', index,'Status_Outbound',10);
										SetCellValue('Grid0', index,'InboundDateTime',dt.RecvDate);
										SetCellValue('Grid0', index,'StoreroomId',dt.StoreroomId);
										SetCellValue('Grid0', index,'StoreareaId',dt.StoreareaId);
										SetCellValue('Grid0', index,'LocationId',dt.LocationId);
										EnterMaterialBarCode = '';
										SetFocus('EnterMaterialBarCode',true);
										
											  ]]>
								</KeyEnter>
							</TextEditor>
                            <Label Caption="扫描出库物料条码" Key="Lab_EnterMaterialBarCode" X="0" Y="4"/>
							<RowDefCollection RowGap="8">
                                <RowDef Height="30px"/>
                                <RowDef Height="30px"/>
                                <RowDef Height="30px"/>
                                <RowDef Height="30px"/>
                                <RowDef Height="30px"/>
                                <RowDef Height="30px"/>
                                <RowDef Height="30px"/>
                                <RowDef Height="30px"/>
                            </RowDefCollection>
                            <ColumnDefCollection ColumnGap="8">
                                <ColumnDef Width="100px"/>
                                <ColumnDef Width="100px"/>
                                <ColumnDef MinWidth="50px" Width="33%"/>
                                <ColumnDef Width="30px"/>
                                <ColumnDef Width="100px"/>
                                <ColumnDef Width="100px"/>
                                <ColumnDef MinWidth="50px" Width="33%"/>
								<ColumnDef Width="30px"/>
                                <ColumnDef Width="100px"/>
                                <ColumnDef Width="100px"/>
                                <ColumnDef MinWidth="50px" Width="33%"/>
                            </ColumnDefCollection>
                        </GridLayoutPanel>                        
                    </TabPanel>
                    <TabPanel Caption="TabPanel1" Key="TabPanel1">
					<Grid Caption="物料类型明细" Key="Grid_Type">
						<GridColumnCollection>
							<GridColumn Caption="货主单号" Key="OwnerNo_Type" Width="80px" Sortable="false"/>
							<GridColumn Caption="物料类型" Key="MaterialTypeID_Type" Width="80px" Sortable="false"/>
							<GridColumn Caption="货物数量" Key="MaterialQty_Type"  Width="80px" Sortable="false"/>
							<GridColumn Caption="包装数量" Key="PackingQty_Type" Width="80px" Sortable="false"/>
							<GridColumn Caption="包装单位" Key="PackingUnitQty_Type" Width="80px" Sortable="false"/>
							<GridColumn Caption="始发地" Key="SendCityId_Type" Width="80px" Sortable="false"/>
							<GridColumn Caption="始发地最高温度" Key="SendMaxTemp_Type" Width="80px" Sortable="false"/>
							<GridColumn Caption="始发地最低温度" Key="SendMinTemp_Type" Width="80px" Sortable="false"/>
							<GridColumn Caption="目的地" Key="DestCityId_Type" Width="80px" Sortable="false"/>
							<GridColumn Caption="目的地最高温度" Key="DestMaxTemp_Type" Width="80px" Sortable="false"/>
							<GridColumn Caption="目的地最低温度" Key="DestMinTemp_Type" Width="80px" Sortable="false"/>
							<GridColumn Caption="包装方案" Key="PackingStrategyId_Type" Width="80px" Sortable="false"/>							
						</GridColumnCollection>
						<GridRowCollection>
							<GridRow Key="R4" TableKey="LRP_PMT_L">
								<GridCell Caption="货主单号" CellType="TextEditor" Enable="!ReadOnly()" Key="OwnerNo_Type">
									<DataBinding ColumnKey="OwnerNo" Required="true"/>
								</GridCell>
								<GridCell Caption="物料类型" CellType="Dict" Enable="!ReadOnly()" ItemKey="MaterialType" Key="MaterialTypeID_Type">
									<DataBinding ColumnKey="MaterialTypeID" Required="true"/>
								</GridCell>
								<GridCell Caption="货物数量" CellType="NumberEditor" Enable="!ReadOnly()" Key="MaterialQty_Type">
									<DataBinding ColumnKey="MaterialQty">
										<ValueChanged>
											<![CDATA[
												var a = ToDecimal(MaterialQty_Type);
												var b = ToDecimal(PackingUnitQty_Type);
												a = a/b;
												PackingQty_Type = ToInt(Round(a,0,'round_up'));
											]]>
										</ValueChanged>
									</DataBinding>
								</GridCell>
								<GridCell Caption="包装数量" CellType="NumberEditor" Enable="false" Key="PackingQty_Type">
									<DataBinding ColumnKey="PackingQty" CheckRule="PackingQty_Type&gt;0" ErrorInfo="数量必须大于0"/>										
								</GridCell>
								<GridCell Caption="包装单位" CellType="NumberEditor" Enable="!ReadOnly()" Key="PackingUnitQty_Type">
									<DataBinding ColumnKey="PackingUnitQty" DefaultValue="2" CheckRule="PackingUnitQty_Type&gt;0" ErrorInfo="数量必须大于0">
										<ValueChanged>
											<![CDATA[
												var a = ToDecimal(MaterialQty_Type);
												var b = ToDecimal(PackingUnitQty_Type);
												a = a/b;
												PackingQty_Type = ToInt(Round(a,0,'round_up'));
											]]>
										</ValueChanged>
									</DataBinding>									
								</GridCell>
								<GridCell Caption="始发地" CellType="Dict" Enable="!ReadOnly()" ItemKey="LRP_City" Key="SendCityId_Type">
									<DataBinding ColumnKey="SendCityId" DefaultFormulaValue="SendCityId"/>
								</GridCell>
								<GridCell Caption="始发地最高温度" CellType="NumberEditor" Enable="!ReadOnly()" Scale="3" Key="SendMaxTemp_Type">
									<DataBinding ColumnKey="SendMaxTemp"  Required="true" DefaultFormulaValue="SendMaxTemp"/>
								</GridCell>
								<GridCell Caption="始发地最低温度" CellType="NumberEditor" Enable="!ReadOnly()" Scale="3" Key="SendMinTemp_Type">
									<DataBinding ColumnKey="SendMinTemp"  Required="true" DefaultFormulaValue="SendMinTemp"/>
								</GridCell>
								<GridCell Caption="目的地" CellType="Dict" Enable="!ReadOnly()" ItemKey="LRP_City" Key="DestCityId_Type">
									<DataBinding ColumnKey="DestCityId" DefaultFormulaValue="DestCityId"/>
								</GridCell>
								<GridCell Caption="目的地最高温度" CellType="NumberEditor" Enable="!ReadOnly()" Scale="3" Key="DestMaxTemp_Type">
									<DataBinding ColumnKey="DestMaxTemp"  Required="true" DefaultFormulaValue="DestMaxTemp"/>
								</GridCell>
								<GridCell Caption="目的地最低温度" CellType="NumberEditor" Enable="!ReadOnly()" Scale="3" Key="DestMinTemp_Type">
									<DataBinding ColumnKey="DestMinTemp"  Required="true" DefaultFormulaValue="DestMinTemp"/>
								</GridCell>
								<GridCell Caption="包装方案" CellType="Dict" Enable="false" ItemKey="LRP_PackingStrategy" Key="PackingStrategyId_Type">
									<DataBinding ColumnKey="PackingStrategyId"/>
								</GridCell>
							</GridRow>
						</GridRowCollection>
					</Grid>	
					<Grid Caption="包装物料明细汇总" Key="Grid_Sum" CanInsert="false" CanDelete="false" CanShift="false" NewEmptyRow="false">
						<GridColumnCollection>
							<GridColumn Caption="物料" Key="MaterialId" Width="80px" Sortable="true"/>
							<GridColumn Caption="数量" Key="Qty" Width="80px" Sortable="true"/>							
							<GridColumn Caption="已出库数量" Key="OutboundQty" Width="80px" Sortable="true"/>	
						</GridColumnCollection>
						<GridRowCollection>
							<GridRow Key="R_Sum"  TableKey="LRP_PMT_Sum_L">
								<GridCell Caption="物料" CellType="Dict" Enable="false" ItemKey="LRP_PackingMaterial" Key="MaterialId">
									<DataBinding ColumnKey="MaterialId" Required="true"/>
								</GridCell>
								<GridCell Caption="数量" CellType="NumberEditor" Enable="false" Key="Qty">
									<DataBinding ColumnKey="Qty"/>
								</GridCell>
								<GridCell Caption="已出库数量" CellType="NumberEditor" Enable="false" Key="OutboundQty">
									<DataBinding ColumnKey="OutboundQty"/>
								</GridCell>
							</GridRow>
						</GridRowCollection>
					</Grid>
					<GridLayoutPanel Caption="出库物料明细" Key="DetailTab">
                        <Grid Caption="出库物料明细" Key="Grid0" CanInsert="false" CanDelete="false" CanShift="false" NewEmptyRow="false" X="0" XSpan="2" Y="1">
                            <GridColumnCollection>
                                <GridColumn Caption="物料" Key="MaterialId_Outbound" Width="80px" Sortable="true"/>
                                <GridColumn Caption="物料条码" Key="MaterialBarCode"  Width="80px" Sortable="true"/>
                                <GridColumn Caption="数量" Key="Qty_Outbound" Width="80px" Sortable="true"/>
                                <GridColumn Caption="状态" Key="Status_Outbound" Width="80px" Sortable="true"/>
                                <GridColumn Caption="入库时间" Key="InboundDateTime" Width="80px" Sortable="true"/>
                                <GridColumn Caption="出库时间" Key="OutboundDateTime_Outbound" Width="80px" Sortable="true"/>
                                <GridColumn Caption="完成释冷时间" Key="DischargEndDateTime_Outbound" Width="100px" Sortable="true"/>
                                <GridColumn Caption="仓间" Key="StoreroomId" Width="80px" Sortable="true"/>
                                <GridColumn Caption="库区" Key="StoreareaId" Width="80px" Sortable="true"/>
                                <GridColumn Caption="储位" Key="LocationId" Width="80px" Sortable="true"/>
                            </GridColumnCollection>
                            <GridRowCollection>
                                <GridRow Key="R3" TableKey="LRP_PMT_OT_L">
                                    <GridCell Caption="物料" CellType="Dict" Enable="false" ItemKey="LRP_PackingMaterial" Key="MaterialId_Outbound">
                                        <DataBinding ColumnKey="MaterialId" Required="true"/>
                                    </GridCell>
                                    <GridCell Caption="物料条码" CellType="TextEditor" Enable="false" Key="MaterialBarCode">
                                        <DataBinding ColumnKey="MaterialBarCode"/>
                                    </GridCell>
                                    <GridCell Caption="数量" CellType="NumberEditor" Enable="false" Key="Qty_Outbound">
                                        <DataBinding ColumnKey="Qty" CheckRule="Qty&gt;0" ErrorInfo="数量必须大于0"/>
                                    </GridCell>
									<GridCell Key="Status_Outbound" Caption="状态" CellType="ComboBox">
										<DataBinding ColumnKey="Status"/>
										<Item Caption="未出库" Key="10" Value="10"/>
										<Item Caption="已出库" Key="90" Value="90"/>
										<Item Caption="完成释冷" Key="91" Value="91"/>
										<Item Caption="释冷超时" Key="92" Value="92"/>
									</GridCell>
									<GridCell Key="InboundDateTime" Caption="入库时间" CellType="DatePicker">
										<DataBinding ColumnKey="InboundDateTime"/>
									</GridCell>
									<GridCell Key="OutboundDateTime_Outbound" Caption="出库时间" CellType="DatePicker">
										<DataBinding ColumnKey="OutboundDateTime"/>
									</GridCell>
									<GridCell Key="DischargEndDateTime_Outbound" Caption="完成释冷时间" CellType="DatePicker">
										<DataBinding ColumnKey="DischargEndDateTime"/>
									</GridCell>
                                    <GridCell Caption="仓间" CellType="Dict" Enable="false" ItemKey="LRP_Storeroom" Key="StoreroomId">
                                        <DataBinding ColumnKey="StoreroomId"/>
                                    </GridCell>									
                                    <GridCell Caption="库区" CellType="Dict" Enable="false" ItemKey="LRP_Storearea" Key="StoreareaId">
                                        <DataBinding ColumnKey="StoreareaId"/>
                                    </GridCell>
                                    <GridCell Caption="储位" CellType="Dict" Enable="false" ItemKey="LRP_Location" Key="LocationId">
                                        <DataBinding ColumnKey="LocationId"/>
                                    </GridCell>
                                </GridRow>
                            </GridRowCollection>
                        </Grid>
						<Button Caption="删除明细" Key="DeleteDetail" Enable="Status==StatusValue('confirmed')" X="0" Y="0">
							<OnClick>
								<![CDATA[
									var index = GetRowIndex('Grid0');
									if(ToInt(GetCellValue('Grid0',index,"Status_Outbound")) >= 90)
									{									
										Confirm(LocaleString('PAshow','pakey30'),'OK','OK:{}');						
										return true;
									}
									var count = GetRowCount('Grid_Sum');
									var i = 0;
									while ( i < count ) {
										if(GetCellValue('Grid_Sum',i,"MaterialId") == GetCellValue('Grid0',index,"MaterialId_Outbound")){
											SetCellValue('Grid_Sum',i,'OutboundQty',GetCellValue('Grid_Sum',i,"OutboundQty") -1);
											break;													
										}
										i = i + 1;
									}
									DeleteRow("Grid0",index);
								]]>
							</OnClick>
						</Button>
						<RowDefCollection RowGap="2">
							<RowDef Height="20px"/>
							<RowDef Height="100%"/>
						</RowDefCollection>
						<ColumnDefCollection ColumnGap="2">
							<ColumnDef Width="100px"/>
							<ColumnDef Width="100%"/>
						</ColumnDefCollection>
					</GridLayoutPanel>					
                    </TabPanel>
                    <SplitSize Size="240px"/>
                    <SplitSize Size="100%"/>
                </SplitPanel>
            </FlexFlowLayoutPanel>
        </Block>
    </Body>
    <OnLoad>
        <![CDATA[	
		
	]]>
    </OnLoad>
	<OnPostShow>
        <![CDATA[
		//根据包装的情况设置计时器
		if(Status==StatusValue('confirmed') && !IsControlNull('OutboundDateTime')){
			var DischargTime = -1;
			var	DischargOverTime = -1;
			if(GetRowCount('Grid_Type')>0){
				var PackingStrategyId = GetCellValue('Grid_Type',0,"PackingStrategyId_Type");
				if(PackingStrategyId > 0){
					var dt=DBNamedQuery("GetPackingStrategyMaterialDetail",PackingStrategyId);
					dt.beforefirst();
					while(dt.next()){							
						if(dt.Discharging>0){
							DischargTime = dt.Discharging;
							DischargOverTime = dt.DischargingOverTime;
							DischargingMaterialID = dt.PackingMaterialID;
							DischargingMaterialName = dt.MaterialName;
							StrategyDischargTimeLabel = dt.Discharging;
							StrategyDischargOverTimeLabel = dt.DischargingOverTime;
						}
					}
				}
				if(DischargTime >0 && DischargTimerType == ""){		
					if(!IsControlNull('DischargEndDateTime')){
						if(DischargEndDateTime > OutboundDateTime){
							DischargTimerType = "4";
							DischargTimerLabel = "完成释冷";
							StopTimerTask('DischargTimer');
							return true;
						}
					}
					
					var d = ServerDate();
					var diff = DateDiff(OutboundDateTime,d,"s");
					if(diff > DischargTime * 60){
						//释冷时间已过
						diff = diff - DischargTime * 60;
						if(diff > DischargOverTime * 60){
							//释冷已经超时
							DischargTimerType = "3";
							DischargTimerLabel = "释冷已经超时";
							StopTimerTask('DischargTimer');
						}
						else{
							diff = DischargOverTime * 60 - diff;
							DischargTimerType = "2";
							DischargTimerCur = DateAdd(DischargTimerStart,"s",diff);
							StartTimerTask('DischargTimer');
						}
					}
					else{			
						diff = DischargTime * 60 - diff;
						DischargTimerType = "1";
						DischargTimerCur = DateAdd(DischargTimerStart,"s",diff);
						StartTimerTask('DischargTimer');
					}
				}
			}
		}
	]]>
    </OnPostShow>
	<QueryCollection>        
        <Query Description="获得某个包装方案的所有物料明细，并排序" Key="GetPackingStrategyMaterialDetail">
            <Statement>
                <![CDATA[select m.Name as MaterialName,m.PreCool,m.Discharging,m.DischargingOverTime,pl.PackingMaterialID,pl.Qty from LRP_PackingStrategy_L pl join LRP_PackingMaterial m on pl.PackingMaterialID = m.oid where pl.SOID=? order by pl.PackingOrder desc]]>
            </Statement>
            <ParameterCollection>
                <Parameter DataType="Varchar"/>
            </ParameterCollection>
        </Query>
		<Query Description="从库存表中查询扫入条码对应的库存记录" Key="QueryPackingMaterialQuant">
            <Statement>
                <![CDATA[select m.Name as MaterialName,m.PreCool,m.Discharging,m.DischargingOverTime,q.PackingMaterialId,q.MaterialBarCode,q.RecvDate,q.StoreroomId,q.StoreareaId,q.LocationId from LRP_PackingMaterialQuant q join LRP_PackingMaterial m on q.PackingMaterialID = m.oid where q.OnhandQty > 0 and q.MaterialBarCode=? and q.WarehouseCenterId=?]]>
            </Statement>
            <ParameterCollection>
                <Parameter DataType="Varchar"/>
				<Parameter DataType="Long"/>
            </ParameterCollection>
        </Query>
    </QueryCollection>
	<TimerTaskCollection>
        <TimerTask Delay="0" Enable="true" Key="DischargTimer" Period="1000" Repeat="True">
            <![CDATA[				
			if(DischargTimerType == "" || Status!=StatusValue('confirmed')){ StopTimerTask('DischargTimer');return true;}
			DischargTimerCur = DateAdd(DischargTimerCur,"s",-1);
            if(DischargTimerType == "1"){
				DischargTimerLabel = "释冷中，剩余时间:" + Format(DischargTimerCur,'HH:mm:ss');
				if(DischargTimerCur <= DischargTimerStart){
					DischargTimerType = "2";
					
					var DischargTime = -1;
					var	DischargOverTime = -1;
					if(GetRowCount('Grid_Type')>0){
						var PackingStrategyId = GetCellValue('Grid_Type',0,"PackingStrategyId_Type");
						if(PackingStrategyId > 0){
							var dt=DBNamedQuery("GetPackingStrategyMaterialDetail",PackingStrategyId);
							dt.beforefirst();
							while(dt.next()){							
								if(dt.Discharging>0){
									DischargTime = dt.Discharging;
									DischargOverTime = dt.DischargingOverTime;
								}
							}
						}
					}				
					if(DischargTime >0){
						DischargTimerCur = DateAdd(DischargTimerStart,"n",DischargOverTime);
						DischargTimerLabel = "等待释冷完成，释冷超时时间:" + Format(DischargTimerCur,'HH:mm:ss');
					}
				}
			}
			else{
				if(DischargTimerType == "2"){
					DischargTimerLabel = "等待释冷完成，释冷超时时间:" + Format(DischargTimerCur,'HH:mm:ss');
					if(DischargTimerCur <= DischargTimerStart){
						DischargTimerType = "3";
						DischargTimerLabel = "释冷已经超时";
						StopTimerTask('DischargTimer');
					}
				}
				if(DischargTimerType == "3"){			
					DischargTimerLabel = "释冷已经超时";
					StopTimerTask('DischargTimer');
				}
				if(DischargTimerType == "4"){			
					DischargTimerLabel = "完成释冷";
					StopTimerTask('DischargTimer');
				}
			}
        ]]>
        </TimerTask>
    </TimerTaskCollection>
</Form>
