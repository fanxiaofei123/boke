<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<Form Caption="包装单" FormType="Entity" Key="V_PackingOutbound">
    <DataSource RefObjectKey="LRP_PackingOutbound"/>
    <OperationCollection>
        <Operation Caption="新增" Key="New" Visible="ReadOnly()">
            <Action>
                <![CDATA[
				New('V_PackingOutbound');
			]]>
            </Action>
        </Operation>
        <Operation Caption="保存" Key="Save" ShortCuts="Ctrl+S" Visible="!ReadOnly()&amp;&amp;Status==100">
            <Action>
                <![CDATA[			
					var DischargingMaterialID_V = DischargingMaterialID;
					var PackingIndex_V = PackingIndex;
					var PackingCount_V = PackingCount;
					SaveData();
					UpdateView();
					DischargingMaterialID = DischargingMaterialID_V;
					PackingIndex = PackingIndex_V;
					PackingCount = PackingCount_V;
				]]>
            </Action>
        </Operation>
        <Operation Caption="编辑" Key="Edit" Visible="ReadOnly()&amp;&amp;Status==StatusValue('prepared')">
            <Action>
                <![CDATA[Edit();]]>
            </Action>
        </Operation>
        <Operation Caption="删除" Key="Delete" Visible="ReadOnly()&amp;&amp;Status==StatusValue('prepared')">
            <Action>
                <![CDATA[
			Confirm(LocaleString('CommonDef','key2'),'YES_NO',{YES:{DeleteData();UpdateView();Close();},NO:{}});
			
			]]>
            </Action>
        </Operation>
        <Operation Caption="取消" Key="Cancel" RefKey="Cancel"/>
        <Operation Caption="确认" Key="Confirm" Visible="ReadOnly()&amp;&amp;Status==StatusValue('prepared')">
            <Action>
                <![CDATA[
				var DischargingMaterialID_V = DischargingMaterialID;
				Status=StatusValue('confirmed');SaveData();UpdateView();
				DischargingMaterialID = DischargingMaterialID_V;
				PackingIndex = 0;
				CurrentPackingMaterialLabel = "当前包装物料：" + GetCellValue('Grid_Strategy',PackingIndex,"MaterialName");
				]]>
            </Action>
            <ExceptionHandler>
                <![CDATA[				
				Status=StatusValue('prepared');
			]]>
            </ExceptionHandler>
        </Operation>
        <Operation Caption="撤销确认" Key="Confirm-R" Visible="ReadOnly()&amp;&amp;Status==StatusValue('confirmed')">
            <Action>
                <![CDATA[
				if(GetRowCount('Grid_Finish')>0){
					Confirm(LocaleString('PAshow','pakey7'),'OK','OK:{}');	
					return true;
				}
				var count = GetRowCount('Grid0');
				var i = 0;
				var b = false;
				while ( i < count ) {
					if(ToInt(GetCellValue('Grid0',i,"Status_Outbound")) >= 90){
						b = true;
						break;
					}
					i = i + 1;
				}
				if(b){
					Confirm(LocaleString('PAshow','pakey8'),'OK','OK:{}');	
					return true;
				}
				Confirm(LocaleString('PAshow','pakey9'),'YES_NO',{YES:{
					ClearAllRows('Grid0');
					var count1 = GetRowCount('Grid_Sum');
					var j = 0;
					while ( j < count1 ) {
						SetCellValue('Grid_Sum',j,'OutboundQty',0);
						j = j + 1;
					}
					var DischargingMaterialID_V = DischargingMaterialID;
					Status=StatusValue('prepared');SaveData();UpdateView();
					DischargingMaterialID = DischargingMaterialID_V;
				},NO:{}});
				]]>
            </Action>
            <ExceptionHandler>
                <![CDATA[				
				Status=StatusValue('confirmed');
			]]>
            </ExceptionHandler>
        </Operation>
        <Operation Caption="整储位出库" Key="LocationOutbound" Visible="Status==StatusValue('confirmed')">
            <Action>
                <![CDATA[
			ShowModal('LocationOutbound');
			
			]]>
            </Action>
        </Operation>
        <Operation Caption="出库" Key="Outbound" Visible="Status==StatusValue('confirmed')">
            <Action>
                <![CDATA[			
					var count = GetRowCount('Grid_Sum');
					var i = 0;
					while ( i < count ) {
						if(GetCellValue('Grid_Sum',i,"MaterialId") == DischargingMaterialID){
							if(GetCellValue('Grid_Sum',i,"OutboundQty") < GetCellValue('Grid_Sum',i,"Qty")){
								var s = LocaleParaFormat('PAshow','pakey10',DischargingMaterialName) ;
								Confirm(s,'OK','OK:{}');	
								return true;
							}
							break;													
						}
						i = i + 1;
					}
					var DischargingMaterialID_V = DischargingMaterialID;
					var PackingIndex_V = PackingIndex;
					
					var Date = ServerDate();
					count = GetRowCount('Grid0');
					i = 0;
					var OutboundCount = 0;
					while ( i < count ) {
						if(GetCellValue('Grid0',i,"Status_Outbound") == 10){
							SetCellValue('Grid0',i,"Status_Outbound",90);
							SetCellValue('Grid0',i,"OutboundDateTime_Outbound",Date);		
							OutboundCount = OutboundCount + 1;							
						}
						i = i + 1;
					}
					if(OutboundCount==0){
						Confirm(LocaleString('PAshow','pakey11'),'OK','OK:{}');	
						return true;
					}
					OutboundDateTime = Date;
					SaveData();UpdateView();
					DischargingMaterialID = DischargingMaterialID_V;
					PackingIndex = PackingIndex_V;
					SetFocus('EnterFinishMaterialBarCode',true);
					
					//启动释冷计时器
					count = GetRowCount('Grid_Strategy');
					i = 0;
					var index = -1;
					while ( i < count ) {
						if(GetCellValue('Grid_Strategy',i,"Discharging") > 0){
							index = i;
							break;
						}
						i = i + 1;
					}
					if(index >= 0){ 
						var DischargTime = GetCellValue('Grid_Strategy',index,"Discharging");
						var DischargOverTime = GetCellValue('Grid_Strategy',index,"DischargingOverTime");
						DischargTimerType = "1";
						var d = GetValue('DischargTimerStart');
						DischargTimerCur = DateAdd(d,"n",DischargTime);
						StartTimerTask('DischargTimer');
					}
				]]>
            </Action>
        </Operation>
        <Operation Caption="完成释冷" Key="DischargEnd" Visible="Status==StatusValue('confirmed')">
            <Action>
                <![CDATA[					
					var DischargingMaterialID_V = DischargingMaterialID;
					var PackingIndex_V = PackingIndex;					
					
					//检查需要释冷的材料
					var count = GetRowCount('Grid_Strategy');
					var i = 0;
					var index = -1;
					while ( i < count ) {
						if(GetCellValue('Grid_Strategy',i,"Discharging") > 0){
							index = i;
							break;
						}
						i = i + 1;
					}
					
					if(index < 0){
						return true;
					}
					var DischargTime = GetCellValue('Grid_Strategy',index,"Discharging");
					var DischargOverTime = GetCellValue('Grid_Strategy',index,"DischargingOverTime");
					var DischargMaterialID = GetCellValue('Grid_Strategy',index,"MaterialId_Strategy");
					var CurDate = ServerDate();
					
					var LackDischargCount = 0;
					var OverDischargCount = 0;
					var DischargCount = 0;
					count = GetRowCount('Grid0');
					i = 0;
					while ( i < count ) {
						if(GetCellValue('Grid0',i,"MaterialId_Outbound") == DischargMaterialID && GetCellValue('Grid0',i,"Status_Outbound") == 90){
							var DischargDate = GetCellValue('Grid0',i,"OutboundDateTime_Outbound");
							DischargDate = DateAdd(DischargDate,"n",DischargTime);
							if(CurDate < DischargDate){
								LackDischargCount = LackDischargCount + 1;
							}
						}
						i = i + 1;
					}
					
					if(LackDischargCount > 0){
						Confirm(LocaleParaFormat('PAshow','pakey3',LackDischargCount),'OK','OK:{}');											
						return true;
					}
					
					i = 0;
					while ( i < count ) {
						if(GetCellValue('Grid0',i,"MaterialId_Outbound") == DischargMaterialID && GetCellValue('Grid0',i,"Status_Outbound") == 90){
							var DischargDate = GetCellValue('Grid0',i,"OutboundDateTime_Outbound");
							DischargDate = DateAdd(DischargDate,"n",DischargTime);
							DischargDate = DateAdd(DischargDate,"n",DischargOverTime);
							if(CurDate > DischargDate){
								OverDischargCount = OverDischargCount + 1;
								SetCellValue('Grid0',i,"Status_Outbound",92);
							}
							else{
								DischargCount = DischargCount + 1;
								SetCellValue('Grid0',i,"Status_Outbound",91);
							}
							SetCellValue('Grid0',i,"DischargEndDateTime_Outbound",CurDate);							
						}
						i = i + 1;
					}
					if(DischargCount + OverDischargCount==0){
						Confirm(LocaleString('PAshow','pakey13'),'OK','OK:{}');	
						return true;
					}
					DischargEndDateTime = CurDate;
					SaveData();UpdateView();
					DischargingMaterialID = DischargingMaterialID_V;
					PackingIndex = PackingIndex_V;				
					
					//关闭释冷计时器
					DischargTimerType = "4";
					DischargTimerLabel = "完成释冷";
					StopTimerTask('DischargTimer');
					
					if(OverDischargCount > 0){
						Confirm(LocaleParaFormat('PAshow','pakey14',OverDischargCount),'OK','OK:{}');											
						return true;
					}
				]]>
            </Action>
        </Operation>
        <Operation Caption="完成" Key="Finish" Visible="Status==StatusValue('confirmed')">
            <Action>
                <![CDATA[				
					if(GetRowCount('Grid0',false)<=0){
						Confirm(LocaleString('CommonDef','key1'),'OK','OK:{}');	
						return true;
					}
					if(PackingIndex > 0 || GetCellValue('Grid_Strategy' ,PackingIndex ,"FinishQty_Strategy") > 0){
						Confirm(LocaleString('PAshow','pakey15'),'OK','OK:{}');	
						return true;
					}
					var s = LocaleString('CommonDef','key3');
					if(FinishedPackingQty < PackingQty){
						s = LocaleString('PAshow','pakey16');
					}
					Confirm(s,'YES_NO',{YES:{
						var DischargingMaterialID_V = DischargingMaterialID;
						SetValue('FinishDateTime',ServerDate());
						Status=StatusValue('finished');						
						SaveData();
						UpdateView();
						DischargingMaterialID = DischargingMaterialID_V;
						PackingIndex = 0;
						CurrentPackingMaterialLabel = "";
					},NO:{}});
				]]>
            </Action>
            <ExceptionHandler>
                <![CDATA[				
				Status=StatusValue('confirmed');
			]]>
            </ExceptionHandler>
        </Operation>
        <Operation Caption="撤销完成" Key="Finish-R" Visible="ReadOnly()&amp;&amp;Status==StatusValue('finished')">
            <Action>
                <![CDATA[
					Confirm(LocaleString('CommonDef','key4'),'YES_NO',{YES:{					
						var DischargingMaterialID_V = DischargingMaterialID;
						Status=StatusValue('confirmed');SaveData();UpdateView();
						DischargingMaterialID = DischargingMaterialID_V;
						PackingIndex = 0;
						CurrentPackingMaterialLabel = "";
					},NO:{}});
				]]>
            </Action>
            <ExceptionHandler>
                <![CDATA[				
				Status=StatusValue('finished');
			]]>
            </ExceptionHandler>
        </Operation>
        <Operation Caption="关闭界面" Key="Close" RefKey="Close"/>
    </OperationCollection>
    <QueryCollection>
        <Query Description="获得某个包装方案的所有物料明细，并排序" Key="GetPackingStrategyMaterialDetail">
            <Statement>
                <![CDATA[select m.Name as MaterialName,m.PreCool,m.Discharging,m.DischargingOverTime,pl.PackingMaterialID,pl.Qty from LRP_PackingStrategy_L pl join LRP_PackingMaterial m on pl.PackingMaterialID = m.oid where pl.SOID=? order by pl.PackingOrder]]>
            </Statement>
            <ParameterCollection>
                <Parameter DataType="Varchar"/>
            </ParameterCollection>
        </Query>
        <Query Description="从库存表中查询扫入条码对应的库存记录" Key="QueryPackingMaterialQuant">
            <Statement>
                <![CDATA[select m.Name as MaterialName,m.PreCool,m.Discharging,m.DischargingOverTime,q.PackingMaterialId,q.MaterialBarCode,q.RecvDate,q.StoreroomId,q.StoreareaId,q.LocationId from LRP_PackingMaterialQuant q join LRP_PackingMaterial m on q.PackingMaterialID = m.oid where q.OnhandQty > 0 and q.MaterialBarCode=? and q.WarehouseCenterId=?]]>
            </Statement>
            <ParameterCollection>
                <Parameter DataType="Varchar"/>
                <Parameter DataType="Long"/>
            </ParameterCollection>
        </Query>
    </QueryCollection>
    <Body>
        <Block>
            <FlexFlowLayoutPanel Key="main">
                <ToolBar Height="pref" Key="main_toolbar">
                    <ToolBarItemCollection/>
                </ToolBar>
                <SplitPanel Height="100%" Key="main_split" Orientation="Vertical">
                    <TabPanel Caption="TabPanel0" Key="TabPanel0">
                        <GridLayoutPanel Caption="基本信息" Key="BasicTab" Padding="10px" OverflowX="Scroll" OverflowY="Scroll">
                            <TextEditor Caption="出库单号" Enable="false" Key="No" X="1" XSpan="2" Y="0" Visible="false">
                                <DataBinding ColumnKey="No" TableKey="LRP_PackingOutbound_H"/>
                            </TextEditor>
                            <Label Caption="出库单号" Key="L_No" X="0" Y="0" Visible="false"/>
                            <TextEditor Caption="货主单号" Enable="!ReadOnly()" Key="OwnerNo" X="1" XSpan="2" Y="0">
                                <DataBinding ColumnKey="OwnerNo" TableKey="LRP_PackingOutbound_H"/>
                            </TextEditor>
                            <Label Caption="货主单号" Key="L_OwnerNo" X="0" Y="0"/>
                            <ComboBox Caption="状态" Enable="false" Key="Status" SourceType="Status" X="5" XSpan="2" Y="0">
                                <DataBinding ColumnKey="Status" TableKey="LRP_PackingOutbound_H" DefaultValue="100"/>
                            </ComboBox>
                            <Label Caption="状态" Key="L_Status" X="4" Y="0"/>
                            <DatePicker Caption="出库日期时间" Enable="false" Key="OutboundDateTime" X="1" XSpan="2" Y="1">
                                <DataBinding ColumnKey="OutboundDateTime" TableKey="LRP_PackingOutbound_H"/>
                            </DatePicker>
                            <Label Caption="出库日期时间" Key="L_OutboundDateTime" X="0" Y="1"/>
                            <DatePicker Caption="完成释冷日期时间" Visible="false" Enable="false" Key="DischargEndDateTime" X="1" XSpan="2" Y="1">
                                <DataBinding ColumnKey="DischargEndDateTime" TableKey="LRP_PackingOutbound_H"/>
                            </DatePicker>
                            <Label Caption="完成释冷日期时间" Visible="false" Key="L_DischargEndDateTime" X="0" Y="1"/>
                            <DatePicker Caption="完成日期时间" Enable="false" Key="FinishDateTime" X="5" XSpan="2" Y="1">
                                <DataBinding ColumnKey="FinishDateTime" TableKey="LRP_PackingOutbound_H"/>
                            </DatePicker>
                            <Label Caption="完成日期时间" Key="L_FinishDateTime" X="4" Y="1"/>
                            <Dict BuddyKey="Lab_SendCityId" Caption="始发地" Enable="!ReadOnly()" ItemKey="LRP_City" Key="SendCityId" X="1" XSpan="2" Y="6">
                                <DataBinding ColumnKey="SendCityId" TableKey="LRP_PackingOutbound_H"/>
                            </Dict>
                            <Label Caption="始发地" Key="Lab_SendCityId" X="0" Y="6"/>
                            <NumberEditor Caption="始发地最低温度" Enable="!ReadOnly()" Key="SendMinTemp" Scale="3" X="5" XSpan="2" Y="6" BuddyKey="Lab_SendMinTemp">
                                <DataBinding ColumnKey="SendMinTemp" TableKey="LRP_PackingOutbound_H" DefaultValue="-9999"/>
                            </NumberEditor>
                            <Label Caption="始发地最低温度" Key="Lab_SendMinTemp" X="4" Y="6"/>
                            <NumberEditor Caption="始发地最高温度" Enable="!ReadOnly()" Key="SendMaxTemp" Scale="3" X="9" XSpan="2" Y="6" BuddyKey="Lab_SendMaxTemp">
                                <DataBinding ColumnKey="SendMaxTemp" TableKey="LRP_PackingOutbound_H" DefaultValue="-9999"/>
                            </NumberEditor>
                            <Label Caption="始发地最高温度" Key="Lab_SendMaxTemp" X="8" Y="6"/>
                            <Dict BuddyKey="Lab_DestCityId" Caption="目的地" Enable="!ReadOnly()" ItemKey="LRP_City" Key="DestCityId" X="1" XSpan="2" Y="7">
                                <DataBinding ColumnKey="DestCityId" TableKey="LRP_PackingOutbound_H"/>
                            </Dict>
                            <Label Caption="目的地" Key="Lab_DestCityId" X="0" Y="7"/>
                            <NumberEditor Caption="目的地最低温度" Enable="!ReadOnly()" Key="DestMinTemp" Scale="3" X="5" XSpan="2" Y="7" BuddyKey="Lab_DestMinTemp">
                                <DataBinding ColumnKey="DestMinTemp" TableKey="LRP_PackingOutbound_H" DefaultValue="-9999"/>
                            </NumberEditor>
                            <Label Caption="目的地最低温度" Key="Lab_DestMinTemp" X="4" Y="7"/>
                            <NumberEditor Caption="目的地最高温度" Enable="!ReadOnly()" Key="DestMaxTemp" Scale="3" X="9" XSpan="2" Y="7" BuddyKey="Lab_DestMaxTemp">
                                <DataBinding ColumnKey="DestMaxTemp" TableKey="LRP_PackingOutbound_H" DefaultValue="-9999"/>
                            </NumberEditor>
                            <Label Caption="目的地最高温度" Key="Lab_DestMaxTemp" X="8" Y="7"/>
                            <NumberEditor Caption="货物数量" Enable="!ReadOnly()" Key="MaterialQty" Scale="0" X="1" XSpan="2" Y="4">
                                <DataBinding ColumnKey="MaterialQty" TableKey="LRP_PackingOutbound_H" DefaultValue="0">
                                    <ValueChanged>
                                        <![CDATA[
											var a = ToDecimal(MaterialQty);
											var b = ToDecimal(PackingUnitQty);
											a = a/b;
											PackingQty = ToInt(Round(a,0,'round_up'));
										]]>
                                    </ValueChanged>
                                </DataBinding>
                            </NumberEditor>
                            <Label Caption="货物数量" Key="Lab_MaterialQty" X="0" Y="4"/>
                            <NumberEditor Caption="包装数量" Enable="false" Key="PackingQty" Scale="0" X="5" XSpan="2" Y="4">
                                <DataBinding ColumnKey="PackingQty" TableKey="LRP_PackingOutbound_H"/>
                            </NumberEditor>
                            <Label Caption="包装数量" Key="Lab_PackingQty" X="4" Y="4"/>
                            <NumberEditor Caption="完成包装数量" Enable="false" Key="FinishedPackingQty" Scale="0" X="9" XSpan="2" Y="4">
                                <DataBinding ColumnKey="FinishedPackingQty" TableKey="LRP_PackingOutbound_H" DefaultValue="0"/>
                            </NumberEditor>
                            <Label Caption="完成包装数量" Key="Lab_FinishedPackingQty" X="8" Y="4"/>
                            <NumberEditor Caption="一次扫描包装数量" Enable="true" Key="PackingCount" Scale="0" X="5" XSpan="2" Y="2" BuddyKey="Lab_PackingCount">
                                <DataBinding DefaultValue="1"/>
                            </NumberEditor>
                            <Label Caption="一次扫描包装数量" Key="Lab_PackingCount" X="4" Y="2"/>
							<NumberEditor Caption="每包装单位数量" Enable="!ReadOnly()" Key="PackingUnitQty" Scale="0" X="9" XSpan="2" Y="2" BuddyKey="Lab_PackingCount">
                                <DataBinding ColumnKey="PackingUnitQty" TableKey="LRP_PackingOutbound_H" DefaultValue="2">
									<ValueChanged>
                                        <![CDATA[
											var a = ToDecimal(MaterialQty);
											var b = ToDecimal(PackingUnitQty);
											a = a/b;
											PackingQty = ToInt(Round(a,0,'round_up'));
										]]>
                                    </ValueChanged>
                                </DataBinding>
                            </NumberEditor>
                            <Label Caption="每包装单位数量" Key="Lab_PackingUnitQty" X="8" Y="2"/>
                            <Label Key="DischargTimerLabel" Visible="Status==StatusValue('confirmed')" X="8" Y="3" XSpan="3">
                                <Format ForeColor="#ff0000"/>
                            </Label>
                            <Label Key="DischargTimerType" Visible="false" X="8" Y="1" XSpan="3"/>
                            <DatePicker Caption="DischargTimerStart" Visible="false" Key="DischargTimerStart" X="8" Y="3" XSpan="3">
                                <DataBinding DefaultValue="1980-01-01 00:00:00"/>
                            </DatePicker>
                            <DatePicker Caption="DischargTimerCur" Visible="false" Key="DischargTimerCur" X="8" Y="3" XSpan="3">
                                <DataBinding DefaultValue="1980-01-01 00:00:00"/>
                            </DatePicker>
                            <Dict BuddyKey="Lab_MaterialTypeID" Caption="物料类型" Enable="!ReadOnly()" ItemKey="MaterialType" Key="MaterialTypeID" X="9" XSpan="2" Y="0">
                                <DataBinding ColumnKey="MaterialTypeID" TableKey="LRP_PackingOutbound_H"/>
                            </Dict>
                            <Label Caption="物料类型" Key="Lab_MaterialTypeID" X="8" Y="0"/>
                            <Dict BuddyKey="Lab_PackingStrategyId" Caption="包装方案" Enable="false" ItemKey="LRP_PackingStrategy" Key="PackingStrategyId" X="9" XSpan="2" Y="1">
                                <DataBinding ColumnKey="PackingStrategyId" TableKey="LRP_PackingOutbound_H"/>
                            </Dict>
                            <Label Caption="包装方案" Key="Lab_PackingStrategyId" X="8" Y="1"/>
                            <Button Caption="匹配方案" Enable="!ReadOnly()" Key="GetPackingStrategy" X="8" Y="5" XSpan="3">
                                <OnClick>
                                    <![CDATA[
										if(SendMinTemp<-100){
											Confirm(LocaleString('PAshow','pakey17'),'OK','OK:{}');
											SetFocus('SendMinTemp',true);
											return true;
										}
										if(SendMaxTemp<-100){
											Confirm(LocaleString('PAshow','pakey18'),'OK','OK:{}');
											SetFocus('SendMaxTemp',true);
											return true;
										}
										if(DestMinTemp<-100){
											Confirm(LocaleString('PAshow','pakey19'),'OK','OK:{}');
											SetFocus('DestMinTemp',true);
											return true;
										}
										if(DestMaxTemp<-100){
											Confirm(LocaleString('PAshow','pakey20'),'OK','OK:{}');
											SetFocus('DestMaxTemp',true);
											return true;
										}
										if(MaterialQty<=0){
											Confirm(LocaleString('PAshow','pakey21'),'OK','OK:{}');
											SetFocus('MaterialQty',true);
											return true;
										}
										
										//调用二次开发获取的匹配的包装方案
										PackingStrategyId = InvokeService("LRP_GetPackingStrategy", false, false,SendMinTemp,SendMaxTemp,DestMinTemp,DestMaxTemp,MaterialTypeID);
										ClearAllRows('Grid_Sum',false);
										ClearAllRows('Grid_Strategy',false);
										if(PackingStrategyId<0){
											Confirm(LocaleString('PAshow','pakey22'),'OK','OK:{}');
											return true;
										}
										var dt=DBNamedQuery("GetPackingStrategyMaterialDetail",PackingStrategyId);
										dt.beforefirst();
										var addindex = 0;
										while(dt.next()){
											var index = InsertRow('Grid_Strategy',addindex);
											SetCellValue('Grid_Strategy', index,'MaterialId_Strategy',dt.PackingMaterialID);
											SetCellValue('Grid_Strategy', index,'MaterialName',dt.MaterialName);
											SetCellValue('Grid_Strategy', index,'Qty_Strategy',dt.Qty);
											SetCellValue('Grid_Strategy', index,'FinishQty_Strategy',0);
											SetCellValue('Grid_Strategy', index,'PreCool',dt.PreCool);
											SetCellValue('Grid_Strategy', index,'Discharging',dt.Discharging);
											SetCellValue('Grid_Strategy', index,'DischargingOverTime',dt.DischargingOverTime);
											
											index = InsertRow('Grid_Sum',addindex);
											SetCellValue('Grid_Sum', index,'MaterialId',dt.PackingMaterialID);
											SetCellValue('Grid_Sum', index,'Qty',dt.Qty*PackingQty);
											SetCellValue('Grid_Sum', index,'OutboundQty',0);
											SetCellValue('Grid_Sum', index,'FinishedQty',0);
											addindex = addindex + 1;
											if(dt.Discharging>0){
												DischargingMaterialID = dt.PackingMaterialID;
												DischargingMaterialName = dt.MaterialName;
											}
										}
										PackingIndex = 0;
										
									]]>
                                </OnClick>
                            </Button>
                            <TextEditor BuddyKey="Lab_Remark" Caption="备注" Enable="!ReadOnly()" Key="Remark" X="1" XSpan="6" Y="5">
                                <DataBinding ColumnKey="Remark" TableKey="LRP_PackingOutbound_H"/>
                            </TextEditor>
                            <Label Caption="备注" Key="Lab_Remark" X="0" Y="5"/>
                            <Dict BuddyKey="Lab_WarehouseCenterId" Caption="仓储中心" ItemKey="LRP_WarehouseCenter" Key="WarehouseCenterId" Visible="false" X="2" XSpan="2" Y="6">
                                <DataBinding ColumnKey="WarehouseCenterId" DefaultFormulaValue="getCurOrgID()" TableKey="LRP_PackingOutbound_H"/>
                            </Dict>
                            <Label Caption="仓储中心" Key="Lab_WarehouseCenterId" Visible="false" X="0" Y="6"/>
                            <Label Key="DoOnShow" Visible="false" X="0" Y="6"/>
                            <NumberEditor Caption="需要释冷的物料ID" Scale="0" Key="DischargingMaterialID" Visible="false" X="0" Y="6"/>
                            <Label Caption="需要释冷的物料名称" Key="DischargingMaterialName" Visible="false" X="0" Y="6"/>
                            <NumberEditor Caption="来源类型" Scale="0" Key="SourceType" Visible="false" X="0" Y="6">
                                <DataBinding ColumnKey="SourceType" TableKey="LRP_PackingOutbound_H" DefaultValue="0"/>
                            </NumberEditor>
                            <TextEditor BuddyKey="Lab_EnterMaterialBarCode" Caption="扫描出库物料条码" Enable="Status==StatusValue('confirmed')" Key="EnterMaterialBarCode" X="1" XSpan="2" Y="2">
                                <KeyEnter>
                                    <![CDATA[
										//检查扫入的条码是否已存在
										var count = GetRowCount('Grid0');
										var i = 0;
										while ( i < count ) {
											if(GetCellValue('Grid0',i,"MaterialBarCode") == EnterMaterialBarCode){
												i = i + 1;
												Confirm(LocaleParaFormat('PAshow','pakey5',i),'OK','OK:{}');
												return true;
											}
											i = i + 1;
										}

										//从库存中查询对应的条码
										var dt=DBNamedQuery("QueryPackingMaterialQuant",EnterMaterialBarCode,WarehouseCenterId); 
										if(dt.size()==0)
										{									
											Confirm(LocaleString('PAshow','pakey23'),'OK','OK:{}');	
											SetFocus('EnterMaterialBarCode',true);											
											return true;
										}
											
										dt.beforefirst();
										dt.next();
										//如果有预冷时间需求，检查预冷时间是否符合
										if(dt.PreCool > 0){
											var PreCoolDate = DateAdd(dt.RecvDate,"h",dt.PreCool);
											if(ServerDate() < PreCoolDate){
												Confirm(LocaleParaFormat('PAshow','pakey3',dt.MaterialName,Format(PreCoolDate,'yyyy-MM-dd HH:mm:ss')),'OK','OK:{}');					
												SetFocus('EnterMaterialBarCode',true);
												return true;
											}
										}
										//检查并修改包装物料明细汇总的已出库数量
										var count = GetRowCount('Grid_Sum');
										var i = 0;
										var b = false;
										while ( i < count ) {
											if(GetCellValue('Grid_Sum',i,"MaterialId") == dt.PackingMaterialId){
												SetCellValue('Grid_Sum',i,'OutboundQty',GetCellValue('Grid_Sum',i,"OutboundQty") + 1);
												b = true;
												break;													
											}
											i = i + 1;
										}
										if(!b)
										{
											Confirm(LocaleParaFormat('PAshow','pakey25',dt.MaterialName),'OK','OK:{}');					
											SetFocus('EnterMaterialBarCode',true);
											return true;
										}
										
										//在出库物料明细中插入一条记录
										var index = InsertRow('Grid0',-1);
										SetCellValue('Grid0', index,'MaterialId_Outbound',dt.PackingMaterialId);
										SetCellValue('Grid0', index,'MaterialBarCode',dt.MaterialBarCode);
										SetCellValue('Grid0', index,'Qty_Outbound',1);
										SetCellValue('Grid0', index,'Status_Outbound',10);
										SetCellValue('Grid0', index,'InboundDateTime',dt.RecvDate);
										SetCellValue('Grid0', index,'StoreroomId',dt.StoreroomId);
										SetCellValue('Grid0', index,'StoreareaId',dt.StoreareaId);
										SetCellValue('Grid0', index,'LocationId',dt.LocationId);
										SetCellValue('Grid0', index,'SourceType_Outbound',0);
										EnterMaterialBarCode = '';
										SetFocus('EnterMaterialBarCode',true);
										
											  ]]>
                                </KeyEnter>
                            </TextEditor>
                            <Label Caption="扫描出库物料条码" Key="Lab_EnterMaterialBarCode" X="0" Y="2"/>
                            <Label Key="CurrentPackingMaterialLabel" Visible="Status==StatusValue('confirmed')" X="4" Y="3" XSpan="3">
                                <Format ForeColor="#ff0000"/>
                            </Label>
							<NumberEditor Caption="当前包装到的明细Index" Scale="0" Key="PackingIndex" Visible="false" X="0" Y="6"/>                            
							<TextEditor BuddyKey="Lab_EnterFinishMaterialBarCode" Caption="扫描包装物料条码" Enable="Status==StatusValue('confirmed')" Key="EnterFinishMaterialBarCode" X="1" XSpan="2" Y="3">
                                <KeyEnter>
                                    <![CDATA[	
										//检查扫入的条码是否已存在
										
										var EnterMaterialCode = EnterFinishMaterialBarCode;
										var count = GetRowCount('Grid_Finish');
										var i = 0;
										while ( i < count ) {
											if(GetCellValue('Grid_Finish',i,"MaterialBarCode_Finish") == EnterMaterialCode){
												i = i + 1;
												Confirm(LocaleParaFormat('PAshow','pakey5',i),'OK','OK:{}');
												SetFocus('EnterFinishMaterialBarCode',true);
												return true;
											}
											i = i + 1;
										}
										
										//检查扫入的条码是否存在于出库明细中
										var OutboundIndex = -1;
										count = GetRowCount('Grid0');
										i = 0;
										var b = false;
										while ( i < count ) {
											if(GetCellValue('Grid0',i,"MaterialBarCode") == EnterMaterialCode){
												if(ToInt(GetCellValue('Grid0',i,"Status_Outbound")) < 90){
													Confirm(LocaleString('PAshow','pakey26'),'OK','OK:{}');
													SetFocus('EnterFinishMaterialBarCode',true);
													return true;
												}
												OutboundIndex = i;
												b = true;
												break;
											}
											i = i + 1;
										}
										if(!b){
											//如果扫入的是不需要释冷的包材，则直接作出库操作
											
											//从库存中查询对应的条码
											var dt=DBNamedQuery("QueryPackingMaterialQuant",EnterMaterialCode,WarehouseCenterId); 
											if(dt.size()==0)
											{									
												Confirm(LocaleString('PAshow','pakey23'),'OK','OK:{}');	
												SetFocus('EnterFinishMaterialBarCode',true);											
												return true;
											}
											
											dt.beforefirst();
											dt.next();
											//如果有预冷时间需求，则不准出库
											if(dt.PreCool > 0){
												Confirm(LocaleString('PAshow','pakey27'),'OK','OK:{}');
												SetFocus('EnterFinishMaterialBarCode',true);
												return true;											
											}
											
											//检查并修改包装物料明细汇总的已出库数量
											count = GetRowCount('Grid_Sum');
											i = 0;
											b = false;
											while ( i < count ) {
												if(GetCellValue('Grid_Sum',i,"MaterialId") == dt.PackingMaterialId){
													SetCellValue('Grid_Sum',i,'OutboundQty',GetCellValue('Grid_Sum',i,"OutboundQty") + 1);
													b = true;
													break;													
												}
												i = i + 1;
											}
											if(!b){
												Confirm(LocaleParaFormat('PAshow','pakey25',dt.MaterialName),'OK','OK:{}');					
												SetFocus('EnterFinishMaterialBarCode',true);
												return true;
											}
										
											//在出库物料明细中插入一条记录
											var index = InsertRow('Grid0',-1);
											SetCellValue('Grid0', index,'MaterialId_Outbound',dt.PackingMaterialId);
											SetCellValue('Grid0', index,'MaterialBarCode',dt.MaterialBarCode);
											SetCellValue('Grid0', index,'Qty_Outbound',1);
											SetCellValue('Grid0', index,'Status_Outbound',10);
											SetCellValue('Grid0', index,'InboundDateTime',dt.RecvDate);
											SetCellValue('Grid0', index,'StoreroomId',dt.StoreroomId);
											SetCellValue('Grid0', index,'StoreareaId',dt.StoreareaId);
											SetCellValue('Grid0', index,'LocationId',dt.LocationId);
											SetCellValue('Grid0', index,'SourceType_Outbound',0);
											
											var DischargingMaterialID_V = DischargingMaterialID;
											var DischargingMaterialName_V = DischargingMaterialName;
											var PackingIndex_V = PackingIndex;		
											var PackingCount_V = PackingCount;										
											var Date = ServerDate();
											SetCellValue('Grid0',index,"Status_Outbound",90);
											SetCellValue('Grid0',index,"OutboundDateTime_Outbound",Date);		
											SaveData();UpdateView();
											DischargingMaterialID = DischargingMaterialID_V;
											DischargingMaterialName = DischargingMaterialName_V;
											PackingIndex = PackingIndex_V;
											PackingCount = PackingCount_V;
											
											OutboundIndex = index;										
										}
										
										//检查扫入的物料条码是否符合现在的包装顺序 
										var MatID = GetCellValue('Grid0',OutboundIndex,"MaterialId_Outbound");
										var CurMatID = GetCellValue('Grid_Strategy',PackingIndex,"MaterialId_Strategy");
										var CurMatName = GetCellValue('Grid_Strategy',PackingIndex,"MaterialName");
										if(MatID != CurMatID){											
											Confirm(LocaleParaFormat('PAshow','pakey28',CurMatName),'OK','OK:{}');
											SetFocus('EnterFinishMaterialBarCode',true);
											return true;
										}
										
										//如果需要释冷的话检查对应的出库物料的释冷时间是否准确
										var DischargTime = GetCellValue('Grid_Strategy',PackingIndex,"Discharging");
										if(DischargTime > 0){
											if(GetCellValue('Grid0',OutboundIndex,"Status_Outbound") == 90){
												Confirm(LocaleString('PAshow','pakey29'),'OK','OK:{}');					
												SetFocus('EnterFinishMaterialBarCode',true);
												return true;
											}
											
											if(GetCellValue('Grid0',OutboundIndex,"Status_Outbound") == 92){
												Confirm(LocaleString('PAshow','pakey29'),'OK','OK:{}');					
												SetFocus('EnterFinishMaterialBarCode',true);
												return true;
											}
										}
										
										//在已使用物料明细中插入一条记录
										var index = InsertRow('Grid_Finish',-1);
										SetCellValue('Grid_Finish', index,'MaterialId_Finish',MatID);
										SetCellValue('Grid_Finish', index,'MaterialBarCode_Finish',EnterMaterialCode);
										SetCellValue('Grid_Finish', index,'Qty_Finish',1);
										SetCellValue('Grid_Finish', index,'InboundDateTime_Finish',GetCellValue('Grid0',OutboundIndex,"InboundDateTime"));
										SetCellValue('Grid_Finish', index,'OutboundDateTime_Finish',GetCellValue('Grid0',OutboundIndex,"OutboundDateTime_Outbound"));
										SetCellValue('Grid_Finish', index,'StoreroomId_Finish',GetCellValue('Grid0',OutboundIndex,"StoreroomId"));
										SetCellValue('Grid_Finish', index,'StoreareaId_Finish',GetCellValue('Grid0',OutboundIndex,"StoreareaId"));
										SetCellValue('Grid_Finish', index,'LocationId_Finish',GetCellValue('Grid0',OutboundIndex,"LocationId"));
										
										//将包装物料明细汇总中的对应已使用数量加一
										count = GetRowCount('Grid_Sum');
										i = 0;										
										while ( i < count ) {
											if(GetCellValue('Grid_Sum',i,"MaterialId") == MatID){
												SetCellValue('Grid_Sum',i,'FinishedQty',GetCellValue('Grid_Sum',i,"FinishedQty") + 1);
												break;													
											}
											i = i + 1;
										}
										
										//维护包装方案物料明细
										var pc = PackingCount;
										if(pc > PackingQty - FinishedPackingQty){
											pc = PackingQty - FinishedPackingQty;
										}
										count = GetRowCount('Grid_Strategy');
										SetCellValue('Grid_Strategy' ,PackingIndex ,'FinishQty_Strategy' ,GetCellValue('Grid_Strategy' ,PackingIndex ,"FinishQty_Strategy") + 1);
										if(GetCellValue('Grid_Strategy' ,PackingIndex ,"FinishQty_Strategy") == GetCellValue('Grid_Strategy' ,PackingIndex ,"Qty_Strategy")*pc){
											//下一个包装物料
											if(PackingIndex < count - 1){
												PackingIndex = PackingIndex + 1;
												CurrentPackingMaterialLabel = "当前包装物料：" + GetCellValue('Grid_Strategy',PackingIndex,"MaterialName");
											}
											else{
												//完成一个包装
												FinishedPackingQty = FinishedPackingQty + pc;
												i = 0;										
												while ( i < count ) {													
													SetCellValue('Grid_Strategy',i,'FinishedQty',0);
													i = i + 1;
												}
												PackingIndex = 0;												
												CurrentPackingMaterialLabel = "当前包装物料：" + GetCellValue('Grid_Strategy',PackingIndex,"MaterialName");
												
												//自动保存单据
												if(FinishedPackingQty >= PackingQty){
													//如果完成包装数量等于需要的数量则直接将单据状态改为已完成
													SetValue('FinishDateTime',ServerDate());
													Status=StatusValue('finished');
												}
												
												var DischargingMaterialID_V = DischargingMaterialID;
												var PackingIndex_V = PackingIndex;
												var PackingCount_V = PackingCount;
												SaveData();
												UpdateView();
												DischargingMaterialID = DischargingMaterialID_V;
												PackingIndex = PackingIndex_V;
												PackingCount = PackingCount_V;
											}
										}
										EnterFinishMaterialBarCode = '';
										SetFocus('EnterFinishMaterialBarCode',true);
											  ]]>
                                </KeyEnter>
                            </TextEditor>
                            <Label Caption="扫描包装物料条码" Key="Lab_EnterFinishMaterialBarCode" X="0" Y="3"/>
                            <RowDefCollection RowGap="8">
                                <RowDef Height="30px"/>
                                <RowDef Height="30px"/>
                                <RowDef Height="30px"/>
                                <RowDef Height="30px"/>
                                <RowDef Height="30px"/>
                                <RowDef Height="30px"/>
                                <RowDef Height="30px"/>
                                <RowDef Height="30px"/>
                                <RowDef Height="30px"/>
                                <RowDef Height="30px"/>
                            </RowDefCollection>
                            <ColumnDefCollection ColumnGap="8">
                                <ColumnDef Width="100px"/>
                                <ColumnDef Width="100px"/>
                                <ColumnDef Width="33%" MinWidth="50px"/>
                                <ColumnDef Width="30px"/>
                                <ColumnDef Width="100px"/>
                                <ColumnDef Width="100px"/>
                                <ColumnDef Width="33%" MinWidth="50px"/>
                                <ColumnDef Width="30px"/>
                                <ColumnDef Width="100px"/>
                                <ColumnDef Width="100px"/>
                                <ColumnDef Width="33%" MinWidth="50px"/>
                            </ColumnDefCollection>
                        </GridLayoutPanel>
                    </TabPanel>
                    <TabPanel Caption="TabPanel1" Key="TabPanel1">
                        <Grid Caption="包装物料明细汇总" Key="Grid_Sum" CanInsert="false" CanDelete="false" CanShift="false" NewEmptyRow="false">
                            <GridColumnCollection>
                                <GridColumn Caption="物料" Key="MaterialId" Width="80px" Sortable="true"/>
                                <GridColumn Caption="数量" Key="Qty" Width="80px" Sortable="true"/>
                                <GridColumn Caption="已出库数量" Key="OutboundQty" Width="80px" Sortable="true"/>
                                <GridColumn Caption="已使用数量" Key="FinishedQty" Width="80px" Sortable="true"/>
                            </GridColumnCollection>
                            <GridRowCollection>
                                <GridRow Key="R_Sum" TableKey="LRP_PackingOutbound_Sum_L">
                                    <GridCell Caption="物料" CellType="Dict" Enable="false" ItemKey="LRP_PackingMaterial" Key="MaterialId">
                                        <DataBinding ColumnKey="MaterialId" Required="true"/>
                                    </GridCell>
                                    <GridCell Caption="数量" CellType="NumberEditor" Enable="false" Key="Qty">
                                        <DataBinding ColumnKey="Qty"/>
                                    </GridCell>
                                    <GridCell Caption="已出库数量" CellType="NumberEditor" Enable="false" Key="OutboundQty">
                                        <DataBinding ColumnKey="OutboundQty"/>
                                    </GridCell>
                                    <GridCell Caption="已使用数量" CellType="NumberEditor" Enable="false" Key="FinishedQty">
                                        <DataBinding ColumnKey="FinishedQty"/>
                                    </GridCell>
                                </GridRow>
                            </GridRowCollection>
                        </Grid>
                        <GridLayoutPanel Caption="出库物料明细" Key="DetailTab">
                            <Grid Caption="出库物料明细" Key="Grid0" CanInsert="false" CanDelete="false" CanShift="false" NewEmptyRow="false" X="0" XSpan="2" Y="1">
                                <GridColumnCollection>
                                    <GridColumn Caption="物料" Key="MaterialId_Outbound" Width="80px" Sortable="true"/>
                                    <GridColumn Caption="物料条码" Key="MaterialBarCode" Width="80px" Sortable="true"/>
                                    <GridColumn Caption="数量" Key="Qty_Outbound" Width="80px" Sortable="true"/>
                                    <GridColumn Caption="状态" Key="Status_Outbound" Width="80px" Sortable="true"/>
                                    <GridColumn Caption="入库时间" Key="InboundDateTime" Width="80px" Sortable="true"/>
                                    <GridColumn Caption="出库时间" Key="OutboundDateTime_Outbound" Width="80px" Sortable="true"/>
                                    <GridColumn Caption="完成释冷时间" Key="DischargEndDateTime_Outbound" Width="100px" Sortable="true"/>
                                    <GridColumn Caption="仓间" Key="StoreroomId" Width="80px" Sortable="true"/>
                                    <GridColumn Caption="库区" Key="StoreareaId" Width="80px" Sortable="true"/>
                                    <GridColumn Caption="储位" Key="LocationId" Width="80px" Sortable="true"/>
                                    <GridColumn Caption="来源" Key="SourceType_Outbound" Visible="false" Width="80px" Sortable="true"/>
                                </GridColumnCollection>
                                <GridRowCollection>
                                    <GridRow Key="R3" TableKey="LRP_PackingOutbound_L">
                                        <GridCell Caption="物料" CellType="Dict" Enable="false" ItemKey="LRP_PackingMaterial" Key="MaterialId_Outbound">
                                            <DataBinding ColumnKey="MaterialId" Required="true"/>
                                        </GridCell>
                                        <GridCell Caption="物料条码" CellType="TextEditor" Enable="false" Key="MaterialBarCode">
                                            <DataBinding ColumnKey="MaterialBarCode"/>
                                        </GridCell>
                                        <GridCell Caption="数量" CellType="NumberEditor" Enable="false" Key="Qty_Outbound">
                                            <DataBinding ColumnKey="Qty" CheckRule="Qty&gt;0" ErrorInfo="数量必须大于0"/>
                                        </GridCell>
                                        <GridCell Key="Status_Outbound" Caption="状态" CellType="ComboBox">
                                            <DataBinding ColumnKey="Status"/>
                                            <Item Caption="未出库" Key="10" Value="10"/>
                                            <Item Caption="已出库" Key="90" Value="90"/>
                                            <Item Caption="完成释冷" Key="91" Value="91"/>
                                            <Item Caption="释冷超时" Key="92" Value="92"/>
                                        </GridCell>
                                        <GridCell Key="InboundDateTime" Caption="入库时间" CellType="DatePicker">
                                            <DataBinding ColumnKey="InboundDateTime"/>
                                        </GridCell>
                                        <GridCell Key="OutboundDateTime_Outbound" Caption="出库时间" CellType="DatePicker">
                                            <DataBinding ColumnKey="OutboundDateTime"/>
                                        </GridCell>
                                        <GridCell Key="DischargEndDateTime_Outbound" Caption="完成释冷时间" CellType="DatePicker">
                                            <DataBinding ColumnKey="DischargEndDateTime"/>
                                        </GridCell>
                                        <GridCell Caption="仓间" CellType="Dict" Enable="false" ItemKey="LRP_Storeroom" Key="StoreroomId">
                                            <DataBinding ColumnKey="StoreroomId"/>
                                        </GridCell>
                                        <GridCell Caption="库区" CellType="Dict" Enable="false" ItemKey="LRP_Storearea" Key="StoreareaId">
                                            <DataBinding ColumnKey="StoreareaId"/>
                                        </GridCell>
                                        <GridCell Caption="储位" CellType="Dict" Enable="false" ItemKey="LRP_Location" Key="LocationId">
                                            <DataBinding ColumnKey="LocationId"/>
                                        </GridCell>
                                        <GridCell Caption="来源" CellType="TextEditor" Enable="false" Key="SourceType_Outbound">
                                            <DataBinding ColumnKey="SourceType"/>
                                        </GridCell>
                                    </GridRow>
                                </GridRowCollection>
                            </Grid>
                            <Button Caption="删除明细" Key="DeleteDetail" Enable="Status==StatusValue('confirmed')" X="0" Y="0">
                                <OnClick>
                                    <![CDATA[
									var index = GetRowIndex('Grid0');									
									if(ToInt(GetCellValue('Grid0',index,'Status_Outbound')) >= 90)
									{									
										Confirm(LocaleString('PAshow','pakey30'),'OK','OK:{}');						
										return true;
									}
									var count = GetRowCount('Grid_Sum');
									var i = 0;
									while ( i < count ) {
										if(GetCellValue('Grid_Sum',i,"MaterialId") == GetCellValue('Grid0',index,"MaterialId_Outbound")){
											SetCellValue('Grid_Sum',i,'OutboundQty',GetCellValue('Grid_Sum',i,"OutboundQty") -1);
											break;													
										}
										i = i + 1;
									}
									DeleteRow("Grid0",index);
								]]>
                                </OnClick>
                            </Button>
                            <RowDefCollection RowGap="2">
                                <RowDef Height="20px"/>
                                <RowDef Height="100%"/>
                            </RowDefCollection>
                            <ColumnDefCollection ColumnGap="2">
                                <ColumnDef Width="100px"/>
                                <ColumnDef Width="100%"/>
                            </ColumnDefCollection>
                        </GridLayoutPanel>
                        <Grid Caption="已使用物料明细" Key="Grid_Finish" CanInsert="false" CanDelete="false" CanShift="false" NewEmptyRow="false">
                            <GridColumnCollection>
                                <GridColumn Caption="物料" Key="MaterialId_Finish" Width="80px"/>
                                <GridColumn Caption="物料条码" Key="MaterialBarCode_Finish" Width="80px"/>
                                <GridColumn Caption="数量" Key="Qty_Finish" Width="80px"/>
                                <GridColumn Caption="入库时间" Key="InboundDateTime_Finish" Width="80px"/>
                                <GridColumn Caption="出库时间" Key="OutboundDateTime_Finish" Width="80px"/>
                                <GridColumn Caption="仓间" Key="StoreroomId_Finish" Width="80px"/>
                                <GridColumn Caption="库区" Key="StoreareaId_Finish" Width="80px"/>
                                <GridColumn Caption="储位" Key="LocationId_Finish" Width="80px"/>
                            </GridColumnCollection>
                            <GridRowCollection>
                                <GridRow Key="R4" TableKey="LRP_PackingFinish_L">
                                    <GridCell Caption="物料" CellType="Dict" Enable="false" ItemKey="LRP_PackingMaterial" Key="MaterialId_Finish">
                                        <DataBinding ColumnKey="MaterialId"/>
                                    </GridCell>
                                    <GridCell Caption="物料条码" CellType="TextEditor" Enable="false" Key="MaterialBarCode_Finish">
                                        <DataBinding ColumnKey="MaterialBarCode"/>
                                    </GridCell>
                                    <GridCell Caption="数量" CellType="NumberEditor" Enable="false" Key="Qty_Finish">
                                        <DataBinding ColumnKey="Qty" CheckRule="Qty&gt;0" ErrorInfo="数量必须大于0"/>
                                    </GridCell>
                                    <GridCell Key="InboundDateTime_Finish" Caption="入库时间" CellType="DatePicker">
                                        <DataBinding ColumnKey="InboundDateTime"/>
                                    </GridCell>
                                    <GridCell Key="OutboundDateTime_Finish" Caption="出库时间" CellType="DatePicker">
                                        <DataBinding ColumnKey="OutboundDateTime"/>
                                    </GridCell>
                                    <GridCell Caption="仓间" CellType="Dict" Enable="false" ItemKey="LRP_Storeroom" Key="StoreroomId_Finish">
                                        <DataBinding ColumnKey="StoreroomId"/>
                                    </GridCell>
                                    <GridCell Caption="库区" CellType="Dict" Enable="false" ItemKey="LRP_Storearea" Key="StoreareaId_Finish">
                                        <DataBinding ColumnKey="StoreareaId"/>
                                    </GridCell>
                                    <GridCell Caption="储位" CellType="Dict" Enable="false" ItemKey="LRP_Location" Key="LocationId_Finish">
                                        <DataBinding ColumnKey="LocationId"/>
                                    </GridCell>
                                </GridRow>
                            </GridRowCollection>
                        </Grid>
                        <Grid Caption="使用的包装方案物料明细" Key="Grid_Strategy" CanInsert="false" CanDelete="false" CanShift="false" NewEmptyRow="false">
                            <GridColumnCollection>
                                <GridColumn Caption="物料" Key="MaterialId_Strategy" Width="80px"/>
                                <GridColumn Caption="物料名称" Key="MaterialName" Width="80px"/>
                                <GridColumn Caption="数量" Key="Qty_Strategy" Width="80px"/>
                                <GridColumn Caption="已使用数量" Key="FinishQty_Strategy" Width="120px"/>
                                <GridColumn Caption="预冷时间(小时)" Key="PreCool" Width="120px"/>
                                <GridColumn Caption="释冷时间(分钟)" Key="Discharging" Width="120px"/>
                                <GridColumn Caption="释冷超时(分钟)" Key="DischargingOverTime" Width="120px"/>
                            </GridColumnCollection>
                            <GridRowCollection>
                                <GridRow Key="R5" TableKey="LRP_POStrategy_L">
                                    <GridCell Caption="物料" CellType="Dict" Enable="false" ItemKey="LRP_PackingMaterial" Key="MaterialId_Strategy">
                                        <DataBinding ColumnKey="MaterialId"/>
                                    </GridCell>
                                    <GridCell Caption="物料名称" CellType="TextEditor" Enable="false" Key="MaterialName">
                                        <DataBinding ColumnKey="MaterialName"/>
                                    </GridCell>
                                    <GridCell Caption="数量" CellType="NumberEditor" Enable="false" Key="Qty_Strategy">
                                        <DataBinding ColumnKey="Qty"/>
                                    </GridCell>
                                    <GridCell Caption="已使用数量" CellType="NumberEditor" Enable="false" Key="FinishQty_Strategy">
                                        <DataBinding ColumnKey="FinishQty"/>
                                    </GridCell>
                                    <GridCell Caption="预冷时间" CellType="NumberEditor" Enable="false" Key="PreCool">
                                        <DataBinding ColumnKey="PreCool"/>
                                    </GridCell>
                                    <GridCell Caption="释冷时间" CellType="NumberEditor" Enable="false" Key="Discharging">
                                        <DataBinding ColumnKey="Discharging"/>
                                    </GridCell>
                                    <GridCell Caption="释冷超时" CellType="NumberEditor" Enable="false" Key="DischargingOverTime">
                                        <DataBinding ColumnKey="DischargingOverTime"/>
                                    </GridCell>
                                </GridRow>
                            </GridRowCollection>
                        </Grid>
                    </TabPanel>
                    <SplitSize Size="350px"/>
                    <SplitSize Size="100%"/>
                </SplitPanel>
            </FlexFlowLayoutPanel>
        </Block>
    </Body>
    <OnLoad>
        <![CDATA[	
		StopTimerTask('DischargTimer');
	]]>
    </OnLoad>
    <OnPostShow>
        <![CDATA[
		if(Length(DoOnShow) > 0){
			return true;
		}
		DoOnShow = "1";
		if(GetRowCount('Grid_Strategy')>0){
			var count = GetRowCount('Grid_Strategy');
			var i = 0;
			var index = -1;	
			while ( i < count ) {
				if(GetCellValue('Grid_Strategy',i,"Discharging") > 0){
					index = i;	
					break;
				}
				i = i + 1;
			}
			i = 0;		
			PackingIndex = 0;
			while ( i < count ) {
				var Qty_V = GetCellValue('Grid_Strategy',i,"Qty_Strategy");
				var FinishQty_V = GetCellValue('Grid_Strategy',i,"FinishQty_Strategy");
				if(ToLong(FinishQty_V) < ToLong(Qty_V)){
					PackingIndex = i;
					CurrentPackingMaterialLabel = "当前包装物料：" + GetCellValue('Grid_Strategy',PackingIndex,"MaterialName");
					break;
				}				
				i = i + 1;
			}
			var DischargTime = 0;
			var DischargOverTime = 0;				
			if(index >=0){ 
				DischargTime = GetCellValue('Grid_Strategy',index,"Discharging");
				DischargOverTime = GetCellValue('Grid_Strategy',index,"DischargingOverTime");
				DischargingMaterialID = GetCellValue('Grid_Strategy',index,"MaterialId_Strategy");
				DischargingMaterialName = GetCellValue('Grid_Strategy',index,"MaterialName");			
			}
			
			//根据包装的情况设置计时器
			if(DischargTime >0 && DischargTimerType == "" && Status==StatusValue('confirmed') && !IsControlNull('OutboundDateTime')){
				if(!IsControlNull('DischargEndDateTime')){
					if(DischargEndDateTime > OutboundDateTime){
						DischargTimerType = "4";
						DischargTimerLabel = "完成释冷";
						StopTimerTask('DischargTimer');
						return true;
					}
				}
				
				var d = ServerDate();
				var diff = DateDiff(OutboundDateTime,d,"s");
				if(diff > DischargTime * 60){
					//释冷时间已过
					diff = diff - DischargTime * 60;
					if(diff > DischargOverTime * 60){
						//释冷已经超时
						DischargTimerType = "3";
						DischargTimerLabel = "释冷已经超时";
						StopTimerTask('DischargTimer');
					}
					else{
						diff = DischargOverTime * 60 - diff;
						DischargTimerType = "2";
						DischargTimerCur = DateAdd(DischargTimerStart,"s",diff);
						StartTimerTask('DischargTimer');
					}
				}
				else{			
					diff = DischargTime * 60 - diff;
					DischargTimerType = "1";
					DischargTimerCur = DateAdd(DischargTimerStart,"s",diff);
					StartTimerTask('DischargTimer');
				}
			}
		}
	]]>
    </OnPostShow>
    <TimerTaskCollection>
        <TimerTask Enable="true" Key="DischargTimer" Period="1000" Repeat="true">
            <![CDATA[				
			if(DischargTimerType == "" || Status!=StatusValue('confirmed')){ StopTimerTask('DischargTimer');return true;}
			DischargTimerCur = DateAdd(DischargTimerCur,"s",-1);
            if(DischargTimerType == "1"){
				DischargTimerLabel = "释冷中，剩余时间:" + Format(DischargTimerCur,'HH:mm:ss');
				if(DischargTimerCur <= DischargTimerStart){
					DischargTimerType = "2";
					var count = GetRowCount('Grid_Strategy');
					var i = 0;
					var index = -1;
					while ( i < count ) {
						if(GetCellValue('Grid_Strategy',i,"Discharging") > 0){
							index = i;
							break;
						}
						i = i + 1;
					}
					if(index >=0){ 
						var DischargTime = GetCellValue('Grid_Strategy',index,"Discharging");
						var DischargOverTime = GetCellValue('Grid_Strategy',index,"DischargingOverTime");
						DischargTimerCur = DateAdd(DischargTimerStart,"n",DischargOverTime);
						DischargTimerLabel = "等待释冷完成，超时时间:" + Format(DischargTimerCur,'HH:mm:ss');
					}	
				}
			}
			if(DischargTimerType == "2"){
				DischargTimerLabel = "释冷中，释冷超时时间:" + Format(DischargTimerCur,'HH:mm:ss');
				if(DischargTimerCur <= DischargTimerStart){
					DischargTimerType = "3";
					DischargTimerLabel = "释冷已经超时";
					StopTimerTask('DischargTimer');
				}
			}
			if(DischargTimerType == "3"){			
				DischargTimerLabel = "释冷已经超时";
				StopTimerTask('DischargTimer');
			}
			if(DischargTimerType == "4"){			
				DischargTimerLabel = "完成释冷";
				StopTimerTask('DischargTimer');
			}
        ]]>
        </TimerTask>
    </TimerTaskCollection>
</Form>
