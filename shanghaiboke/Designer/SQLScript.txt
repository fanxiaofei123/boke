D:\shanghaiboke\Yigo\Solution\fxf||fxf||Mon Sep 17 14:50:51 CST 2018
create table SYS_Operator (OID number,POID number,SOID number,VERID int ,DVERID int ,Status int ,Enable int ,NodeType int ,ParentID number,TLeft int ,TRight int ,Code varchar(50) ,Name varchar(50) ,Password varchar(512) ,MapCount int ,Slock int ,CONSTRAINT PK_SYS_Operator PRIMARY KEY(OID) );
create index I_SYS_Operator_SOID on SYS_Operator(SOID);
create table SYS_OperatorRole (OID number,POID number,SOID number,VERID int ,DVERID int ,Sequence int ,Role number,MapCount int ,Slock int ,CONSTRAINT PK_SYS_OperatorRole PRIMARY KEY(OID) );
create index I_YS_OperatorRole_SOID on SYS_OperatorRole(SOID);
create table SYS_Operator_RR (RoleID number,FormKey varchar(128) ,DictID number,HasRights int ,CONSTRAINT PK_SYS_Operator_RR PRIMARY KEY(RoleID,DictID) );
create table SYS_Operator_OR (OperatorID number,FormKey varchar(128) ,DictID number,HasRights int ,CONSTRAINT PK_SYS_Operator_OR PRIMARY KEY(OperatorID,DictID) );
create table CUST_StaticObj (OID number,POID number,SOID number,VERID int ,DVERID int ,MapCount int ,Slock int ,CONSTRAINT PK_CUST_StaticObj PRIMARY KEY(OID) );
create unique index I_CUST_StaticObj_SOID on CUST_StaticObj(SOID);
create table CUST_Para (OID number,POID number,SOID number,VERID int ,DVERID int ,ParaKey varchar(64) ,ParentKey varchar(64) ,ParaValue number,NodeType int ,MapCount int ,Slock int ,CONSTRAINT PK_CUST_Para PRIMARY KEY(OID) );
create index I_CUST_Para_SOID on CUST_Para(SOID);
create table SYS_Role (OID number,POID number,SOID number,VERID int ,DVERID int ,Status int ,Enable int ,NodeType int ,ParentID number,TLeft int ,TRight int ,Code varchar(50) ,Name varchar(50) ,IsAdmin int ,MapCount int ,Slock int ,CONSTRAINT PK_SYS_Role PRIMARY KEY(OID) );
create index I_SYS_Role_SOID on SYS_Role(SOID);
create table SYS_Role_RR (RoleID number,FormKey varchar(128) ,DictID number,HasRights int ,CONSTRAINT PK_SYS_Role_RR PRIMARY KEY(RoleID,DictID) );
create table SYS_Role_OR (OperatorID number,FormKey varchar(128) ,DictID number,HasRights int ,CONSTRAINT PK_SYS_Role_OR PRIMARY KEY(OperatorID,DictID) );
create table BPM_Instance (InstanceID number,OID number,ProcessKey varchar(255) ,VerID int ,StartTime date ,EndTime date ,CostTime number,InstanceState int ,FormKey varchar(255) ,FormName varchar(255) ,ObjectKey varchar(255) ,InstanceMode int ,ParentInstanceID number,StepIDSeed int ,TokenIDSeed int ,LogSeed int ,LogIndexSeed int ,EventSeed int ,StateWorkitemID number,TransactionID int ,TransitTo int ,TransWorkitem number,BPMState int ,BeginOperatorID number,DocState int ,MapCount int ,Slock int ,CONSTRAINT PK_BPM_Instance PRIMARY KEY(InstanceID) );
create index I_BPM_InstanceOID on BPM_Instance(OID);
create table BPM_Node (InstanceID number,OID number,InlineNodeID int ,NodeID int ,InlineVersion int ,NodeType int ,Result int ,SubInstanceID number,WorkitemID number,BPMState int ,CountSeed int ,TransactionID int ,assistTransactionID int ,MapCount int ,Slock int ,CONSTRAINT PK_BPM_Node PRIMARY KEY(InstanceID,InlineNodeID,NodeID) );
create index I_BPM_NodeInstanceID on BPM_Node(InstanceID);
create table BPM_NodeRB (InstanceID number,OID number,InlineNodeID int ,NodeID int ,TransactionID int ,InlineVersion int ,NodeType int ,Result int ,SubInstanceID number,WorkitemID number,BPMState int ,CountSeed int ,assistTransactionID int ,MapCount int ,Slock int ,CONSTRAINT PK_BPM_NodeRB PRIMARY KEY(InstanceID,InlineNodeID,NodeID,TransactionID) );
create index I_BPM_NodeRBInstanceID on BPM_NodeRB(InstanceID);
create table BPM_StepInfo (InstanceID number,OID number,StepID int ,InlineNodeID int ,SourceNodeID int ,TargetNodeID int ,TransactionID int ,assistTransactionID int ,MapCount int ,Slock int ,CONSTRAINT PK_BPM_StepInfo PRIMARY KEY(InstanceID,StepID) );
create index I_BPM_StepInfoInstanceID on BPM_StepInfo(InstanceID);
create table BPM_StepInfoRB (InstanceID number,OID number,StepID int ,TransactionID int ,InlineNodeID int ,SourceNodeID int ,TargetNodeID int ,assistTransactionID int ,MapCount int ,Slock int ,CONSTRAINT PK_BPM_StepInfoRB PRIMARY KEY(InstanceID,StepID,TransactionID) );
create index I_BPM_StepInfoRBInstanceID on BPM_StepInfoRB(InstanceID);
create table BPM_Token (InstanceID number,OID number,TokenID int ,InlineNodeID int ,NodeID int ,TransactionID int ,assistTransactionID int ,MapCount int ,Slock int ,CONSTRAINT PK_BPM_Token PRIMARY KEY(InstanceID,TokenID) );
create index I_BPM_TokenInstanceID on BPM_Token(InstanceID);
create table BPM_TokenRB (InstanceID number,OID number,TokenID int ,TransactionID int ,InlineNodeID int ,NodeID int ,assistTransactionID int ,MapCount int ,Slock int ,CONSTRAINT PK_BPM_TokenRB PRIMARY KEY(InstanceID,TokenID,TransactionID) );
create index I_BPM_TokenRBInstanceID on BPM_TokenRB(InstanceID);
create table BPM_WorkitemInfo (InstanceID number,OID number,WorkitemID number,InlineNodeID int ,NodeID int ,NodeKey varchar(255) ,FormKey varchar(255) ,ParentWorkitemID number,PWorkitemID4Transfer number,TransitTo int ,backsiteWorkitemID number,CountID int ,TransactionID int ,assistTransactionID int ,MapCount int ,Slock int ,CONSTRAINT PK_BPM_WorkitemInfo PRIMARY KEY(InstanceID,WorkitemID) );
create index I_PM_WorkitemInfoInstanceID on BPM_WorkitemInfo(InstanceID);
create table BPM_WorkitemInfoRB (InstanceID number,OID number,WorkitemID number,TransactionID int ,InlineNodeID int ,NodeID int ,NodeKey varchar(255) ,FormKey varchar(255) ,ParentWorkitemID number,PWorkitemID4Transfer number,TransitTo int ,backsiteWorkitemID number,CountID int ,assistTransactionID int ,MapCount int ,Slock int ,CONSTRAINT PK_BPM_WorkitemInfoRB PRIMARY KEY(InstanceID,WorkitemID,TransactionID) );
create index I__WorkitemInfoRBInstanceID on BPM_WorkitemInfoRB(InstanceID);
create table BPM_EventLog (InstanceID number,OID number,LogID number,EventTime date ,ActionType int ,Name varchar(255) ,Soperator number,Toperator number,UserInfo varchar(255) ,MapCount int ,Slock int ,CONSTRAINT PK_BPM_EventLog PRIMARY KEY(InstanceID,LogID) );
create index I_BPM_EventLogInstanceID on BPM_EventLog(InstanceID);
create table BPM_AuditRetLog (InstanceID number,OID number,WorkitemID number,UserID number,AuditResult int ,UserInfo varchar(255) ,NodeID int ,InlineNodeID int ,MapCount int ,Slock int ,CONSTRAINT PK_BPM_AuditRetLog PRIMARY KEY(InstanceID,UserID) );
create index I_BPM_AuditRetLogInstanceID on BPM_AuditRetLog(InstanceID);
create table BPM_TransitTo (InstanceID number,OID number,WorkitemID number,NodeID int ,transitToWorkitem number,MapCount int ,Slock int ,CONSTRAINT PK_BPM_TransitTo PRIMARY KEY(WorkitemID,transitToWorkitem) );
create index I_BPM_TransitToInstanceID on BPM_TransitTo(InstanceID);
create table BPM_Log (InstanceID number,OID number,LogID int ,LogIndex int ,InlineNodeID int ,NodeID int ,WorkitemID number,WorkitemName varchar(255) ,WorkitemState int ,CreatTime date ,FinishTime date ,OperatorID number,AuditResult int ,UserInfo varchar(4000) ,ResultInfo varchar(255) ,LaunchInfo varchar(255) ,TransactionID int ,assistTransactionID int ,MapCount int ,Slock int ,CONSTRAINT PK_BPM_Log PRIMARY KEY(InstanceID,LogID) );
create index I_BPM_LogInstanceID on BPM_Log(InstanceID);
create table BPM_LogRB (InstanceID number,OID number,LogID int ,LogIndex int ,InlineNodeID int ,NodeID int ,WorkitemID number,WorkitemName varchar(255) ,WorkitemState int ,CreatTime date ,FinishTime date ,OperatorID number,AuditResult int ,UserInfo varchar(4000) ,ResultInfo varchar(255) ,LaunchInfo varchar(255) ,TransactionID int ,assistTransactionID int ,MapCount int ,Slock int ,CONSTRAINT PK_BPM_LogRB PRIMARY KEY(InstanceID,LogID,TransactionID) );
create index I_BPM_LogRBInstanceID on BPM_LogRB(InstanceID);
create table BPM_TimerEvent (InstanceID number,OID number,InlineNodeID int ,NodeID int ,EventTime date ,TransactionID int ,AssistTransactionID int ,MapCount int ,Slock int ,CONSTRAINT PK_BPM_TimerEvent PRIMARY KEY(InstanceID,InlineNodeID,NodeID) );
create index I_BPM_TimerEventInstanceID on BPM_TimerEvent(InstanceID);
create table BPM_TimerEventRB (InstanceID number,OID number,InlineNodeID int ,NodeID int ,EventTime date ,TransactionID int ,AssistTransactionID int ,MapCount int ,Slock int ,CONSTRAINT PK_BPM_TimerEventRB PRIMARY KEY(InstanceID,InlineNodeID,NodeID,TransactionID) );
create index I_PM_TimerEventRBInstanceID on BPM_TimerEventRB(InstanceID);
create table BPM_FocusInstance (InstanceID number,OID number,FocusInstanceID number,InlineNodeID int ,NodeID int ,InstanceSyncState int ,TransactionID int ,AssistTransactionID int ,MapCount int ,Slock int ,CONSTRAINT PK_BPM_FocusInstance PRIMARY KEY(InstanceID,FocusInstanceID) );
create index I_M_FocusInstanceInstanceID on BPM_FocusInstance(InstanceID);
create table BPM_FocusInstanceRB (InstanceID number,OID number,FocusInstanceID number,InlineNodeID int ,NodeID int ,InstanceSyncState int ,TransactionID int ,AssistTransactionID int ,MapCount int ,Slock int ,CONSTRAINT PK_BPM_FocusInstanceRB PRIMARY KEY(InstanceID,FocusInstanceID,TransactionID) );
create index I_FocusInstanceRBInstanceID on BPM_FocusInstanceRB(InstanceID);
create table BPM_FocusedInstance (InstanceID number,OID number,FocusedInstanceID number,SyncTriggerType int ,TransactionID int ,AssistTransactionID int ,MapCount int ,Slock int ,CONSTRAINT PK_BPM_FocusedInstance PRIMARY KEY(InstanceID,FocusedInstanceID) );
create index I_FocusedInstanceInstanceID on BPM_FocusedInstance(InstanceID);
create table BPM_FocusedInstanceRB (InstanceID number,OID number,FocusedInstanceID number,SyncTriggerType int ,TransactionID int ,AssistTransactionID int ,MapCount int ,Slock int ,CONSTRAINT PK_BPM_FocusedInstanceRB PRIMARY KEY(InstanceID,FocusedInstanceID,TransactionID) );
create index I_cusedInstanceRBInstanceID on BPM_FocusedInstanceRB(InstanceID);
create table BPM_Transaction (InstanceID number,OID number,TransactionID int ,WorkitemID number,OperatorID number,WorkitemRevoke int ,fieldKey varchar(255) ,fieldValue varchar(255) ,statusValue int ,MapCount int ,Slock int ,CONSTRAINT PK_BPM_Transaction PRIMARY KEY(InstanceID,TransactionID) );
create index I_BPM_TransactionInstanceID on BPM_Transaction(InstanceID);
create table WF_Delegate (DelegateID number,DelegateType int ,SrcOperatorID int ,TgtOperatorID int ,CreaterID int ,ObjectType int ,ObjectKey varchar(255) ,NodeKey varchar(255) ,StartTime date ,EndTime date ,AlwaysValid int ,Enable int ,AutoRetreat int ,MapCount int ,Slock int ,CONSTRAINT PK_WF_Delegate PRIMARY KEY(DelegateID) );
create index I_WF_DelegateTime on WF_Delegate(StartTime,AlwaysValid,EndTime);
create table BPM_Timer (InstanceID number,OID number,InlineNodeID int ,NodeID int ,ItemKey varchar(255) ,TriggerTime date ,MapCount int ,Slock int ,CONSTRAINT PK_BPM_Timer PRIMARY KEY(InstanceID,InlineNodeID,NodeID,ItemKey) );
create index I_BPM_TimerInstanceID on BPM_Timer(InstanceID,InlineNodeID,NodeID);
create table BPM_WorkitemTimer (InstanceID number,OID number,WorkitemID number,ItemKey varchar(255) ,TriggerTime date ,MapCount int ,Slock int ,CONSTRAINT PK_BPM_WorkitemTimer PRIMARY KEY(WorkitemID,ItemKey) );
create index I_M_WorkitemTimerWorkitemID on BPM_WorkitemTimer(WorkitemID);
create table BPM_StateRB (InstanceID number,OID number,InlineNodeID int ,NodeID int ,OperatorID number,WorkitemID number,OperationNodeID int ,TransactionID int ,AssistTransactionID int ,MapCount int ,Slock int ,CONSTRAINT PK_BPM_StateRB PRIMARY KEY(InstanceID,OperatorID,WorkitemID,OperationNodeID,TransactionID) );
create index I_BPM_StateRBInstanceID on BPM_StateRB(InstanceID);
create table BPM_State (InstanceID number,OID number,InlineNodeID int ,NodeID int ,OperatorID number,WorkitemID number,OperationNodeID int ,TransactionID int ,AssistTransactionID int ,MapCount int ,Slock int ,CONSTRAINT PK_BPM_State PRIMARY KEY(InstanceID,OperatorID,WorkitemID,OperationNodeID) );
create index I_BPM_StateInstanceID on BPM_State(InstanceID);
create table BPM_Migration (OID number,SOID number,VERID number,DVERID number,POID number,MapCount int ,Slock int ,CONSTRAINT PK_BPM_Migration PRIMARY KEY(OID) );
create index I_BPM_Migration_SOID on BPM_Migration(SOID);
create table BPM_DirectTransition (InstanceID number,OID number,InlineNodeID int ,NodeID int ,TgtNodeID int ,TransactionID int ,AssistTransactionID int ,MapCount int ,Slock int ,CONSTRAINT PK_BPM_DirectTransition PRIMARY KEY(InstanceID,InlineNodeID,NodeID) );
create table BPM_DirectTransitionRB (InstanceID number,OID number,InlineNodeID int ,NodeID int ,TransactionID int ,TgtNodeID int ,AssistTransactionID int ,MapCount int ,Slock int ,CONSTRAINT PK_BPM_DirectTransitionRB PRIMARY KEY(InstanceID,InlineNodeID,NodeID,TransactionID) );
create table BPM_AttachmentInfo (InstanceID number,OID number,AttachmentKey varchar(64) ,AttachmentInfo varchar(255) ,AttachmentPara varchar(255) ,TransactionID int ,AssistTransactionID int ,MapCount int ,Slock int ,CONSTRAINT PK_BPM_AttachmentInfo PRIMARY KEY(InstanceID,AttachmentKey) );
create table BPM_AttachmentInfoRB (InstanceID number,OID number,AttachmentKey varchar(64) ,AttachmentInfo varchar(255) ,AttachmentPara varchar(255) ,TransactionID int ,AssistTransactionID int ,MapCount int ,Slock int ,CONSTRAINT PK_BPM_AttachmentInfoRB PRIMARY KEY(InstanceID,AttachmentKey,TransactionID) );
create table WF_Workitem (WorkitemID number,OID number,WorkitemName varchar(255) ,WorkitemState int ,CreatTime date ,FinishTime date ,OperatorID number,SrcOperatorID number,TransferType int ,AuditResult int ,UserInfo varchar(4000) ,ResultInfo varchar(255) ,InlineNodeID int ,NodeID int ,NodeKey varchar(255) ,NodeType int ,TransitTo int ,BacksiteWorkitemID number,LaunchInfo varchar(255) ,TransactionID int ,AssistTransactionID int ,LogID int ,ParentAuditResult int ,MapCount int ,Slock int ,CONSTRAINT PK_WF_Workitem PRIMARY KEY(WorkitemID) );
create table WF_WorkitemRB (WorkitemID number,OID number,WorkitemName varchar(255) ,WorkitemState int ,CreatTime date ,FinishTime date ,OperatorID number,SrcOperatorID number,TransferType int ,AuditResult int ,UserInfo varchar(4000) ,ResultInfo varchar(255) ,InlineNodeID int ,NodeID int ,NodeType int ,TransitTo int ,BacksiteWorkitemID number,LaunchInfo varchar(255) ,TransactionID int ,AssistTransactionID int ,LogID int ,ParentAuditResult int ,MapCount int ,Slock int ,CONSTRAINT PK_WF_WorkitemRB PRIMARY KEY(WorkitemID,TransactionID) );
create index I_WF_WorkitemRBWorkitemID on WF_WorkitemRB(WorkitemID);
create table WF_ParticipatorRB (WorkitemID number,OperatorID number,OID number,SrcOperatorID number,DelegateID number,TransactionID int ,AssistTransactionID int ,Visible int ,MapCount int ,Slock int ,CONSTRAINT PK_WF_ParticipatorRB PRIMARY KEY(WorkitemID,OperatorID,TransactionID) );
create index I__ParticipatorRBWorkitemID on WF_ParticipatorRB(WorkitemID);
create table WF_Participator (WorkitemID number,OperatorID number,OID number,SrcOperatorID number,DelegateID number,TransactionID int ,AssistTransactionID int ,Visible int ,MapCount int ,Slock int ,CONSTRAINT PK_WF_Participator PRIMARY KEY(WorkitemID,OperatorID) );
create index I_WF_ParticipatorWorkitemID on WF_Participator(WorkitemID);
create table SYS_IDSeed (SeedID int ,SeedMark number,Description varchar(255) ,CreateTime date ,Slock int ,CONSTRAINT PK_SYS_IDSeed PRIMARY KEY(SeedID) );
create table SYS_Sequence (SequenceID int ,NoPrefix varchar(100) ,Slock int ,CONSTRAINT PK_SYS_Sequence PRIMARY KEY(NoPrefix) );
create table USER_Attachment (OID number,SOID number,UploadTime date ,UploadOperator number,Path varchar(150) ,Name varchar(150) ,FileSize number,UploadSize number,FileMD5 varchar(150) ,Client varchar(150) ,Server varchar(150) ,Schedule binary_double ,UploadStatus varchar(20) ,Slock int ,CONSTRAINT PK_USER_Attachment PRIMARY KEY(OID) );
create table SYS_RoleEntryRights (RoleID number,EntryKey varchar(512) ,HasRights int ,Slock int  );
create index I_RoleEntryRightsRoleID on SYS_RoleEntryRights(RoleID);
create table SYS_WorkingCalendar (OID number,DateOfYear varchar(255) ,ClusterID number,isWorkDay int ,Slock int ,CONSTRAINT PK_SYS_WorkingCalendar PRIMARY KEY(OID) );
create table SYS_WorkingTime (OID number,WorkingTime varchar(255) ,ClusterID number,Slock int ,CONSTRAINT PK_SYS_WorkingTime PRIMARY KEY(OID) );
create table SYS_OperatorEntryRights (OperatorID number,EntryKey varchar(512) ,HasRights int ,Slock int  );
create index I_atorEntryRightsOperatorID on SYS_OperatorEntryRights(OperatorID);
create table SYS_RoleOptRights (RoleID number,FormKey varchar(64) ,OptKey varchar(64) ,HasRights int ,Slock int ,CONSTRAINT PK_SYS_RoleOptRights PRIMARY KEY(RoleID,FormKey,OptKey) );
create table SYS_OperatorOptRights (OperatorID number,FormKey varchar(64) ,OptKey varchar(64) ,HasRights int ,Slock int ,CONSTRAINT PK_SYS_OperatorOptRights PRIMARY KEY(OperatorID,FormKey,OptKey) );
create table SYS_RoleFieldRights (RoleID number,FormKey varchar(64) ,FieldKey varchar(64) ,Visible int ,Enable int ,HasRights int ,Slock int ,CONSTRAINT PK_SYS_RoleFieldRights PRIMARY KEY(RoleID,FormKey,FieldKey) );
create table SYS_OperatorFieldRights (OperatorID number,FormKey varchar(64) ,FieldKey varchar(64) ,Visible int ,Enable int ,HasRights int ,Slock int ,CONSTRAINT PK_SYS_OperatorFieldRights PRIMARY KEY(OperatorID,FormKey,FieldKey) );
create table SYS_RoleFormRights (RoleID number,FormKey varchar(64) ,HasRights int ,Slock int  );
create table SYS_OperatorFormRights (OperatorID number,FormKey varchar(64) ,HasRights int ,Slock int  );
create table SYS_Para (ParaKey varchar(50) ,ParaValue varchar(1024) ,ParaVer int ,Slock int  );
create table SYS_SessionLog (OID number,ClientID varchar(50) ,Operator number,Happentime date ,Flag int ,IP varchar(50) ,Session_Mode int ,Host varchar(50) ,Port varchar(50) ,Notes varchar(100) ,Slock int ,CONSTRAINT PK_SYS_SessionLog PRIMARY KEY(OID) );
create table SYS_OperatorCertificate (OID number,OperatorID number,Fingerprint varchar(1024) ,ClientName varchar(255) ,Alias varchar(100) ,PublicKey varchar(1024) ,PrivateKey varchar(1024) ,StartTime date ,EndTime date ,UpdateTime date ,Flag int ,Slock int ,CONSTRAINT PK_SYS_OperatorCertificate PRIMARY KEY(OID) );
create table SYS_OperateFingerprintCheck (OID number,OperatorID number,MetaKey varchar(128) ,CmdKey varchar(100) ,Slock int ,CONSTRAINT PK_SYS_OperateFingerprintCheck PRIMARY KEY(OID) );
create table SYS_RelationDataObject (OperatorID number,OperationType int ,DataObjectKey varchar(255) ,Slock int  );
create table SYS_RelationScript (OperatorID number,FormKey varchar(255) ,ScriptName varchar(255) ,Slock int  );
create table SYS_RelationService (OperatorID number,ServiceName varchar(255) ,Slock int  );
create table SYS_RoleDataObjectRights (RoleID number,DataObjectKey varchar(255) ,NewOpt int ,DeleteOpt int ,SaveOpt int ,LoadOpt int ,Slock int  );
create table SYS_OperatorDataObjectRights (OperatorID number,DataObjectKey varchar(255) ,NewOpt int ,DeleteOpt int ,SaveOpt int ,LoadOpt int ,Slock int  );
create table SYS_RoleCustomOptRights (RoleID number,GroupKey varchar(255) ,OptKey varchar(255) ,HasRights int ,Slock int  );
create table SYS_OperatorCustomOptRights (OperatorID number,GroupKey varchar(255) ,OptKey varchar(255) ,HasRights int ,Slock int  );
create table SYS_RoleNamedSqlRights (RoleID number,Name varchar(255) ,HasRights int ,Slock int  );
create table SYS_OperatorNamedSqlRights (OperatorID number,Name varchar(255) ,HasRights int ,Slock int  );
create table SYS_RoleExServiceRights (RoleID number,Name varchar(255) ,HasRights int ,Slock int  );
create table SYS_OperatorExServiceRights (OperatorID number,Name varchar(255) ,HasRights int ,Slock int  );
create table QRTZ_JOB_DETAILS (SCHED_NAME varchar(120) ,JOB_NAME varchar(200) ,JOB_GROUP varchar(200) ,DESCRIPTION varchar(250) ,JOB_CLASS_NAME varchar(250) ,IS_DURABLE varchar(1) ,IS_NONCONCURRENT varchar(1) ,IS_UPDATE_DATA varchar(1) ,REQUESTS_RECOVERY varchar(1) ,JOB_DATA blob ,Slock int ,CONSTRAINT PK_QRTZ_JOB_DETAILS PRIMARY KEY(SCHED_NAME,JOB_NAME,JOB_GROUP) );
create table QRTZ_TRIGGERS (SCHED_NAME varchar(120) ,TRIGGER_NAME varchar(200) ,TRIGGER_GROUP varchar(200) ,JOB_NAME varchar(200) ,JOB_GROUP varchar(200) ,DESCRIPTION varchar(250) ,NEXT_FIRE_TIME number,PREV_FIRE_TIME number,PRIORITY int ,TRIGGER_STATE varchar(16) ,TRIGGER_TYPE varchar(8) ,START_TIME number,END_TIME number,CALENDAR_NAME varchar(200) ,MISFIRE_INSTR int ,JOB_DATA blob ,Slock int ,CONSTRAINT PK_QRTZ_TRIGGERS PRIMARY KEY(SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP) );
create table QRTZ_SIMPLE_TRIGGERS (SCHED_NAME varchar(120) ,TRIGGER_NAME varchar(200) ,TRIGGER_GROUP varchar(200) ,REPEAT_COUNT number,REPEAT_INTERVAL number,TIMES_TRIGGERED number,Slock int ,CONSTRAINT PK_QRTZ_SIMPLE_TRIGGERS PRIMARY KEY(SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP) );
create table QRTZ_CRON_TRIGGERS (SCHED_NAME varchar(120) ,TRIGGER_NAME varchar(200) ,TRIGGER_GROUP varchar(200) ,CRON_EXPRESSION varchar(200) ,TIME_ZONE_ID varchar(80) ,Slock int ,CONSTRAINT PK_QRTZ_CRON_TRIGGERS PRIMARY KEY(SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP) );
create table QRTZ_SIMPROP_TRIGGERS (SCHED_NAME varchar(120) ,TRIGGER_NAME varchar(200) ,TRIGGER_GROUP varchar(200) ,STR_PROP_1 varchar(512) ,STR_PROP_2 varchar(512) ,STR_PROP_3 varchar(512) ,INT_PROP_1 int ,INT_PROP_2 int ,LONG_PROP_1 number,LONG_PROP_2 number,DEC_PROP_1 numeric(13,4) ,DEC_PROP_2 numeric(13,4) ,BOOL_PROP_1 varchar(1) ,BOOL_PROP_2 varchar(1) ,Slock int ,CONSTRAINT PK_QRTZ_SIMPROP_TRIGGERS PRIMARY KEY(SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP) );
create table QRTZ_BLOB_TRIGGERS (SCHED_NAME varchar(120) ,TRIGGER_NAME varchar(200) ,TRIGGER_GROUP varchar(200) ,BLOB_DATA blob ,Slock int ,CONSTRAINT PK_QRTZ_BLOB_TRIGGERS PRIMARY KEY(SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP) );
create table QRTZ_CALENDARS (SCHED_NAME varchar(120) ,CALENDAR_NAME varchar(200) ,CALENDAR blob ,Slock int ,CONSTRAINT PK_QRTZ_CALENDARS PRIMARY KEY(SCHED_NAME,CALENDAR_NAME) );
create table QRTZ_PAUSED_TRIGGER_GRPS (SCHED_NAME varchar(120) ,TRIGGER_GROUP varchar(200) ,Slock int ,CONSTRAINT PK_QRTZ_PAUSED_TRIGGER_GRPS PRIMARY KEY(SCHED_NAME,TRIGGER_GROUP) );
create table QRTZ_FIRED_TRIGGERS (SCHED_NAME varchar(120) ,ENTRY_ID varchar(95) ,TRIGGER_NAME varchar(200) ,TRIGGER_GROUP varchar(200) ,INSTANCE_NAME varchar(200) ,FIRED_TIME number,SCHED_TIME number,PRIORITY int ,STATE varchar(16) ,JOB_NAME varchar(200) ,JOB_GROUP varchar(200) ,IS_NONCONCURRENT varchar(1) ,REQUESTS_RECOVERY varchar(1) ,Slock int ,CONSTRAINT PK_QRTZ_FIRED_TRIGGERS PRIMARY KEY(SCHED_NAME,ENTRY_ID) );
create table QRTZ_SCHEDULER_STATE (SCHED_NAME varchar(120) ,INSTANCE_NAME varchar(200) ,LAST_CHECKIN_TIME number,CHECKIN_INTERVAL number,Slock int ,CONSTRAINT PK_QRTZ_SCHEDULER_STATE PRIMARY KEY(SCHED_NAME,INSTANCE_NAME) );
create table QRTZ_LOCKS (SCHED_NAME varchar(120) ,LOCK_NAME varchar(40) ,Slock int ,CONSTRAINT PK_QRTZ_LOCKS PRIMARY KEY(SCHED_NAME,LOCK_NAME) );
D:\shanghaiboke\Yigo\Solution\fxf||fxf||Tue Sep 18 10:10:15 CST 2018
create table TestEntityHead (OID number,SOID number,POID number,VERID int ,DVERID int ,NO varchar(255) ,Status int ,BillDate date ,Creator number,CreateTime date ,Modifier number,ModifyTime date ,InstanceID number,MapCount int ,Slock int ,CONSTRAINT PK_TestEntityHead PRIMARY KEY(OID) );
create unique index I_TestEntityHead_SOID on TestEntityHead(SOID);
create table TestEntityDetail (OID number,POID number,SOID number,VERID int ,DVERID int ,SEQUENCE int ,MapCount int ,Slock int ,CONSTRAINT PK_TestEntityDetail PRIMARY KEY(OID) );
create index I_estEntityDetail_SOID on TestEntityDetail(SOID);
D:\shanghaiboke\Yigo\Solution\fxf||fxf||Tue Sep 18 11:06:01 CST 2018
create table TestHead (OID number,SOID number,POID number,VERID int ,DVERID int ,NO varchar(255) ,Status int ,BillDate date ,Creator number,CreateTime date ,Modifier number,ModifyTime date ,InstanceID number,MapCount int ,Slock int ,CONSTRAINT PK_TestHead PRIMARY KEY(OID) );
create unique index I_TestHead_SOID on TestHead(SOID);
create table TestDetail (OID number,POID number,SOID number,VERID int ,DVERID int ,SEQUENCE int ,MapCount int ,Slock int ,CONSTRAINT PK_TestDetail PRIMARY KEY(OID) );
create index I_TestDetail_SOID on TestDetail(SOID);
D:\shanghaiboke\Yigo\Solution\fxf||fxf||Tue Sep 18 11:21:13 CST 2018
alter table TestDetail add (Material varchar(255) ,Amount numeric(16,2) );
D:\shanghaiboke\Yigo\Solution\fxf||fxf||Tue Sep 18 11:35:02 CST 2018
create table MaterialDict (OID number,SOID number,POID number,VERID int ,DVERID int ,Code varchar(255) ,Name varchar(255) ,NodeType int ,ParentID number,Status int ,Enable int ,TLeft int ,TRight int ,MapCount int ,Slock int ,CONSTRAINT PK_MaterialDict PRIMARY KEY(OID) );
create index I_MaterialDict_SOID on MaterialDict(SOID);
create table MaterialDict_RR (RoleID number,FormKey varchar(128) ,DictID number,HasRights int ,CONSTRAINT PK_MaterialDict_RR PRIMARY KEY(RoleID,DictID) );
create table MaterialDict_OR (OperatorID number,FormKey varchar(128) ,DictID number,HasRights int ,CONSTRAINT PK_MaterialDict_OR PRIMARY KEY(OperatorID,DictID) );
D:\shanghaiboke\Yigo\Solution\fxf||fxf||Tue Sep 18 13:50:44 CST 2018
create table WarehouseDict (OID number,SOID number,POID number,VERID int ,DVERID int ,Code varchar(255) ,Name varchar(255) ,NodeType int ,ParentID number,Status int ,Enable int ,TLeft int ,TRight int ,MapCount int ,Slock int ,CONSTRAINT PK_WarehouseDict PRIMARY KEY(OID) );
create index I_WarehouseDict_SOID on WarehouseDict(SOID);
create table WarehouseDict_RR (RoleID number,FormKey varchar(128) ,DictID number,HasRights int ,CONSTRAINT PK_WarehouseDict_RR PRIMARY KEY(RoleID,DictID) );
create table WarehouseDict_OR (OperatorID number,FormKey varchar(128) ,DictID number,HasRights int ,CONSTRAINT PK_WarehouseDict_OR PRIMARY KEY(OperatorID,DictID) );
D:\shanghaiboke\Yigo\Solution\fxf||fxf||Tue Sep 18 16:17:09 CST 2018
alter table TestDetail add (Warehouse number);
D:\shanghaiboke\Yigo\Solution\fxf||fxf||Tue Sep 18 16:42:07 CST 2018
alter table TestDetail add (UseType int );
D:\shanghaiboke\Yigo\Solution\fxf||fxf||Tue Sep 18 16:57:35 CST 2018
create table PurchaseHead (OID number,SOID number,POID number,VERID int ,DVERID int ,NO varchar(255) ,Status int ,BillDate date ,Creator number,CreateTime date ,Modifier number,ModifyTime date ,InstanceID number,MapCount int ,Slock int ,CONSTRAINT PK_PurchaseHead PRIMARY KEY(OID) );
create unique index I_PurchaseHead_SOID on PurchaseHead(SOID);
create table PurchaseDetail (OID number,POID number,SOID number,VERID int ,DVERID int ,SEQUENCE int ,MapCount int ,Slock int ,CONSTRAINT PK_PurchaseDetail PRIMARY KEY(OID) );
create index I_PurchaseDetail_SOID on PurchaseDetail(SOID);
D:\shanghaiboke\Yigo\Solution\fxf||fxf||Wed Sep 19 10:19:47 CST 2018
create table TestDetailTest (OID number,SOID number,POID number,VERID int ,DVERID int ,MapCount int ,Slock int ,CONSTRAINT PK_TestDetailTest PRIMARY KEY(OID) );
create index I_TestDetailTest_SOID on TestDetailTest(SOID);
create table TestClassHead (OID number,SOID number,POID number,VERID int ,DVERID int ,NO varchar(255) ,Status int ,BillDate date ,Creator number,CreateTime date ,Modifier number,ModifyTime date ,InstanceID number,SunPrice varchar(255) ,MapCount int ,Slock int ,CONSTRAINT PK_TestClassHead PRIMARY KEY(OID) );
create unique index I_TestClassHead_SOID on TestClassHead(SOID);
create table TestClassDetail (OID number,POID number,SOID number,VERID int ,DVERID int ,SEQUENCE int ,Warehouse number,Material number,Amount numeric(16,2) ,Price numeric(16,2) ,TotalPrice numeric(16,2) ,MapCount int ,Slock int ,CONSTRAINT PK_TestClassDetail PRIMARY KEY(OID) );
create index I_TestClassDetail_SOID on TestClassDetail(SOID);
D:\shanghaiboke\Yigo\Solution\fxf||fxf||Wed Sep 19 11:30:44 CST 2018
alter table PurchaseDetail add (Material number,Amount numeric(16,2) ,StocklnAmount numeric(16,2) );
create table StocklnHead (OID number,SOID number,POID number,VERID int ,DVERID int ,NO varchar(255) ,Status int ,BillDate date ,Creator number,CreateTime date ,Modifier number,ModifyTime date ,InstanceID number,MapCount int ,Slock int ,CONSTRAINT PK_StocklnHead PRIMARY KEY(OID) );
create unique index I_StocklnHead_SOID on StocklnHead(SOID);
create table StocklnDetail (OID number,POID number,SOID number,VERID int ,DVERID int ,SEQUENCE int ,Material number,Amount numeric(16,2) ,MapKey varchar(255) ,SrcOID number,SrcSOID number,MapCount int ,Slock int ,CONSTRAINT PK_StocklnDetail PRIMARY KEY(OID) );
create index I_StocklnDetail_SOID on StocklnDetail(SOID);
create index I_StocklnDetail_SRCO on StocklnDetail(SrcOID);
create index I_StocklnDetail_SRCS on StocklnDetail(SrcSOID);
D:\shanghaiboke\Yigo\Solution\fxf||fxf||Wed Sep 19 15:03:30 CST 2018
create table Inventory (OID number,SOID number,POID number,VERID int ,DVERID int ,Warehouse number,Material number,Amount numeric(16,2) ,MapCount int ,Slock int ,CONSTRAINT PK_Inventory PRIMARY KEY(OID) );
create unique index I_Inventory_MIGR on Inventory(Warehouse,Material);
create table PurchaseDataDetail (OID number,POID number,SOID number,VERID int ,DVERID int ,SEQUENCE int ,Material number,Amount numeric(16,2) ,NotlnAmount numeric(16,2) ,MapCount int ,Slock int ,CONSTRAINT PK_PurchaseDataDetail PRIMARY KEY(OID) );
create index I_chaseDataDetail_SOID on PurchaseDataDetail(SOID);
alter table StocklnDetail add (Warehouse number);
D:\shanghaiboke\Yigo\Solution\fxf||fxf||Wed Sep 19 15:29:28 CST 2018
create table StockOutHead (OID number,SOID number,POID number,VERID int ,DVERID int ,NO varchar(255) ,Status int ,BillDate date ,Creator number,CreateTime date ,Modifier number,ModifyTime date ,InstanceID number,MapCount int ,Slock int ,CONSTRAINT PK_StockOutHead PRIMARY KEY(OID) );
create unique index I_StockOutHead_SOID on StockOutHead(SOID);
create table StockOutDetail (OID number,POID number,SOID number,VERID int ,DVERID int ,SEQUENCE int ,Warehouse number,Material number,Amount numeric(16,2) ,MapCount int ,Slock int ,CONSTRAINT PK_StockOutDetail PRIMARY KEY(OID) );
create index I_StockOutDetail_SOID on StockOutDetail(SOID);
D:\shanghaiboke\Yigo\Solution\fxf||fxf||Wed Sep 19 16:28:57 CST 2018
alter table Inventory add (Months int ,Amount_begin numeric(16,2) ,Amount_end numeric(16,2) );
create table Inventory_LP (Warehouse number,Material number,Months int ,OID number,SOID number,VERID int ,DVERID int ,POID number,Slock int ,CONSTRAINT PK_Inventory_LP PRIMARY KEY(OID) );
create unique index I_Inventory_LP_MIGR on Inventory_LP(Warehouse,Material);
D:\shanghaiboke\培训\yigo\wuliao||MYSQL||Tue Sep 25 13:53:22 CST 2018
create table `SYS_Operator` (`OID` bigint ,`POID` bigint ,`SOID` bigint ,`VERID` int ,`DVERID` int ,`Status` int ,`Enable` int ,`NodeType` int ,`ParentID` bigint ,`TLeft` int ,`TRight` int ,`Code` varchar(50) ,`Name` varchar(50) ,`Password` varchar(512) ,`MapCount` int ,`Slock` int , PRIMARY KEY(`OID`) )ENGINE=INNODB;
create index I_SYS_Operator_SOID on `SYS_Operator`(`SOID`);
create table `SYS_OperatorRole` (`OID` bigint ,`POID` bigint ,`SOID` bigint ,`VERID` int ,`DVERID` int ,`Sequence` int ,`Role` bigint ,`MapCount` int ,`Slock` int , PRIMARY KEY(`OID`) )ENGINE=INNODB;
create index I_YS_OperatorRole_SOID on `SYS_OperatorRole`(`SOID`);
create table `SYS_Operator_RR` (`RoleID` bigint ,`FormKey` varchar(128) ,`DictID` bigint ,`HasRights` int , PRIMARY KEY(`RoleID`,`DictID`) )ENGINE=INNODB;
create table `SYS_Operator_OR` (`OperatorID` bigint ,`FormKey` varchar(128) ,`DictID` bigint ,`HasRights` int , PRIMARY KEY(`OperatorID`,`DictID`) )ENGINE=INNODB;
create table `CUST_StaticObj` (`OID` bigint ,`POID` bigint ,`SOID` bigint ,`VERID` int ,`DVERID` int ,`MapCount` int ,`Slock` int , PRIMARY KEY(`OID`) )ENGINE=INNODB;
create unique index I_CUST_StaticObj_SOID on `CUST_StaticObj`(`SOID`);
create table `CUST_Para` (`OID` bigint ,`POID` bigint ,`SOID` bigint ,`VERID` int ,`DVERID` int ,`ParaKey` varchar(64) ,`ParentKey` varchar(64) ,`ParaValue` bigint ,`NodeType` int ,`MapCount` int ,`Slock` int , PRIMARY KEY(`OID`) )ENGINE=INNODB;
create index I_CUST_Para_SOID on `CUST_Para`(`SOID`);
create table `SYS_Role` (`OID` bigint ,`POID` bigint ,`SOID` bigint ,`VERID` int ,`DVERID` int ,`Status` int ,`Enable` int ,`NodeType` int ,`ParentID` bigint ,`TLeft` int ,`TRight` int ,`Code` varchar(50) ,`Name` varchar(50) ,`IsAdmin` int ,`MapCount` int ,`Slock` int , PRIMARY KEY(`OID`) )ENGINE=INNODB;
create index I_SYS_Role_SOID on `SYS_Role`(`SOID`);
create table `SYS_Role_RR` (`RoleID` bigint ,`FormKey` varchar(128) ,`DictID` bigint ,`HasRights` int , PRIMARY KEY(`RoleID`,`DictID`) )ENGINE=INNODB;
create table `SYS_Role_OR` (`OperatorID` bigint ,`FormKey` varchar(128) ,`DictID` bigint ,`HasRights` int , PRIMARY KEY(`OperatorID`,`DictID`) )ENGINE=INNODB;
create table `BPM_Instance` (`InstanceID` bigint ,`OID` bigint ,`ProcessKey` varchar(255) ,`VerID` int ,`StartTime` datetime ,`EndTime` datetime ,`CostTime` bigint ,`InstanceState` int ,`FormKey` varchar(255) ,`FormName` varchar(255) ,`ObjectKey` varchar(255) ,`InstanceMode` int ,`ParentInstanceID` bigint ,`StepIDSeed` int ,`TokenIDSeed` int ,`LogSeed` int ,`LogIndexSeed` int ,`EventSeed` int ,`StateWorkitemID` bigint ,`TransactionID` int ,`TransitTo` int ,`TransWorkitem` bigint ,`BPMState` int ,`BeginOperatorID` bigint ,`DocState` int ,`MapCount` int ,`Slock` int , PRIMARY KEY(`InstanceID`) )ENGINE=INNODB;
create index I_BPM_InstanceOID on `BPM_Instance`(`OID`);
create table `BPM_Node` (`InstanceID` bigint ,`OID` bigint ,`InlineNodeID` int ,`NodeID` int ,`InlineVersion` int ,`NodeType` int ,`Result` int ,`SubInstanceID` bigint ,`WorkitemID` bigint ,`BPMState` int ,`CountSeed` int ,`TransactionID` int ,`assistTransactionID` int ,`MapCount` int ,`Slock` int , PRIMARY KEY(`InstanceID`,`InlineNodeID`,`NodeID`) )ENGINE=INNODB;
create index I_BPM_NodeInstanceID on `BPM_Node`(`InstanceID`);
create table `BPM_NodeRB` (`InstanceID` bigint ,`OID` bigint ,`InlineNodeID` int ,`NodeID` int ,`TransactionID` int ,`InlineVersion` int ,`NodeType` int ,`Result` int ,`SubInstanceID` bigint ,`WorkitemID` bigint ,`BPMState` int ,`CountSeed` int ,`assistTransactionID` int ,`MapCount` int ,`Slock` int , PRIMARY KEY(`InstanceID`,`InlineNodeID`,`NodeID`,`TransactionID`) )ENGINE=INNODB;
create index I_BPM_NodeRBInstanceID on `BPM_NodeRB`(`InstanceID`);
create table `BPM_StepInfo` (`InstanceID` bigint ,`OID` bigint ,`StepID` int ,`InlineNodeID` int ,`SourceNodeID` int ,`TargetNodeID` int ,`TransactionID` int ,`assistTransactionID` int ,`MapCount` int ,`Slock` int , PRIMARY KEY(`InstanceID`,`StepID`) )ENGINE=INNODB;
create index I_BPM_StepInfoInstanceID on `BPM_StepInfo`(`InstanceID`);
create table `BPM_StepInfoRB` (`InstanceID` bigint ,`OID` bigint ,`StepID` int ,`TransactionID` int ,`InlineNodeID` int ,`SourceNodeID` int ,`TargetNodeID` int ,`assistTransactionID` int ,`MapCount` int ,`Slock` int , PRIMARY KEY(`InstanceID`,`StepID`,`TransactionID`) )ENGINE=INNODB;
create index I_BPM_StepInfoRBInstanceID on `BPM_StepInfoRB`(`InstanceID`);
create table `BPM_Token` (`InstanceID` bigint ,`OID` bigint ,`TokenID` int ,`InlineNodeID` int ,`NodeID` int ,`TransactionID` int ,`assistTransactionID` int ,`MapCount` int ,`Slock` int , PRIMARY KEY(`InstanceID`,`TokenID`) )ENGINE=INNODB;
create index I_BPM_TokenInstanceID on `BPM_Token`(`InstanceID`);
create table `BPM_TokenRB` (`InstanceID` bigint ,`OID` bigint ,`TokenID` int ,`TransactionID` int ,`InlineNodeID` int ,`NodeID` int ,`assistTransactionID` int ,`MapCount` int ,`Slock` int , PRIMARY KEY(`InstanceID`,`TokenID`,`TransactionID`) )ENGINE=INNODB;
create index I_BPM_TokenRBInstanceID on `BPM_TokenRB`(`InstanceID`);
create table `BPM_WorkitemInfo` (`InstanceID` bigint ,`OID` bigint ,`WorkitemID` bigint ,`InlineNodeID` int ,`NodeID` int ,`NodeKey` varchar(255) ,`FormKey` varchar(255) ,`ParentWorkitemID` bigint ,`PWorkitemID4Transfer` bigint ,`TransitTo` int ,`backsiteWorkitemID` bigint ,`CountID` int ,`TransactionID` int ,`assistTransactionID` int ,`MapCount` int ,`Slock` int , PRIMARY KEY(`InstanceID`,`WorkitemID`) )ENGINE=INNODB;
create index I_PM_WorkitemInfoInstanceID on `BPM_WorkitemInfo`(`InstanceID`);
create table `BPM_WorkitemInfoRB` (`InstanceID` bigint ,`OID` bigint ,`WorkitemID` bigint ,`TransactionID` int ,`InlineNodeID` int ,`NodeID` int ,`NodeKey` varchar(255) ,`FormKey` varchar(255) ,`ParentWorkitemID` bigint ,`PWorkitemID4Transfer` bigint ,`TransitTo` int ,`backsiteWorkitemID` bigint ,`CountID` int ,`assistTransactionID` int ,`MapCount` int ,`Slock` int , PRIMARY KEY(`InstanceID`,`WorkitemID`,`TransactionID`) )ENGINE=INNODB;
create index I__WorkitemInfoRBInstanceID on `BPM_WorkitemInfoRB`(`InstanceID`);
create table `BPM_EventLog` (`InstanceID` bigint ,`OID` bigint ,`LogID` bigint ,`EventTime` datetime ,`ActionType` int ,`Name` varchar(255) ,`Soperator` bigint ,`Toperator` bigint ,`UserInfo` varchar(255) ,`MapCount` int ,`Slock` int , PRIMARY KEY(`InstanceID`,`LogID`) )ENGINE=INNODB;
create index I_BPM_EventLogInstanceID on `BPM_EventLog`(`InstanceID`);
create table `BPM_AuditRetLog` (`InstanceID` bigint ,`OID` bigint ,`WorkitemID` bigint ,`UserID` bigint ,`AuditResult` int ,`UserInfo` varchar(255) ,`NodeID` int ,`InlineNodeID` int ,`MapCount` int ,`Slock` int , PRIMARY KEY(`InstanceID`,`UserID`) )ENGINE=INNODB;
create index I_BPM_AuditRetLogInstanceID on `BPM_AuditRetLog`(`InstanceID`);
create table `BPM_TransitTo` (`InstanceID` bigint ,`OID` bigint ,`WorkitemID` bigint ,`NodeID` int ,`transitToWorkitem` bigint ,`MapCount` int ,`Slock` int , PRIMARY KEY(`WorkitemID`,`transitToWorkitem`) )ENGINE=INNODB;
create index I_BPM_TransitToInstanceID on `BPM_TransitTo`(`InstanceID`);
create table `BPM_Log` (`InstanceID` bigint ,`OID` bigint ,`LogID` int ,`LogIndex` int ,`InlineNodeID` int ,`NodeID` int ,`WorkitemID` bigint ,`WorkitemName` varchar(255) ,`WorkitemState` int ,`CreatTime` datetime ,`FinishTime` datetime ,`OperatorID` bigint ,`AuditResult` int ,`UserInfo` varchar(4000) ,`ResultInfo` varchar(255) ,`LaunchInfo` varchar(255) ,`TransactionID` int ,`assistTransactionID` int ,`MapCount` int ,`Slock` int , PRIMARY KEY(`InstanceID`,`LogID`) )ENGINE=INNODB;
create index I_BPM_LogInstanceID on `BPM_Log`(`InstanceID`);
create table `BPM_LogRB` (`InstanceID` bigint ,`OID` bigint ,`LogID` int ,`LogIndex` int ,`InlineNodeID` int ,`NodeID` int ,`WorkitemID` bigint ,`WorkitemName` varchar(255) ,`WorkitemState` int ,`CreatTime` datetime ,`FinishTime` datetime ,`OperatorID` bigint ,`AuditResult` int ,`UserInfo` varchar(4000) ,`ResultInfo` varchar(255) ,`LaunchInfo` varchar(255) ,`TransactionID` int ,`assistTransactionID` int ,`MapCount` int ,`Slock` int , PRIMARY KEY(`InstanceID`,`LogID`,`TransactionID`) )ENGINE=INNODB;
create index I_BPM_LogRBInstanceID on `BPM_LogRB`(`InstanceID`);
create table `BPM_TimerEvent` (`InstanceID` bigint ,`OID` bigint ,`InlineNodeID` int ,`NodeID` int ,`EventTime` datetime ,`TransactionID` int ,`AssistTransactionID` int ,`MapCount` int ,`Slock` int , PRIMARY KEY(`InstanceID`,`InlineNodeID`,`NodeID`) )ENGINE=INNODB;
create index I_BPM_TimerEventInstanceID on `BPM_TimerEvent`(`InstanceID`);
create table `BPM_TimerEventRB` (`InstanceID` bigint ,`OID` bigint ,`InlineNodeID` int ,`NodeID` int ,`EventTime` datetime ,`TransactionID` int ,`AssistTransactionID` int ,`MapCount` int ,`Slock` int , PRIMARY KEY(`InstanceID`,`InlineNodeID`,`NodeID`,`TransactionID`) )ENGINE=INNODB;
create index I_PM_TimerEventRBInstanceID on `BPM_TimerEventRB`(`InstanceID`);
create table `BPM_FocusInstance` (`InstanceID` bigint ,`OID` bigint ,`FocusInstanceID` bigint ,`InlineNodeID` int ,`NodeID` int ,`InstanceSyncState` int ,`TransactionID` int ,`AssistTransactionID` int ,`MapCount` int ,`Slock` int , PRIMARY KEY(`InstanceID`,`FocusInstanceID`) )ENGINE=INNODB;
create index I_M_FocusInstanceInstanceID on `BPM_FocusInstance`(`InstanceID`);
create table `BPM_FocusInstanceRB` (`InstanceID` bigint ,`OID` bigint ,`FocusInstanceID` bigint ,`InlineNodeID` int ,`NodeID` int ,`InstanceSyncState` int ,`TransactionID` int ,`AssistTransactionID` int ,`MapCount` int ,`Slock` int , PRIMARY KEY(`InstanceID`,`FocusInstanceID`,`TransactionID`) )ENGINE=INNODB;
create index I_FocusInstanceRBInstanceID on `BPM_FocusInstanceRB`(`InstanceID`);
create table `BPM_FocusedInstance` (`InstanceID` bigint ,`OID` bigint ,`FocusedInstanceID` bigint ,`SyncTriggerType` int ,`TransactionID` int ,`AssistTransactionID` int ,`MapCount` int ,`Slock` int , PRIMARY KEY(`InstanceID`,`FocusedInstanceID`) )ENGINE=INNODB;
create index I_FocusedInstanceInstanceID on `BPM_FocusedInstance`(`InstanceID`);
create table `BPM_FocusedInstanceRB` (`InstanceID` bigint ,`OID` bigint ,`FocusedInstanceID` bigint ,`SyncTriggerType` int ,`TransactionID` int ,`AssistTransactionID` int ,`MapCount` int ,`Slock` int , PRIMARY KEY(`InstanceID`,`FocusedInstanceID`,`TransactionID`) )ENGINE=INNODB;
create index I_cusedInstanceRBInstanceID on `BPM_FocusedInstanceRB`(`InstanceID`);
create table `BPM_Transaction` (`InstanceID` bigint ,`OID` bigint ,`TransactionID` int ,`WorkitemID` bigint ,`OperatorID` bigint ,`WorkitemRevoke` int ,`fieldKey` varchar(255) ,`fieldValue` varchar(255) ,`statusValue` int ,`MapCount` int ,`Slock` int , PRIMARY KEY(`InstanceID`,`TransactionID`) )ENGINE=INNODB;
create index I_BPM_TransactionInstanceID on `BPM_Transaction`(`InstanceID`);
create table `WF_Delegate` (`DelegateID` bigint ,`DelegateType` int ,`SrcOperatorID` int ,`TgtOperatorID` int ,`CreaterID` int ,`ObjectType` int ,`ObjectKey` varchar(255) ,`NodeKey` varchar(255) ,`StartTime` datetime ,`EndTime` datetime ,`AlwaysValid` int ,`Enable` int ,`AutoRetreat` int ,`MapCount` int ,`Slock` int , PRIMARY KEY(`DelegateID`) )ENGINE=INNODB;
create index I_WF_DelegateTime on `WF_Delegate`(`StartTime`,`AlwaysValid`,`EndTime`);
create table `BPM_Timer` (`InstanceID` bigint ,`OID` bigint ,`InlineNodeID` int ,`NodeID` int ,`ItemKey` varchar(255) ,`TriggerTime` datetime ,`MapCount` int ,`Slock` int , PRIMARY KEY(`InstanceID`,`InlineNodeID`,`NodeID`,`ItemKey`) )ENGINE=INNODB;
create index I_BPM_TimerInstanceID on `BPM_Timer`(`InstanceID`,`InlineNodeID`,`NodeID`);
create table `BPM_WorkitemTimer` (`InstanceID` bigint ,`OID` bigint ,`WorkitemID` bigint ,`ItemKey` varchar(255) ,`TriggerTime` datetime ,`MapCount` int ,`Slock` int , PRIMARY KEY(`WorkitemID`,`ItemKey`) )ENGINE=INNODB;
create index I_M_WorkitemTimerWorkitemID on `BPM_WorkitemTimer`(`WorkitemID`);
create table `BPM_StateRB` (`InstanceID` bigint ,`OID` bigint ,`InlineNodeID` int ,`NodeID` int ,`OperatorID` bigint ,`WorkitemID` bigint ,`OperationNodeID` int ,`TransactionID` int ,`AssistTransactionID` int ,`MapCount` int ,`Slock` int , PRIMARY KEY(`InstanceID`,`OperatorID`,`WorkitemID`,`OperationNodeID`,`TransactionID`) )ENGINE=INNODB;
create index I_BPM_StateRBInstanceID on `BPM_StateRB`(`InstanceID`);
create table `BPM_State` (`InstanceID` bigint ,`OID` bigint ,`InlineNodeID` int ,`NodeID` int ,`OperatorID` bigint ,`WorkitemID` bigint ,`OperationNodeID` int ,`TransactionID` int ,`AssistTransactionID` int ,`MapCount` int ,`Slock` int , PRIMARY KEY(`InstanceID`,`OperatorID`,`WorkitemID`,`OperationNodeID`) )ENGINE=INNODB;
create index I_BPM_StateInstanceID on `BPM_State`(`InstanceID`);
create table `BPM_Migration` (`OID` bigint ,`SOID` bigint ,`VERID` bigint ,`DVERID` bigint ,`POID` bigint ,`MapCount` int ,`Slock` int , PRIMARY KEY(`OID`) )ENGINE=INNODB;
create index I_BPM_Migration_SOID on `BPM_Migration`(`SOID`);
create table `BPM_DirectTransition` (`InstanceID` bigint ,`OID` bigint ,`InlineNodeID` int ,`NodeID` int ,`TgtNodeID` int ,`TransactionID` int ,`AssistTransactionID` int ,`MapCount` int ,`Slock` int , PRIMARY KEY(`InstanceID`,`InlineNodeID`,`NodeID`) )ENGINE=INNODB;
create table `BPM_DirectTransitionRB` (`InstanceID` bigint ,`OID` bigint ,`InlineNodeID` int ,`NodeID` int ,`TransactionID` int ,`TgtNodeID` int ,`AssistTransactionID` int ,`MapCount` int ,`Slock` int , PRIMARY KEY(`InstanceID`,`InlineNodeID`,`NodeID`,`TransactionID`) )ENGINE=INNODB;
create table `BPM_AttachmentInfo` (`InstanceID` bigint ,`OID` bigint ,`AttachmentKey` varchar(64) ,`AttachmentInfo` varchar(255) ,`AttachmentPara` varchar(255) ,`TransactionID` int ,`AssistTransactionID` int ,`MapCount` int ,`Slock` int , PRIMARY KEY(`InstanceID`,`AttachmentKey`) )ENGINE=INNODB;
create table `BPM_AttachmentInfoRB` (`InstanceID` bigint ,`OID` bigint ,`AttachmentKey` varchar(64) ,`AttachmentInfo` varchar(255) ,`AttachmentPara` varchar(255) ,`TransactionID` int ,`AssistTransactionID` int ,`MapCount` int ,`Slock` int , PRIMARY KEY(`InstanceID`,`AttachmentKey`,`TransactionID`) )ENGINE=INNODB;
create table `WF_Workitem` (`WorkitemID` bigint ,`OID` bigint ,`WorkitemName` varchar(255) ,`WorkitemState` int ,`CreatTime` datetime ,`FinishTime` datetime ,`OperatorID` bigint ,`SrcOperatorID` bigint ,`TransferType` int ,`AuditResult` int ,`UserInfo` varchar(4000) ,`ResultInfo` varchar(255) ,`InlineNodeID` int ,`NodeID` int ,`NodeKey` varchar(255) ,`NodeType` int ,`TransitTo` int ,`BacksiteWorkitemID` bigint ,`LaunchInfo` varchar(255) ,`TransactionID` int ,`AssistTransactionID` int ,`LogID` int ,`ParentAuditResult` int ,`MapCount` int ,`Slock` int , PRIMARY KEY(`WorkitemID`) )ENGINE=INNODB;
create table `WF_WorkitemRB` (`WorkitemID` bigint ,`OID` bigint ,`WorkitemName` varchar(255) ,`WorkitemState` int ,`CreatTime` datetime ,`FinishTime` datetime ,`OperatorID` bigint ,`SrcOperatorID` bigint ,`TransferType` int ,`AuditResult` int ,`UserInfo` varchar(4000) ,`ResultInfo` varchar(255) ,`InlineNodeID` int ,`NodeID` int ,`NodeType` int ,`TransitTo` int ,`BacksiteWorkitemID` bigint ,`LaunchInfo` varchar(255) ,`TransactionID` int ,`AssistTransactionID` int ,`LogID` int ,`ParentAuditResult` int ,`MapCount` int ,`Slock` int , PRIMARY KEY(`WorkitemID`,`TransactionID`) )ENGINE=INNODB;
create index I_WF_WorkitemRBWorkitemID on `WF_WorkitemRB`(`WorkitemID`);
create table `WF_ParticipatorRB` (`WorkitemID` bigint ,`OperatorID` bigint ,`OID` bigint ,`SrcOperatorID` bigint ,`DelegateID` bigint ,`TransactionID` int ,`AssistTransactionID` int ,`Visible` int ,`MapCount` int ,`Slock` int , PRIMARY KEY(`WorkitemID`,`OperatorID`,`TransactionID`) )ENGINE=INNODB;
create index I__ParticipatorRBWorkitemID on `WF_ParticipatorRB`(`WorkitemID`);
create table `WF_Participator` (`WorkitemID` bigint ,`OperatorID` bigint ,`OID` bigint ,`SrcOperatorID` bigint ,`DelegateID` bigint ,`TransactionID` int ,`AssistTransactionID` int ,`Visible` int ,`MapCount` int ,`Slock` int , PRIMARY KEY(`WorkitemID`,`OperatorID`) )ENGINE=INNODB;
create index I_WF_ParticipatorWorkitemID on `WF_Participator`(`WorkitemID`);
create table `SYS_IDSeed` (`SeedID` int ,`SeedMark` bigint ,`Description` varchar(255) ,`CreateTime` date ,`Slock` int , PRIMARY KEY(`SeedID`) )ENGINE=INNODB;
create table `SYS_Sequence` (`SequenceID` int ,`NoPrefix` varchar(100) ,`Slock` int , PRIMARY KEY(`NoPrefix`) )ENGINE=INNODB;
create table `USER_Attachment` (`OID` bigint ,`SOID` bigint ,`UploadTime` datetime ,`UploadOperator` bigint ,`Path` varchar(150) ,`Name` varchar(150) ,`FileSize` bigint ,`UploadSize` bigint ,`FileMD5` varchar(150) ,`Client` varchar(150) ,`Server` varchar(150) ,`Schedule` double ,`UploadStatus` varchar(20) ,`Slock` int , PRIMARY KEY(`OID`) )ENGINE=INNODB;
create table `SYS_RoleEntryRights` (`RoleID` bigint ,`EntryKey` varchar(512) ,`HasRights` int ,`Slock` int  )ENGINE=INNODB;
create index I_RoleEntryRightsRoleID on `SYS_RoleEntryRights`(`RoleID`);
create table `SYS_WorkingCalendar` (`OID` bigint ,`DateOfYear` varchar(255) ,`ClusterID` bigint ,`isWorkDay` int ,`Slock` int , PRIMARY KEY(`OID`) )ENGINE=INNODB;
create table `SYS_WorkingTime` (`OID` bigint ,`WorkingTime` varchar(255) ,`ClusterID` bigint ,`Slock` int , PRIMARY KEY(`OID`) )ENGINE=INNODB;
create table `SYS_OperatorEntryRights` (`OperatorID` bigint ,`EntryKey` varchar(512) ,`HasRights` int ,`Slock` int  )ENGINE=INNODB;
create index I_atorEntryRightsOperatorID on `SYS_OperatorEntryRights`(`OperatorID`);
create table `SYS_RoleOptRights` (`RoleID` bigint ,`FormKey` varchar(64) ,`OptKey` varchar(64) ,`HasRights` int ,`Slock` int , PRIMARY KEY(`RoleID`,`FormKey`,`OptKey`) )ENGINE=INNODB;
create table `SYS_OperatorOptRights` (`OperatorID` bigint ,`FormKey` varchar(64) ,`OptKey` varchar(64) ,`HasRights` int ,`Slock` int , PRIMARY KEY(`OperatorID`,`FormKey`,`OptKey`) )ENGINE=INNODB;
create table `SYS_RoleFieldRights` (`RoleID` bigint ,`FormKey` varchar(64) ,`FieldKey` varchar(64) ,`Visible` int ,`Enable` int ,`HasRights` int ,`Slock` int , PRIMARY KEY(`RoleID`,`FormKey`,`FieldKey`) )ENGINE=INNODB;
create table `SYS_OperatorFieldRights` (`OperatorID` bigint ,`FormKey` varchar(64) ,`FieldKey` varchar(64) ,`Visible` int ,`Enable` int ,`HasRights` int ,`Slock` int , PRIMARY KEY(`OperatorID`,`FormKey`,`FieldKey`) )ENGINE=INNODB;
create table `SYS_RoleFormRights` (`RoleID` bigint ,`FormKey` varchar(64) ,`HasRights` int ,`Slock` int  )ENGINE=INNODB;
create table `SYS_OperatorFormRights` (`OperatorID` bigint ,`FormKey` varchar(64) ,`HasRights` int ,`Slock` int  )ENGINE=INNODB;
create table `SYS_Para` (`ParaKey` varchar(50) ,`ParaValue` varchar(1024) ,`ParaVer` int ,`Slock` int  )ENGINE=INNODB;
create table `SYS_SessionLog` (`OID` bigint ,`ClientID` varchar(50) ,`Operator` bigint ,`Happentime` datetime ,`Flag` int ,`IP` varchar(50) ,`Session_Mode` int ,`Host` varchar(50) ,`Port` varchar(50) ,`Notes` varchar(100) ,`Slock` int , PRIMARY KEY(`OID`) )ENGINE=INNODB;
create table `SYS_OperatorCertificate` (`OID` bigint ,`OperatorID` bigint ,`Fingerprint` varchar(1024) ,`ClientName` varchar(255) ,`Alias` varchar(100) ,`PublicKey` varchar(1024) ,`PrivateKey` varchar(1024) ,`StartTime` datetime ,`EndTime` datetime ,`UpdateTime` datetime ,`Flag` int ,`Slock` int , PRIMARY KEY(`OID`) )ENGINE=INNODB;
create table `SYS_OperateFingerprintCheck` (`OID` bigint ,`OperatorID` bigint ,`MetaKey` varchar(128) ,`CmdKey` varchar(100) ,`Slock` int , PRIMARY KEY(`OID`) )ENGINE=INNODB;
create table `SYS_RelationDataObject` (`OperatorID` bigint ,`OperationType` int ,`DataObjectKey` varchar(255) ,`Slock` int  )ENGINE=INNODB;
create table `SYS_RelationScript` (`OperatorID` bigint ,`FormKey` varchar(255) ,`ScriptName` varchar(255) ,`Slock` int  )ENGINE=INNODB;
create table `SYS_RelationService` (`OperatorID` bigint ,`ServiceName` varchar(255) ,`Slock` int  )ENGINE=INNODB;
create table `SYS_RoleDataObjectRights` (`RoleID` bigint ,`DataObjectKey` varchar(255) ,`NewOpt` int ,`DeleteOpt` int ,`SaveOpt` int ,`LoadOpt` int ,`Slock` int  )ENGINE=INNODB;
create table `SYS_OperatorDataObjectRights` (`OperatorID` bigint ,`DataObjectKey` varchar(255) ,`NewOpt` int ,`DeleteOpt` int ,`SaveOpt` int ,`LoadOpt` int ,`Slock` int  )ENGINE=INNODB;
create table `SYS_RoleCustomOptRights` (`RoleID` bigint ,`GroupKey` varchar(255) ,`OptKey` varchar(255) ,`HasRights` int ,`Slock` int  )ENGINE=INNODB;
create table `SYS_OperatorCustomOptRights` (`OperatorID` bigint ,`GroupKey` varchar(255) ,`OptKey` varchar(255) ,`HasRights` int ,`Slock` int  )ENGINE=INNODB;
create table `SYS_RoleNamedSqlRights` (`RoleID` bigint ,`Name` varchar(255) ,`HasRights` int ,`Slock` int  )ENGINE=INNODB;
create table `SYS_OperatorNamedSqlRights` (`OperatorID` bigint ,`Name` varchar(255) ,`HasRights` int ,`Slock` int  )ENGINE=INNODB;
create table `SYS_RoleExServiceRights` (`RoleID` bigint ,`Name` varchar(255) ,`HasRights` int ,`Slock` int  )ENGINE=INNODB;
create table `SYS_OperatorExServiceRights` (`OperatorID` bigint ,`Name` varchar(255) ,`HasRights` int ,`Slock` int  )ENGINE=INNODB;
create table `QRTZ_JOB_DETAILS` (`SCHED_NAME` varchar(120) ,`JOB_NAME` varchar(200) ,`JOB_GROUP` varchar(200) ,`DESCRIPTION` varchar(250) ,`JOB_CLASS_NAME` varchar(250) ,`IS_DURABLE` varchar(1) ,`IS_NONCONCURRENT` varchar(1) ,`IS_UPDATE_DATA` varchar(1) ,`REQUESTS_RECOVERY` varchar(1) ,`JOB_DATA` long varbinary ,`Slock` int , PRIMARY KEY(`SCHED_NAME`,`JOB_NAME`,`JOB_GROUP`) )ENGINE=INNODB;
create table `QRTZ_TRIGGERS` (`SCHED_NAME` varchar(120) ,`TRIGGER_NAME` varchar(200) ,`TRIGGER_GROUP` varchar(200) ,`JOB_NAME` varchar(200) ,`JOB_GROUP` varchar(200) ,`DESCRIPTION` varchar(250) ,`NEXT_FIRE_TIME` bigint ,`PREV_FIRE_TIME` bigint ,`PRIORITY` int ,`TRIGGER_STATE` varchar(16) ,`TRIGGER_TYPE` varchar(8) ,`START_TIME` bigint ,`END_TIME` bigint ,`CALENDAR_NAME` varchar(200) ,`MISFIRE_INSTR` int ,`JOB_DATA` long varbinary ,`Slock` int , PRIMARY KEY(`SCHED_NAME`,`TRIGGER_NAME`,`TRIGGER_GROUP`) )ENGINE=INNODB;
create table `QRTZ_SIMPLE_TRIGGERS` (`SCHED_NAME` varchar(120) ,`TRIGGER_NAME` varchar(200) ,`TRIGGER_GROUP` varchar(200) ,`REPEAT_COUNT` bigint ,`REPEAT_INTERVAL` bigint ,`TIMES_TRIGGERED` bigint ,`Slock` int , PRIMARY KEY(`SCHED_NAME`,`TRIGGER_NAME`,`TRIGGER_GROUP`) )ENGINE=INNODB;
create table `QRTZ_CRON_TRIGGERS` (`SCHED_NAME` varchar(120) ,`TRIGGER_NAME` varchar(200) ,`TRIGGER_GROUP` varchar(200) ,`CRON_EXPRESSION` varchar(200) ,`TIME_ZONE_ID` varchar(80) ,`Slock` int , PRIMARY KEY(`SCHED_NAME`,`TRIGGER_NAME`,`TRIGGER_GROUP`) )ENGINE=INNODB;
create table `QRTZ_SIMPROP_TRIGGERS` (`SCHED_NAME` varchar(120) ,`TRIGGER_NAME` varchar(200) ,`TRIGGER_GROUP` varchar(200) ,`STR_PROP_1` varchar(512) ,`STR_PROP_2` varchar(512) ,`STR_PROP_3` varchar(512) ,`INT_PROP_1` int ,`INT_PROP_2` int ,`LONG_PROP_1` bigint ,`LONG_PROP_2` bigint ,`DEC_PROP_1` numeric(13,4) ,`DEC_PROP_2` numeric(13,4) ,`BOOL_PROP_1` varchar(1) ,`BOOL_PROP_2` varchar(1) ,`Slock` int , PRIMARY KEY(`SCHED_NAME`,`TRIGGER_NAME`,`TRIGGER_GROUP`) )ENGINE=INNODB;
create table `QRTZ_BLOB_TRIGGERS` (`SCHED_NAME` varchar(120) ,`TRIGGER_NAME` varchar(200) ,`TRIGGER_GROUP` varchar(200) ,`BLOB_DATA` long varbinary ,`Slock` int , PRIMARY KEY(`SCHED_NAME`,`TRIGGER_NAME`,`TRIGGER_GROUP`) )ENGINE=INNODB;
create table `QRTZ_CALENDARS` (`SCHED_NAME` varchar(120) ,`CALENDAR_NAME` varchar(200) ,`CALENDAR` long varbinary ,`Slock` int , PRIMARY KEY(`SCHED_NAME`,`CALENDAR_NAME`) )ENGINE=INNODB;
create table `QRTZ_PAUSED_TRIGGER_GRPS` (`SCHED_NAME` varchar(120) ,`TRIGGER_GROUP` varchar(200) ,`Slock` int , PRIMARY KEY(`SCHED_NAME`,`TRIGGER_GROUP`) )ENGINE=INNODB;
create table `QRTZ_FIRED_TRIGGERS` (`SCHED_NAME` varchar(120) ,`ENTRY_ID` varchar(95) ,`TRIGGER_NAME` varchar(200) ,`TRIGGER_GROUP` varchar(200) ,`INSTANCE_NAME` varchar(200) ,`FIRED_TIME` bigint ,`SCHED_TIME` bigint ,`PRIORITY` int ,`STATE` varchar(16) ,`JOB_NAME` varchar(200) ,`JOB_GROUP` varchar(200) ,`IS_NONCONCURRENT` varchar(1) ,`REQUESTS_RECOVERY` varchar(1) ,`Slock` int , PRIMARY KEY(`SCHED_NAME`,`ENTRY_ID`) )ENGINE=INNODB;
create table `QRTZ_SCHEDULER_STATE` (`SCHED_NAME` varchar(120) ,`INSTANCE_NAME` varchar(200) ,`LAST_CHECKIN_TIME` bigint ,`CHECKIN_INTERVAL` bigint ,`Slock` int , PRIMARY KEY(`SCHED_NAME`,`INSTANCE_NAME`) )ENGINE=INNODB;
create table `QRTZ_LOCKS` (`SCHED_NAME` varchar(120) ,`LOCK_NAME` varchar(40) ,`Slock` int , PRIMARY KEY(`SCHED_NAME`,`LOCK_NAME`) )ENGINE=INNODB;
D:\shanghaiboke\培训\yigo\wuliao||MYSQL||Tue Sep 25 13:54:38 CST 2018
create table `testHead` (`OID` bigint ,`SOID` bigint ,`POID` bigint ,`VERID` int ,`DVERID` int ,`NO` varchar(255) ,`Status` int ,`BillDate` datetime ,`Creator` bigint ,`CreateTime` datetime ,`Modifier` bigint ,`ModifyTime` datetime ,`InstanceID` bigint ,`MapCount` int ,`Slock` int , PRIMARY KEY(`OID`) )ENGINE=INNODB;
create unique index I_testHead_SOID on `testHead`(`SOID`);
create table `testDetail` (`OID` bigint ,`POID` bigint ,`SOID` bigint ,`VERID` int ,`DVERID` int ,`SEQUENCE` int ,`MapCount` int ,`Slock` int , PRIMARY KEY(`OID`) )ENGINE=INNODB;
create index I_testDetail_SOID on `testDetail`(`SOID`);
D:\shanghaiboke\培训\yigo\wuliao||MYSQL||Tue Sep 25 13:58:07 CST 2018
alter table `testDetail` add (`Number` bigint );
D:\shanghaiboke\培训\yigo\wuliao||MYSQL||Tue Sep 25 14:34:48 CST 2018
create table `dict` (`OID` bigint ,`SOID` bigint ,`POID` bigint ,`VERID` int ,`DVERID` int ,`Code` varchar(255) ,`Name` varchar(255) ,`NodeType` int ,`ParentID` bigint ,`Status` int ,`Enable` int ,`TLeft` int ,`TRight` int ,`MapCount` int ,`Slock` int , PRIMARY KEY(`OID`) )ENGINE=INNODB;
create index I_dict_SOID on `dict`(`SOID`);
create table `dict_RR` (`RoleID` bigint ,`FormKey` varchar(128) ,`DictID` bigint ,`HasRights` int , PRIMARY KEY(`RoleID`,`DictID`) )ENGINE=INNODB;
create table `dict_OR` (`OperatorID` bigint ,`FormKey` varchar(128) ,`DictID` bigint ,`HasRights` int , PRIMARY KEY(`OperatorID`,`DictID`) )ENGINE=INNODB;
create table `qingjiaHead` (`OID` bigint ,`SOID` bigint ,`POID` bigint ,`VERID` int ,`DVERID` int ,`NO` varchar(255) ,`Status` int ,`BillDate` datetime ,`Creator` bigint ,`CreateTime` datetime ,`Modifier` bigint ,`ModifyTime` datetime ,`InstanceID` bigint ,`MapCount` int ,`Slock` int , PRIMARY KEY(`OID`) )ENGINE=INNODB;
create unique index I_qingjiaHead_SOID on `qingjiaHead`(`SOID`);
create table `qingjiaDetail` (`OID` bigint ,`POID` bigint ,`SOID` bigint ,`VERID` int ,`DVERID` int ,`SEQUENCE` int ,`MapCount` int ,`Slock` int , PRIMARY KEY(`OID`) )ENGINE=INNODB;
create index I_qingjiaDetail_SOID on `qingjiaDetail`(`SOID`);
alter table `testDetail` add (`Material` bigint );
D:\shanghaiboke\培训\yigo\wuliao||MYSQL||Tue Sep 25 14:35:57 CST 2018
alter table `qingjiaHead` add (`Number` varchar(255) );
D:\shanghaiboke\培训\yigo\wuliao||MYSQL||Tue Sep 25 14:37:35 CST 2018
alter table `qingjiaHead` add (`EmpName` varchar(255) ,`StatusType` varchar(255) );
D:\shanghaiboke\培训\yigo\wuliao||MYSQL||Tue Sep 25 14:39:30 CST 2018
alter table `qingjiaHead` add (`StartDate` datetime ,`EndDate` datetime );
D:\shanghaiboke\培训\yigo\wuliao||MYSQL||Tue Sep 25 14:44:03 CST 2018
alter table `qingjiaHead` add (`Days` varchar(255) );
D:\shanghaiboke\培训\yigo\wuliao||MYSQL||Tue Sep 25 14:48:43 CST 2018
alter table `qingjiaDetail` add (`Start` date ,`End` date );
D:\shanghaiboke\培训\yigo\wuliao||MYSQL||Tue Sep 25 15:24:13 CST 2018
alter table `qingjiaHead` add (`Shuzhi1` numeric(16,2) ,`Shuzhi2` numeric(16,2) ,`Shuzhi3` numeric(16,2) );
D:\shanghaiboke\培训\yigo\wuliao||MYSQL||Tue Sep 25 15:34:03 CST 2018
alter table `qingjiaHead` add (`DynamicDict1` bigint ,`DynamicDict1ItemKey` varchar(255) );
D:\shanghaiboke\培训\yigo\wuliao||MYSQL||Tue Sep 25 15:35:34 CST 2018
alter table `qingjiaHead` add (`DynamicDict2` bigint ,`DynamicDict2ItemKey` varchar(255) );
D:\shanghaiboke\培训\yigo\wuliao||MYSQL||Tue Sep 25 16:05:41 CST 2018
create table `Province` (`OID` bigint ,`SOID` bigint ,`POID` bigint ,`VERID` int ,`DVERID` int ,`Code` varchar(255) ,`Name` varchar(255) ,`NodeType` int ,`ParentID` bigint ,`Status` int ,`Enable` int ,`TLeft` int ,`TRight` int ,`MapCount` int ,`Slock` int , PRIMARY KEY(`OID`) )ENGINE=INNODB;
create index I_Province_SOID on `Province`(`SOID`);
create table `Province_RR` (`RoleID` bigint ,`FormKey` varchar(128) ,`DictID` bigint ,`HasRights` int , PRIMARY KEY(`RoleID`,`DictID`) )ENGINE=INNODB;
create table `Province_OR` (`OperatorID` bigint ,`FormKey` varchar(128) ,`DictID` bigint ,`HasRights` int , PRIMARY KEY(`OperatorID`,`DictID`) )ENGINE=INNODB;
create table `qiuzhixinxiHead` (`OID` bigint ,`SOID` bigint ,`POID` bigint ,`VERID` int ,`DVERID` int ,`NO` varchar(255) ,`Status` int ,`BillDate` datetime ,`Creator` bigint ,`CreateTime` datetime ,`Modifier` bigint ,`ModifyTime` datetime ,`InstanceID` bigint ,`MapCount` int ,`Slock` int , PRIMARY KEY(`OID`) )ENGINE=INNODB;
create unique index I_qiuzhixinxiHead_SOID on `qiuzhixinxiHead`(`SOID`);
create table `qiuzhixinxiDetail` (`OID` bigint ,`POID` bigint ,`SOID` bigint ,`VERID` int ,`DVERID` int ,`SEQUENCE` int ,`MapCount` int ,`Slock` int , PRIMARY KEY(`OID`) )ENGINE=INNODB;
create index I_uzhixinxiDetail_SOID on `qiuzhixinxiDetail`(`SOID`);
D:\shanghaiboke\培训\yigo\wuliao||MYSQL||Tue Sep 25 16:23:29 CST 2018
create table `city` (`OID` bigint ,`SOID` bigint ,`POID` bigint ,`VERID` int ,`DVERID` int ,`Code` varchar(255) ,`Name` varchar(255) ,`NodeType` int ,`ParentID` bigint ,`Status` int ,`Enable` int ,`TLeft` int ,`TRight` int ,`ProvinceID` bigint ,`MapCount` int ,`Slock` int , PRIMARY KEY(`OID`) )ENGINE=INNODB;
create index I_city_SOID on `city`(`SOID`);
create table `city_RR` (`RoleID` bigint ,`FormKey` varchar(128) ,`DictID` bigint ,`HasRights` int , PRIMARY KEY(`RoleID`,`DictID`) )ENGINE=INNODB;
create table `city_OR` (`OperatorID` bigint ,`FormKey` varchar(128) ,`DictID` bigint ,`HasRights` int , PRIMARY KEY(`OperatorID`,`DictID`) )ENGINE=INNODB;
create table `provincecityHead` (`OID` bigint ,`SOID` bigint ,`POID` bigint ,`VERID` int ,`DVERID` int ,`NO` varchar(255) ,`Status` int ,`BillDate` datetime ,`Creator` bigint ,`CreateTime` datetime ,`Modifier` bigint ,`ModifyTime` datetime ,`InstanceID` bigint ,`MapCount` int ,`Slock` int , PRIMARY KEY(`OID`) )ENGINE=INNODB;
create unique index I_rovincecityHead_SOID on `provincecityHead`(`SOID`);
create table `provincecityDetail` (`OID` bigint ,`POID` bigint ,`SOID` bigint ,`VERID` int ,`DVERID` int ,`SEQUENCE` int ,`MapCount` int ,`Slock` int , PRIMARY KEY(`OID`) )ENGINE=INNODB;
create index I_vincecityDetail_SOID on `provincecityDetail`(`SOID`);
D:\shanghaiboke\培训\yigo\wuliao||MYSQL||Tue Sep 25 16:26:25 CST 2018
alter table `provincecityHead` add (`Province` bigint ,`City` bigint );
D:\shanghaiboke\培训\yigo\wuliao||MYSQL||Tue Sep 25 19:56:20 CST 2018
create table `lianshidict` (`OID` bigint ,`SOID` bigint ,`POID` bigint ,`VERID` int ,`DVERID` int ,`Code` varchar(255) ,`Name` varchar(255) ,`Status` int ,`Enable` int ,`NodeType` int ,`ParentID` bigint ,`TLeft` int ,`TRight` int ,`MapCount` int ,`Slock` int , PRIMARY KEY(`OID`) )ENGINE=INNODB;
create index I_lianshidict_SOID on `lianshidict`(`SOID`);
create table `lianshidict_RR` (`RoleID` bigint ,`FormKey` varchar(128) ,`DictID` bigint ,`HasRights` int , PRIMARY KEY(`RoleID`,`DictID`) )ENGINE=INNODB;
create table `lianshidict_OR` (`OperatorID` bigint ,`FormKey` varchar(128) ,`DictID` bigint ,`HasRights` int , PRIMARY KEY(`OperatorID`,`DictID`) )ENGINE=INNODB;
D:\shanghaiboke\培训\yigo\wuliao||MYSQL||Tue Sep 25 19:58:57 CST 2018
alter table `qingjiaHead` add (`Lianshidict` bigint );
D:\shanghaiboke\培训\yigo\wuliao||MYSQL||Tue Sep 25 20:32:05 CST 2018
alter table `qiuzhixinxiHead` add (`Name` varchar(255) ,`Dict2` bigint ,`Province` bigint ,`City` bigint );
D:\shanghaiboke\培训\yigo\wuliao||MYSQL||Tue Sep 25 20:41:43 CST 2018
alter table `qiuzhixinxiHead` add (`Zhusuo` varchar(255) ,`Phone` varchar(255) ,`Xiala` varchar(255) ,`Zhuanye` varchar(4000) );
D:\shanghaiboke\培训\yigo\wuliao||MYSQL||Tue Sep 25 20:49:57 CST 2018
alter table `qiuzhixinxiHead` add (`Beizhu` varchar(4000) ,`Jiaoyu` varchar(4000) ,`Gongzuo` varchar(4000) ,`CheckBox1` int );
D:\shanghaiboke\培训\yigo\wuliao||MYSQL||Tue Sep 25 20:53:21 CST 2018
alter table `qiuzhixinxiHead` add (`CheckBox2` int ,`CheckBox3` int ,`CheckBox4` int );
D:\shanghaiboke\培训\yigo\wuliao||MYSQL||Tue Sep 25 20:57:42 CST 2018
alter table `qiuzhixinxiHead` add (`Java` int ,`C` int ,`Sql` int ,`Net` int );
D:\shanghaiboke\培训\yigo\wuliao||MYSQL||Wed Sep 26 09:16:13 CST 2018
create table `test` (`OID` bigint ,`SOID` bigint ,`POID` bigint ,`VERID` int ,`DVERID` int ,`Material` bigint ,`Amount` numeric(16,2) ,`MapCount` int ,`Slock` int , PRIMARY KEY(`OID`) )ENGINE=INNODB;
create index I_test_SOID on `test`(`SOID`);
D:\shanghaiboke\培训\yigo\wuliao||MYSQL||Wed Sep 26 09:25:39 CST 2018
alter table `test` add (`UserType` bigint );
D:\shanghaiboke\培训\yigo\wuliao||MYSQL||Wed Sep 26 09:38:16 CST 2018
alter table `test` add (`SumExpand` numeric(16,2) );
D:\shanghaiboke\培训\yigo\wuliao||MYSQL||Wed Sep 26 09:49:35 CST 2018
alter table `test` add (`City` varchar(255) );
D:\shanghaiboke\培训\yigo\wuliao||MYSQL||Wed Sep 26 10:57:49 CST 2018
create table `leaveHead` (`OID` bigint ,`SOID` bigint ,`POID` bigint ,`VERID` int ,`DVERID` int ,`NO` varchar(255) ,`Status` int ,`BillDate` datetime ,`Creator` bigint ,`CreateTime` datetime ,`Modifier` bigint ,`ModifyTime` datetime ,`InstanceID` bigint ,`Number` varchar(255) ,`Name` varchar(255) ,`StartDate` datetime ,`EndDate` datetime ,`Shuyou` varchar(255) ,`MapCount` int ,`Slock` int , PRIMARY KEY(`OID`) )ENGINE=INNODB;
create unique index I_leaveHead_SOID on `leaveHead`(`SOID`);
create table `leaveDetail` (`OID` bigint ,`POID` bigint ,`SOID` bigint ,`VERID` int ,`DVERID` int ,`SEQUENCE` int ,`MapCount` int ,`Slock` int , PRIMARY KEY(`OID`) )ENGINE=INNODB;
create index I_leaveDetail_SOID on `leaveDetail`(`SOID`);
D:\shanghaiboke\培训\yigo\wuliao||MYSQL||Wed Sep 26 13:55:12 CST 2018
create table `RukudanHead` (`OID` bigint ,`SOID` bigint ,`POID` bigint ,`VERID` int ,`DVERID` int ,`NO` varchar(255) ,`Status` int ,`BillDate` datetime ,`Creator` bigint ,`CreateTime` datetime ,`Modifier` bigint ,`ModifyTime` datetime ,`InstanceID` bigint ,`MapCount` int ,`Slock` int , PRIMARY KEY(`OID`) )ENGINE=INNODB;
create unique index I_RukudanHead_SOID on `RukudanHead`(`SOID`);
create table `RukudanDetail` (`OID` bigint ,`POID` bigint ,`SOID` bigint ,`VERID` int ,`DVERID` int ,`SEQUENCE` int ,`MapCount` int ,`Slock` int , PRIMARY KEY(`OID`) )ENGINE=INNODB;
create index I_RukudanDetail_SOID on `RukudanDetail`(`SOID`);
D:\shanghaiboke\培训\yigo\wuliao||MYSQL||Wed Sep 26 14:10:28 CST 2018
alter table `RukudanDetail` add (`Material` bigint ,`Uint` varchar(255) ,`Price` numeric(16,2) ,`Amount` numeric(16,2) ,`TotalPrice` numeric(16,2) );
D:\shanghaiboke\培训\yigo\wuliao||MYSQL||Wed Sep 26 14:15:54 CST 2018
create table `MaterialDict` (`OID` bigint ,`SOID` bigint ,`POID` bigint ,`VERID` int ,`DVERID` int ,`Code` varchar(255) ,`Name` varchar(255) ,`NodeType` int ,`ParentID` bigint ,`Status` int ,`Enable` int ,`TLeft` int ,`TRight` int ,`MapCount` int ,`Slock` int , PRIMARY KEY(`OID`) )ENGINE=INNODB;
create index I_MaterialDict_SOID on `MaterialDict`(`SOID`);
create table `MaterialDict_RR` (`RoleID` bigint ,`FormKey` varchar(128) ,`DictID` bigint ,`HasRights` int , PRIMARY KEY(`RoleID`,`DictID`) )ENGINE=INNODB;
create table `MaterialDict_OR` (`OperatorID` bigint ,`FormKey` varchar(128) ,`DictID` bigint ,`HasRights` int , PRIMARY KEY(`OperatorID`,`DictID`) )ENGINE=INNODB;
D:\shanghaiboke\培训\yigo\wuliao||MYSQL||Wed Sep 26 14:42:31 CST 2018
alter table `MaterialDict` add (`Unit` varchar(255) ,`Price` numeric(16,2) );
D:\shanghaiboke\培训\yigo\wuliao||MYSQL||Wed Sep 26 15:18:26 CST 2018
alter table `RukudanHead` add (`Hege` numeric(16,2) );
D:\shanghaiboke\培训\yigo\wuliao||MYSQL||Wed Sep 26 15:23:40 CST 2018
alter table `RukudanDetail` add (`Hege` varchar(255) );
D:\shanghaiboke\培训\yigo\wuliao||MYSQL||Wed Sep 26 16:44:12 CST 2018
create table `InventoryList` (`OID` bigint ,`SOID` bigint ,`POID` bigint ,`VERID` int ,`DVERID` int ,`Warehouse` bigint ,`Material` bigint ,`Amount` numeric(16,2) ,`MapCount` int ,`Slock` int , PRIMARY KEY(`OID`) )ENGINE=INNODB;
create unique index I_InventoryList_MIGR on `InventoryList`(`Warehouse`,`Material`);
create table `InventoryHead` (`OID` bigint ,`SOID` bigint ,`POID` bigint ,`VERID` int ,`DVERID` int ,`NO` varchar(255) ,`Status` int ,`BillDate` datetime ,`Creator` bigint ,`CreateTime` datetime ,`Modifier` bigint ,`ModifyTime` datetime ,`InstanceID` bigint ,`MapCount` int ,`Slock` int , PRIMARY KEY(`OID`) )ENGINE=INNODB;
create unique index I_InventoryHead_SOID on `InventoryHead`(`SOID`);
create table `InventoryDetail` (`OID` bigint ,`POID` bigint ,`SOID` bigint ,`VERID` int ,`DVERID` int ,`SEQUENCE` int ,`Warehouse` bigint ,`Material` bigint ,`Amount` numeric(16,2) ,`MapCount` int ,`Slock` int , PRIMARY KEY(`OID`) )ENGINE=INNODB;
create index I_InventoryDetail_SOID on `InventoryDetail`(`SOID`);
D:\shanghaiboke\培训\yigo\wuliao||MYSQL||Wed Sep 26 17:02:35 CST 2018
create table `Rukudan2Head` (`OID` bigint ,`SOID` bigint ,`POID` bigint ,`VERID` int ,`DVERID` int ,`NO` varchar(255) ,`Status` int ,`BillDate` datetime ,`Creator` bigint ,`CreateTime` datetime ,`Modifier` bigint ,`ModifyTime` datetime ,`InstanceID` bigint ,`MapCount` int ,`Slock` int , PRIMARY KEY(`OID`) )ENGINE=INNODB;
create unique index I_Rukudan2Head_SOID on `Rukudan2Head`(`SOID`);
create table `Rukudan2Detail` (`OID` bigint ,`POID` bigint ,`SOID` bigint ,`VERID` int ,`DVERID` int ,`SEQUENCE` int ,`Warehouse` bigint ,`Material` bigint ,`Amount` numeric(16,2) ,`MapCount` int ,`Slock` int , PRIMARY KEY(`OID`) )ENGINE=INNODB;
create index I_Rukudan2Detail_SOID on `Rukudan2Detail`(`SOID`);
D:\shanghaiboke\培训\yigo\wuliao||MYSQL||Wed Sep 26 18:16:41 CST 2018
create table `Warehouse` (`OID` bigint ,`SOID` bigint ,`POID` bigint ,`VERID` int ,`DVERID` int ,`Code` varchar(255) ,`Name` varchar(255) ,`NodeType` int ,`ParentID` bigint ,`Status` int ,`Enable` int ,`TLeft` int ,`TRight` int ,`MapCount` int ,`Slock` int , PRIMARY KEY(`OID`) )ENGINE=INNODB;
create index I_Warehouse_SOID on `Warehouse`(`SOID`);
create table `Warehouse_RR` (`RoleID` bigint ,`FormKey` varchar(128) ,`DictID` bigint ,`HasRights` int , PRIMARY KEY(`RoleID`,`DictID`) )ENGINE=INNODB;
create table `Warehouse_OR` (`OperatorID` bigint ,`FormKey` varchar(128) ,`DictID` bigint ,`HasRights` int , PRIMARY KEY(`OperatorID`,`DictID`) )ENGINE=INNODB;
D:\shanghaiboke\培训\yigo\wuliao||MYSQL||Wed Sep 26 19:42:39 CST 2018
create table `ChukudanHead` (`OID` bigint ,`SOID` bigint ,`POID` bigint ,`VERID` int ,`DVERID` int ,`NO` varchar(255) ,`Status` int ,`BillDate` datetime ,`Creator` bigint ,`CreateTime` datetime ,`Modifier` bigint ,`ModifyTime` datetime ,`InstanceID` bigint ,`MapCount` int ,`Slock` int , PRIMARY KEY(`OID`) )ENGINE=INNODB;
create unique index I_ChukudanHead_SOID on `ChukudanHead`(`SOID`);
create table `ChukudanDetail` (`OID` bigint ,`POID` bigint ,`SOID` bigint ,`VERID` int ,`DVERID` int ,`SEQUENCE` int ,`Warehouse` bigint ,`Material` bigint ,`Amount` numeric(16,2) ,`MapCount` int ,`Slock` int , PRIMARY KEY(`OID`) )ENGINE=INNODB;
create index I_ChukudanDetail_SOID on `ChukudanDetail`(`SOID`);
D:\shanghaiboke\培训\yigo\wuliao||MYSQL||Wed Sep 26 19:46:34 CST 2018
alter table `ChukudanHead` add (`Warehouse` bigint ,`Material` bigint ,`Amount` numeric(16,2) );
D:\shanghaiboke\培训\yigo\wuliao||MYSQL||Wed Sep 26 20:09:06 CST 2018
alter table `ChukudanDetail` add (`Mateial` bigint );
D:\shanghaiboke\培训\yigo\wuliao||MYSQL||Thu Sep 27 09:35:05 CST 2018
create table `CaigoudanHead` (`OID` bigint ,`SOID` bigint ,`POID` bigint ,`VERID` int ,`DVERID` int ,`NO` varchar(255) ,`Status` int ,`BillDate` datetime ,`Creator` bigint ,`CreateTime` datetime ,`Modifier` bigint ,`ModifyTime` datetime ,`InstanceID` bigint ,`TotalAmount` numeric(16,2) ,`MapCount` int ,`Slock` int , PRIMARY KEY(`OID`) )ENGINE=INNODB;
create unique index I_CaigoudanHead_SOID on `CaigoudanHead`(`SOID`);
create table `CaigoudanDetail` (`OID` bigint ,`POID` bigint ,`SOID` bigint ,`VERID` int ,`DVERID` int ,`SEQUENCE` int ,`Warehouse` bigint ,`Material` bigint ,`Amount` numeric(16,2) ,`Unit` varchar(255) ,`Price` numeric(16,2) ,`TotalPrice` numeric(16,2) ,`RukuAmount` numeric(16,2) ,`MapCount` int ,`Slock` int , PRIMARY KEY(`OID`) )ENGINE=INNODB;
create index I_CaigoudanDetail_SOID on `CaigoudanDetail`(`SOID`);
create table `Rukudan3Head` (`OID` bigint ,`SOID` bigint ,`POID` bigint ,`VERID` int ,`DVERID` int ,`NO` varchar(255) ,`Status` int ,`BillDate` datetime ,`Creator` bigint ,`CreateTime` datetime ,`Modifier` bigint ,`ModifyTime` datetime ,`InstanceID` bigint ,`MapCount` int ,`Slock` int , PRIMARY KEY(`OID`) )ENGINE=INNODB;
create unique index I_Rukudan3Head_SOID on `Rukudan3Head`(`SOID`);
create table `Rukudan3Detail` (`OID` bigint ,`POID` bigint ,`SOID` bigint ,`VERID` int ,`DVERID` int ,`SEQUENCE` int ,`Warehouse` bigint ,`Material` bigint ,`Amount` numeric(16,2) ,`Unit` varchar(255) ,`MapKey` varchar(255) ,`SrcOID` bigint ,`SrcSOID` bigint ,`MapCount` int ,`Slock` int , PRIMARY KEY(`OID`) )ENGINE=INNODB;
create index I_Rukudan3Detail_SOID on `Rukudan3Detail`(`SOID`);
create index I_Rukudan3Detail_SRCO on `Rukudan3Detail`(`SrcOID`);
create index I_Rukudan3Detail_SRCS on `Rukudan3Detail`(`SrcSOID`);
D:\shanghaiboke\培训\yigo\wuliao||MYSQL||Thu Sep 27 10:29:01 CST 2018
create table `CaigoudanDetail` (`OID` bigint ,`POID` bigint ,`SOID` bigint ,`VERID` int ,`DVERID` int ,`SEQUENCE` int ,`Warehouse` bigint ,`Material` bigint ,`Amount` numeric(16,2) ,`Unit` varchar(255) ,`Price` numeric(16,2) ,`TotalPrice` numeric(16,2) ,`RukuAmount` numeric(16,2) ,`MapCount` int ,`Slock` int , PRIMARY KEY(`OID`) )ENGINE=INNODB;
create index I_CaigoudanDetail_SOID on `CaigoudanDetail`(`SOID`);
D:\shanghaiboke\培训\yigo\wuliao||MYSQL||Thu Sep 27 12:16:14 CST 2018
create table `PurchaseDataDetail` (`OID` bigint ,`POID` bigint ,`SOID` bigint ,`VERID` int ,`DVERID` int ,`SEQUENCE` int ,`Material` bigint ,`Amount` numeric(16,2) ,`NotStockInAmount` numeric(16,2) ,`MapCount` int ,`Slock` int , PRIMARY KEY(`OID`) )ENGINE=INNODB;
create unique index I_chaseDataDetail_SOID on `PurchaseDataDetail`(`SOID`);
D:\shanghaiboke\培训\yigo\wuliao||MYSQL||Thu Sep 27 12:21:10 CST 2018
create table `PurchaseDataDetail` (`OID` bigint ,`POID` bigint ,`SOID` bigint ,`VERID` int ,`DVERID` int ,`SEQUENCE` int ,`Material` bigint ,`Amount` numeric(16,2) ,`NotStockInAmount` numeric(16,2) ,`MapCount` int ,`Slock` int , PRIMARY KEY(`OID`) )ENGINE=INNODB;
create unique index I_chaseDataDetail_SOID on `PurchaseDataDetail`(`SOID`);
D:\shanghaiboke\培训\yigo\wuliao||MYSQL||Thu Sep 27 13:20:59 CST 2018
create table `PurchaseDataHead` (`OID` bigint ,`SOID` bigint ,`POID` bigint ,`VERID` int ,`DVERID` int ,`NO` varchar(255) ,`Status` int ,`BillDate` datetime ,`Creator` bigint ,`CreateTime` datetime ,`Modifier` bigint ,`ModifyTime` datetime ,`InstanceID` bigint ,`MapCount` int ,`Slock` int , PRIMARY KEY(`OID`) )ENGINE=INNODB;
create index I_urchaseDataHead_SOID on `PurchaseDataHead`(`SOID`);
D:\shanghaiboke\培训\yigo\wuliao||MYSQL||Thu Sep 27 13:37:36 CST 2018
create table `CaigoudanHead` (`OID` bigint ,`SOID` bigint ,`POID` bigint ,`VERID` int ,`DVERID` int ,`NO` varchar(255) ,`Status` int ,`BillDate` datetime ,`Creator` bigint ,`CreateTime` datetime ,`Modifier` bigint ,`ModifyTime` datetime ,`InstanceID` bigint ,`TotalAmount` numeric(16,2) ,`MapCount` int ,`Slock` int , PRIMARY KEY(`OID`) )ENGINE=INNODB;
create unique index I_CaigoudanHead_SOID on `CaigoudanHead`(`SOID`);
create table `CaigoudanDetail` (`OID` bigint ,`POID` bigint ,`SOID` bigint ,`VERID` int ,`DVERID` int ,`SEQUENCE` int ,`Warehouse` bigint ,`Material` bigint ,`Amount` numeric(16,2) ,`Unit` varchar(255) ,`Price` numeric(16,2) ,`TotalPrice` numeric(16,2) ,`RukuAmount` numeric(16,2) ,`MapCount` int ,`Slock` int , PRIMARY KEY(`OID`) )ENGINE=INNODB;
create index I_CaigoudanDetail_SOID on `CaigoudanDetail`(`SOID`);
create table `Rukudan3Head` (`OID` bigint ,`SOID` bigint ,`POID` bigint ,`VERID` int ,`DVERID` int ,`NO` varchar(255) ,`Status` int ,`BillDate` datetime ,`Creator` bigint ,`CreateTime` datetime ,`Modifier` bigint ,`ModifyTime` datetime ,`InstanceID` bigint ,`MapCount` int ,`Slock` int , PRIMARY KEY(`OID`) )ENGINE=INNODB;
create unique index I_Rukudan3Head_SOID on `Rukudan3Head`(`SOID`);
create table `Rukudan3Detail` (`OID` bigint ,`POID` bigint ,`SOID` bigint ,`VERID` int ,`DVERID` int ,`SEQUENCE` int ,`Warehouse` bigint ,`Material` bigint ,`Amount` numeric(16,2) ,`Unit` varchar(255) ,`MapKey` varchar(255) ,`SrcOID` bigint ,`SrcSOID` bigint ,`MapCount` int ,`Slock` int , PRIMARY KEY(`OID`) )ENGINE=INNODB;
create index I_Rukudan3Detail_SOID on `Rukudan3Detail`(`SOID`);
create index I_Rukudan3Detail_SRCO on `Rukudan3Detail`(`SrcOID`);
create index I_Rukudan3Detail_SRCS on `Rukudan3Detail`(`SrcSOID`);
D:\shanghaiboke\培训\yigo\wuliao||MYSQL||Thu Sep 27 13:56:20 CST 2018
create table `CaigoudanHead` (`OID` bigint ,`SOID` bigint ,`POID` bigint ,`VERID` int ,`DVERID` int ,`NO` varchar(255) ,`Status` int ,`BillDate` datetime ,`Creator` bigint ,`CreateTime` datetime ,`Modifier` bigint ,`ModifyTime` datetime ,`InstanceID` bigint ,`TotalAmount` numeric(16,2) ,`MapCount` int ,`Slock` int , PRIMARY KEY(`OID`) )ENGINE=INNODB;
create unique index I_CaigoudanHead_SOID on `CaigoudanHead`(`SOID`);
create table `CaigoudanDetail` (`OID` bigint ,`POID` bigint ,`SOID` bigint ,`VERID` int ,`DVERID` int ,`SEQUENCE` int ,`Warehouse` bigint ,`Material` bigint ,`Amount` numeric(16,2) ,`Unit` varchar(255) ,`Price` numeric(16,2) ,`TotalPrice` numeric(16,2) ,`RukuAmount` numeric(16,2) ,`MapCount` int ,`Slock` int , PRIMARY KEY(`OID`) )ENGINE=INNODB;
create index I_CaigoudanDetail_SOID on `CaigoudanDetail`(`SOID`);
create table `Rukudan3Head` (`OID` bigint ,`SOID` bigint ,`POID` bigint ,`VERID` int ,`DVERID` int ,`NO` varchar(255) ,`Status` int ,`BillDate` datetime ,`Creator` bigint ,`CreateTime` datetime ,`Modifier` bigint ,`ModifyTime` datetime ,`InstanceID` bigint ,`MapCount` int ,`Slock` int , PRIMARY KEY(`OID`) )ENGINE=INNODB;
create unique index I_Rukudan3Head_SOID on `Rukudan3Head`(`SOID`);
create table `Rukudan3Detail` (`OID` bigint ,`POID` bigint ,`SOID` bigint ,`VERID` int ,`DVERID` int ,`SEQUENCE` int ,`Warehouse` bigint ,`Material` bigint ,`Amount` numeric(16,2) ,`Unit` varchar(255) ,`MapKey` varchar(255) ,`SrcOID` bigint ,`SrcSOID` bigint ,`MapCount` int ,`Slock` int , PRIMARY KEY(`OID`) )ENGINE=INNODB;
create index I_Rukudan3Detail_SOID on `Rukudan3Detail`(`SOID`);
create index I_Rukudan3Detail_SRCO on `Rukudan3Detail`(`SrcOID`);
create index I_Rukudan3Detail_SRCS on `Rukudan3Detail`(`SrcSOID`);
D:\shanghaiboke\培训\yigo\wuliao||MYSQL||Thu Sep 27 14:00:27 CST 2018
create table `CaigoudanHead` (`OID` bigint ,`SOID` bigint ,`POID` bigint ,`VERID` int ,`DVERID` int ,`NO` varchar(255) ,`Status` int ,`BillDate` datetime ,`Creator` bigint ,`CreateTime` datetime ,`Modifier` bigint ,`ModifyTime` datetime ,`InstanceID` bigint ,`TotalAmount` numeric(16,2) ,`MapCount` int ,`Slock` int , PRIMARY KEY(`OID`) )ENGINE=INNODB;
create unique index I_CaigoudanHead_SOID on `CaigoudanHead`(`SOID`);
create table `CaigoudanDetail` (`OID` bigint ,`POID` bigint ,`SOID` bigint ,`VERID` int ,`DVERID` int ,`SEQUENCE` int ,`Warehouse` bigint ,`Material` bigint ,`Amount` numeric(16,2) ,`Unit` varchar(255) ,`Price` numeric(16,2) ,`TotalPrice` numeric(16,2) ,`RukuAmount` numeric(16,2) ,`MapCount` int ,`Slock` int , PRIMARY KEY(`OID`) )ENGINE=INNODB;
create index I_CaigoudanDetail_SOID on `CaigoudanDetail`(`SOID`);
create table `Rukudan3Head` (`OID` bigint ,`SOID` bigint ,`POID` bigint ,`VERID` int ,`DVERID` int ,`NO` varchar(255) ,`Status` int ,`BillDate` datetime ,`Creator` bigint ,`CreateTime` datetime ,`Modifier` bigint ,`ModifyTime` datetime ,`InstanceID` bigint ,`MapCount` int ,`Slock` int , PRIMARY KEY(`OID`) )ENGINE=INNODB;
create unique index I_Rukudan3Head_SOID on `Rukudan3Head`(`SOID`);
create table `Rukudan3Detail` (`OID` bigint ,`POID` bigint ,`SOID` bigint ,`VERID` int ,`DVERID` int ,`SEQUENCE` int ,`Warehouse` bigint ,`Material` bigint ,`Amount` numeric(16,2) ,`Unit` varchar(255) ,`MapKey` varchar(255) ,`SrcOID` bigint ,`SrcSOID` bigint ,`MapCount` int ,`Slock` int , PRIMARY KEY(`OID`) )ENGINE=INNODB;
create index I_Rukudan3Detail_SOID on `Rukudan3Detail`(`SOID`);
create index I_Rukudan3Detail_SRCO on `Rukudan3Detail`(`SrcOID`);
create index I_Rukudan3Detail_SRCS on `Rukudan3Detail`(`SrcSOID`);
D:\shanghaiboke\培训\yigo\wuliao||MYSQL||Thu Sep 27 14:13:54 CST 2018
create table `PurchaseData` (`OID` bigint ,`SOID` bigint ,`POID` bigint ,`VERID` int ,`DVERID` int ,`Material` bigint ,`Amount` numeric(16,2) ,`NotIStocknAmount` numeric(16,2) ,`MapCount` int ,`Slock` int , PRIMARY KEY(`OID`) )ENGINE=INNODB;
create unique index I_PurchaseData_SOID on `PurchaseData`(`SOID`);
D:\shanghaiboke\培训\yigo\wuliao||MYSQL||Thu Sep 27 14:16:58 CST 2018
create table `CaigoudanHead` (`OID` bigint ,`SOID` bigint ,`POID` bigint ,`VERID` int ,`DVERID` int ,`NO` varchar(255) ,`Status` int ,`BillDate` datetime ,`Creator` bigint ,`CreateTime` datetime ,`Modifier` bigint ,`ModifyTime` datetime ,`InstanceID` bigint ,`TotalAmount` numeric(16,2) ,`MapCount` int ,`Slock` int , PRIMARY KEY(`OID`) )ENGINE=INNODB;
create unique index I_CaigoudanHead_SOID on `CaigoudanHead`(`SOID`);
create table `CaigoudanDetail` (`OID` bigint ,`POID` bigint ,`SOID` bigint ,`VERID` int ,`DVERID` int ,`SEQUENCE` int ,`Warehouse` bigint ,`Material` bigint ,`Amount` numeric(16,2) ,`Unit` varchar(255) ,`Price` numeric(16,2) ,`TotalPrice` numeric(16,2) ,`RukuAmount` numeric(16,2) ,`MapCount` int ,`Slock` int , PRIMARY KEY(`OID`) )ENGINE=INNODB;
create index I_CaigoudanDetail_SOID on `CaigoudanDetail`(`SOID`);
create table `PurchaseData` (`OID` bigint ,`SOID` bigint ,`POID` bigint ,`VERID` int ,`DVERID` int ,`Material` bigint ,`Amount` numeric(16,2) ,`NotIStocknAmount` numeric(16,2) ,`MapCount` int ,`Slock` int , PRIMARY KEY(`OID`) )ENGINE=INNODB;
create unique index I_PurchaseData_SOID on `PurchaseData`(`SOID`);
create table `Rukudan3Head` (`OID` bigint ,`SOID` bigint ,`POID` bigint ,`VERID` int ,`DVERID` int ,`NO` varchar(255) ,`Status` int ,`BillDate` datetime ,`Creator` bigint ,`CreateTime` datetime ,`Modifier` bigint ,`ModifyTime` datetime ,`InstanceID` bigint ,`MapCount` int ,`Slock` int , PRIMARY KEY(`OID`) )ENGINE=INNODB;
create unique index I_Rukudan3Head_SOID on `Rukudan3Head`(`SOID`);
create table `Rukudan3Detail` (`OID` bigint ,`POID` bigint ,`SOID` bigint ,`VERID` int ,`DVERID` int ,`SEQUENCE` int ,`Warehouse` bigint ,`Material` bigint ,`Amount` numeric(16,2) ,`Unit` varchar(255) ,`MapKey` varchar(255) ,`SrcOID` bigint ,`SrcSOID` bigint ,`MapCount` int ,`Slock` int , PRIMARY KEY(`OID`) )ENGINE=INNODB;
create index I_Rukudan3Detail_SOID on `Rukudan3Detail`(`SOID`);
create index I_Rukudan3Detail_SRCO on `Rukudan3Detail`(`SrcOID`);
create index I_Rukudan3Detail_SRCS on `Rukudan3Detail`(`SrcSOID`);
D:\shanghaiboke\培训\yigo\wuliao||MYSQL||Thu Sep 27 16:03:16 CST 2018
alter table `PurchaseData` add (`NotStocknAmount` numeric(16,2) );
D:\shanghaiboke\培训\yigo\wuliao||MYSQL||Thu Sep 27 16:05:21 CST 2018
alter table `PurchaseData` add (`NotStockInAmount` numeric(16,2) );
D:\shanghaiboke\培训\yigo\wuliao||MYSQL||Thu Sep 27 16:11:16 CST 2018
create table `CaigoudanHead` (`OID` bigint ,`SOID` bigint ,`POID` bigint ,`VERID` int ,`DVERID` int ,`NO` varchar(255) ,`Status` int ,`BillDate` datetime ,`Creator` bigint ,`CreateTime` datetime ,`Modifier` bigint ,`ModifyTime` datetime ,`InstanceID` bigint ,`TotalAmount` numeric(16,2) ,`MapCount` int ,`Slock` int , PRIMARY KEY(`OID`) )ENGINE=INNODB;
create unique index I_CaigoudanHead_SOID on `CaigoudanHead`(`SOID`);
create table `CaigoudanDetail` (`OID` bigint ,`POID` bigint ,`SOID` bigint ,`VERID` int ,`DVERID` int ,`SEQUENCE` int ,`Warehouse` bigint ,`Material` bigint ,`Amount` numeric(16,2) ,`Unit` varchar(255) ,`Price` numeric(16,2) ,`TotalPrice` numeric(16,2) ,`RukuAmount` numeric(16,2) ,`MapCount` int ,`Slock` int , PRIMARY KEY(`OID`) )ENGINE=INNODB;
create index I_CaigoudanDetail_SOID on `CaigoudanDetail`(`SOID`);
create table `PurchaseData` (`OID` bigint ,`SOID` bigint ,`POID` bigint ,`VERID` int ,`DVERID` int ,`Material` bigint ,`Amount` numeric(16,2) ,`NotStockInAmount` numeric(16,2) ,`MapCount` int ,`Slock` int , PRIMARY KEY(`OID`) )ENGINE=INNODB;
create unique index I_PurchaseData_SOID on `PurchaseData`(`SOID`);
create table `Rukudan3Head` (`OID` bigint ,`SOID` bigint ,`POID` bigint ,`VERID` int ,`DVERID` int ,`NO` varchar(255) ,`Status` int ,`BillDate` datetime ,`Creator` bigint ,`CreateTime` datetime ,`Modifier` bigint ,`ModifyTime` datetime ,`InstanceID` bigint ,`MapCount` int ,`Slock` int , PRIMARY KEY(`OID`) )ENGINE=INNODB;
create unique index I_Rukudan3Head_SOID on `Rukudan3Head`(`SOID`);
create table `Rukudan3Detail` (`OID` bigint ,`POID` bigint ,`SOID` bigint ,`VERID` int ,`DVERID` int ,`SEQUENCE` int ,`Warehouse` bigint ,`Material` bigint ,`Amount` numeric(16,2) ,`Unit` varchar(255) ,`MapKey` varchar(255) ,`SrcOID` bigint ,`SrcSOID` bigint ,`MapCount` int ,`Slock` int , PRIMARY KEY(`OID`) )ENGINE=INNODB;
create index I_Rukudan3Detail_SOID on `Rukudan3Detail`(`SOID`);
create index I_Rukudan3Detail_SRCO on `Rukudan3Detail`(`SrcOID`);
create index I_Rukudan3Detail_SRCS on `Rukudan3Detail`(`SrcSOID`);
D:\shanghaiboke\培训\yigo\wuliao||MYSQL||Thu Sep 27 16:46:33 CST 2018
create table `PurchaseDataDetail` (`OID` bigint ,`POID` bigint ,`SOID` bigint ,`VERID` int ,`DVERID` int ,`SEQUENCE` int ,`Material` bigint ,`Amount` numeric(16,2) ,`NotStockInAmount` numeric(16,2) ,`MapCount` int ,`Slock` int , PRIMARY KEY(`OID`) )ENGINE=INNODB;
create unique index I_chaseDataDetail_SOID on `PurchaseDataDetail`(`SOID`);
D:\shanghaiboke\培训\yigo\wuliao||MYSQL||Thu Sep 27 16:49:50 CST 2018
create table `CaigoudanHead` (`OID` bigint ,`SOID` bigint ,`POID` bigint ,`VERID` int ,`DVERID` int ,`NO` varchar(255) ,`Status` int ,`BillDate` datetime ,`Creator` bigint ,`CreateTime` datetime ,`Modifier` bigint ,`ModifyTime` datetime ,`InstanceID` bigint ,`TotalAmount` numeric(16,2) ,`MapCount` int ,`Slock` int , PRIMARY KEY(`OID`) )ENGINE=INNODB;
create unique index I_CaigoudanHead_SOID on `CaigoudanHead`(`SOID`);
create table `CaigoudanDetail` (`OID` bigint ,`POID` bigint ,`SOID` bigint ,`VERID` int ,`DVERID` int ,`SEQUENCE` int ,`Warehouse` bigint ,`Material` bigint ,`Amount` numeric(16,2) ,`Unit` varchar(255) ,`Price` numeric(16,2) ,`TotalPrice` numeric(16,2) ,`RukuAmount` numeric(16,2) ,`MapCount` int ,`Slock` int , PRIMARY KEY(`OID`) )ENGINE=INNODB;
create index I_CaigoudanDetail_SOID on `CaigoudanDetail`(`SOID`);
D:\shanghaiboke\培训\yigo\wuliao||MYSQL||Thu Sep 27 16:51:30 CST 2018
create table `Rukudan3Head` (`OID` bigint ,`SOID` bigint ,`POID` bigint ,`VERID` int ,`DVERID` int ,`NO` varchar(255) ,`Status` int ,`BillDate` datetime ,`Creator` bigint ,`CreateTime` datetime ,`Modifier` bigint ,`ModifyTime` datetime ,`InstanceID` bigint ,`MapCount` int ,`Slock` int , PRIMARY KEY(`OID`) )ENGINE=INNODB;
create unique index I_Rukudan3Head_SOID on `Rukudan3Head`(`SOID`);
create table `Rukudan3Detail` (`OID` bigint ,`POID` bigint ,`SOID` bigint ,`VERID` int ,`DVERID` int ,`SEQUENCE` int ,`Warehouse` bigint ,`Material` bigint ,`Amount` numeric(16,2) ,`Unit` varchar(255) ,`MapKey` varchar(255) ,`SrcOID` bigint ,`SrcSOID` bigint ,`MapCount` int ,`Slock` int , PRIMARY KEY(`OID`) )ENGINE=INNODB;
create index I_Rukudan3Detail_SOID on `Rukudan3Detail`(`SOID`);
create index I_Rukudan3Detail_SRCO on `Rukudan3Detail`(`SrcOID`);
create index I_Rukudan3Detail_SRCS on `Rukudan3Detail`(`SrcSOID`);
D:\shanghaiboke\培训\yigo\wuliao||MYSQL||Thu Sep 27 16:54:29 CST 2018
create table `Rukudan3Head` (`OID` bigint ,`SOID` bigint ,`POID` bigint ,`VERID` int ,`DVERID` int ,`NO` varchar(255) ,`Status` int ,`BillDate` datetime ,`Creator` bigint ,`CreateTime` datetime ,`Modifier` bigint ,`ModifyTime` datetime ,`InstanceID` bigint ,`MapCount` int ,`Slock` int , PRIMARY KEY(`OID`) )ENGINE=INNODB;
create unique index I_Rukudan3Head_SOID on `Rukudan3Head`(`SOID`);
create table `Rukudan3Detail` (`OID` bigint ,`POID` bigint ,`SOID` bigint ,`VERID` int ,`DVERID` int ,`SEQUENCE` int ,`Warehouse` bigint ,`Material` bigint ,`Amount` numeric(16,2) ,`Unit` varchar(255) ,`MapKey` varchar(255) ,`SrcOID` bigint ,`SrcSOID` bigint ,`MapCount` int ,`Slock` int , PRIMARY KEY(`OID`) )ENGINE=INNODB;
create index I_Rukudan3Detail_SOID on `Rukudan3Detail`(`SOID`);
create index I_Rukudan3Detail_SRCO on `Rukudan3Detail`(`SrcOID`);
create index I_Rukudan3Detail_SRCS on `Rukudan3Detail`(`SrcSOID`);
D:\shanghaiboke\培训\yigo\wuliao||MYSQL||Thu Sep 27 17:06:57 CST 2018
alter table `PurchaseDataDetail` add (`Warehouse` bigint );
D:\shanghaiboke\培训\yigo\wuliao||MYSQL||Thu Sep 27 20:15:18 CST 2018
create table `Caigoudan1Head` (`OID` bigint ,`SOID` bigint ,`POID` bigint ,`VERID` int ,`DVERID` int ,`NO` varchar(255) ,`Status` int ,`BillDate` datetime ,`Creator` bigint ,`CreateTime` datetime ,`Modifier` bigint ,`ModifyTime` datetime ,`InstanceID` bigint ,`MapCount` int ,`Slock` int , PRIMARY KEY(`OID`) )ENGINE=INNODB;
create unique index I_Caigoudan1Head_SOID on `Caigoudan1Head`(`SOID`);
create table `Caigoudan1Detail` (`OID` bigint ,`POID` bigint ,`SOID` bigint ,`VERID` int ,`DVERID` int ,`SEQUENCE` int ,`Material` bigint ,`Amount` numeric(16,2) ,`StockInAmount` numeric(16,2) ,`MapCount` int ,`Slock` int , PRIMARY KEY(`OID`) )ENGINE=INNODB;
create index I_aigoudan1Detail_SOID on `Caigoudan1Detail`(`SOID`);
create table `Rukudan1Head` (`OID` bigint ,`SOID` bigint ,`POID` bigint ,`VERID` int ,`DVERID` int ,`NO` varchar(255) ,`Status` int ,`BillDate` datetime ,`Creator` bigint ,`CreateTime` datetime ,`Modifier` bigint ,`ModifyTime` datetime ,`InstanceID` bigint ,`MapCount` int ,`Slock` int , PRIMARY KEY(`OID`) )ENGINE=INNODB;
create unique index I_Rukudan1Head_SOID on `Rukudan1Head`(`SOID`);
create table `Rukudan1Detail` (`OID` bigint ,`POID` bigint ,`SOID` bigint ,`VERID` int ,`DVERID` int ,`SEQUENCE` int ,`Material` bigint ,`Amount` numeric(16,2) ,`MapKey` varchar(255) ,`SrcOID` bigint ,`SrcSOID` bigint ,`MapCount` int ,`Slock` int , PRIMARY KEY(`OID`) )ENGINE=INNODB;
create index I_Rukudan1Detail_SOID on `Rukudan1Detail`(`SOID`);
create index I_Rukudan1Detail_SRCO on `Rukudan1Detail`(`SrcOID`);
create index I_Rukudan1Detail_SRCS on `Rukudan1Detail`(`SrcSOID`);
D:\shanghaiboke\培训\yigo\wuliao||MYSQL||Thu Sep 27 20:36:54 CST 2018
create table `PurchaseData1Detail` (`OID` bigint ,`POID` bigint ,`SOID` bigint ,`VERID` int ,`DVERID` int ,`SEQUENCE` int ,`Material` bigint ,`Amount` numeric(16,2) ,`NotInAmount` numeric(16,2) ,`MapCount` int ,`Slock` int , PRIMARY KEY(`OID`) )ENGINE=INNODB;
create index I_haseData1Detail_SOID on `PurchaseData1Detail`(`SOID`);
D:\shanghaiboke\培训\yigo\wuliao||yigotest||Thu Sep 27 21:24:34 CST 2018
create table `InventoryList` (`OID` bigint ,`SOID` bigint ,`POID` bigint ,`VERID` int ,`DVERID` int ,`Warehouse` bigint ,`Material` bigint ,`Amount` numeric(16,2) ,`MapCount` int ,`Slock` int , PRIMARY KEY(`OID`) )ENGINE=INNODB;
create unique index I_InventoryList_MIGR on `InventoryList`(`Warehouse`,`Material`);
create table `SYS_Operator` (`OID` bigint ,`POID` bigint ,`SOID` bigint ,`VERID` int ,`DVERID` int ,`Status` int ,`Enable` int ,`NodeType` int ,`ParentID` bigint ,`TLeft` int ,`TRight` int ,`Code` varchar(50) ,`Name` varchar(50) ,`Password` varchar(512) ,`MapCount` int ,`Slock` int , PRIMARY KEY(`OID`) )ENGINE=INNODB;
create index I_SYS_Operator_SOID on `SYS_Operator`(`SOID`);
create table `SYS_OperatorRole` (`OID` bigint ,`POID` bigint ,`SOID` bigint ,`VERID` int ,`DVERID` int ,`Sequence` int ,`Role` bigint ,`MapCount` int ,`Slock` int , PRIMARY KEY(`OID`) )ENGINE=INNODB;
create index I_YS_OperatorRole_SOID on `SYS_OperatorRole`(`SOID`);
create table `SYS_Operator_RR` (`RoleID` bigint ,`FormKey` varchar(128) ,`DictID` bigint ,`HasRights` int , PRIMARY KEY(`RoleID`,`DictID`) )ENGINE=INNODB;
create table `SYS_Operator_OR` (`OperatorID` bigint ,`FormKey` varchar(128) ,`DictID` bigint ,`HasRights` int , PRIMARY KEY(`OperatorID`,`DictID`) )ENGINE=INNODB;
create table `CUST_StaticObj` (`OID` bigint ,`POID` bigint ,`SOID` bigint ,`VERID` int ,`DVERID` int ,`MapCount` int ,`Slock` int , PRIMARY KEY(`OID`) )ENGINE=INNODB;
create unique index I_CUST_StaticObj_SOID on `CUST_StaticObj`(`SOID`);
create table `CUST_Para` (`OID` bigint ,`POID` bigint ,`SOID` bigint ,`VERID` int ,`DVERID` int ,`ParaKey` varchar(64) ,`ParentKey` varchar(64) ,`ParaValue` bigint ,`NodeType` int ,`MapCount` int ,`Slock` int , PRIMARY KEY(`OID`) )ENGINE=INNODB;
create index I_CUST_Para_SOID on `CUST_Para`(`SOID`);
create table `SYS_Role` (`OID` bigint ,`POID` bigint ,`SOID` bigint ,`VERID` int ,`DVERID` int ,`Status` int ,`Enable` int ,`NodeType` int ,`ParentID` bigint ,`TLeft` int ,`TRight` int ,`Code` varchar(50) ,`Name` varchar(50) ,`IsAdmin` int ,`MapCount` int ,`Slock` int , PRIMARY KEY(`OID`) )ENGINE=INNODB;
create index I_SYS_Role_SOID on `SYS_Role`(`SOID`);
create table `SYS_Role_RR` (`RoleID` bigint ,`FormKey` varchar(128) ,`DictID` bigint ,`HasRights` int , PRIMARY KEY(`RoleID`,`DictID`) )ENGINE=INNODB;
create table `SYS_Role_OR` (`OperatorID` bigint ,`FormKey` varchar(128) ,`DictID` bigint ,`HasRights` int , PRIMARY KEY(`OperatorID`,`DictID`) )ENGINE=INNODB;
create table `CaigoudanHead` (`OID` bigint ,`SOID` bigint ,`POID` bigint ,`VERID` int ,`DVERID` int ,`NO` varchar(255) ,`Status` int ,`BillDate` datetime ,`Creator` bigint ,`CreateTime` datetime ,`Modifier` bigint ,`ModifyTime` datetime ,`InstanceID` bigint ,`TotalAmount` numeric(16,2) ,`MapCount` int ,`Slock` int , PRIMARY KEY(`OID`) )ENGINE=INNODB;
create unique index I_CaigoudanHead_SOID on `CaigoudanHead`(`SOID`);
create table `CaigoudanDetail` (`OID` bigint ,`POID` bigint ,`SOID` bigint ,`VERID` int ,`DVERID` int ,`SEQUENCE` int ,`Warehouse` bigint ,`Material` bigint ,`Amount` numeric(16,2) ,`Unit` varchar(255) ,`Price` numeric(16,2) ,`TotalPrice` numeric(16,2) ,`RukuAmount` numeric(16,2) ,`MapCount` int ,`Slock` int , PRIMARY KEY(`OID`) )ENGINE=INNODB;
create index I_CaigoudanDetail_SOID on `CaigoudanDetail`(`SOID`);
create table `Caigoudan1Head` (`OID` bigint ,`SOID` bigint ,`POID` bigint ,`VERID` int ,`DVERID` int ,`NO` varchar(255) ,`Status` int ,`BillDate` datetime ,`Creator` bigint ,`CreateTime` datetime ,`Modifier` bigint ,`ModifyTime` datetime ,`InstanceID` bigint ,`MapCount` int ,`Slock` int , PRIMARY KEY(`OID`) )ENGINE=INNODB;
create unique index I_Caigoudan1Head_SOID on `Caigoudan1Head`(`SOID`);
create table `Caigoudan1Detail` (`OID` bigint ,`POID` bigint ,`SOID` bigint ,`VERID` int ,`DVERID` int ,`SEQUENCE` int ,`Material` bigint ,`Amount` numeric(16,2) ,`StockInAmount` numeric(16,2) ,`MapCount` int ,`Slock` int , PRIMARY KEY(`OID`) )ENGINE=INNODB;
create index I_aigoudan1Detail_SOID on `Caigoudan1Detail`(`SOID`);
create table `ChukudanHead` (`OID` bigint ,`SOID` bigint ,`POID` bigint ,`VERID` int ,`DVERID` int ,`NO` varchar(255) ,`Status` int ,`BillDate` datetime ,`Creator` bigint ,`CreateTime` datetime ,`Modifier` bigint ,`ModifyTime` datetime ,`InstanceID` bigint ,`MapCount` int ,`Slock` int , PRIMARY KEY(`OID`) )ENGINE=INNODB;
create unique index I_ChukudanHead_SOID on `ChukudanHead`(`SOID`);
create table `ChukudanDetail` (`OID` bigint ,`POID` bigint ,`SOID` bigint ,`VERID` int ,`DVERID` int ,`SEQUENCE` int ,`Warehouse` bigint ,`Mateial` bigint ,`Amount` numeric(16,2) ,`MapCount` int ,`Slock` int , PRIMARY KEY(`OID`) )ENGINE=INNODB;
create index I_ChukudanDetail_SOID on `ChukudanDetail`(`SOID`);
create table `city` (`OID` bigint ,`SOID` bigint ,`POID` bigint ,`VERID` int ,`DVERID` int ,`Code` varchar(255) ,`Name` varchar(255) ,`NodeType` int ,`ParentID` bigint ,`Status` int ,`Enable` int ,`TLeft` int ,`TRight` int ,`ProvinceID` bigint ,`MapCount` int ,`Slock` int , PRIMARY KEY(`OID`) )ENGINE=INNODB;
create index I_city_SOID on `city`(`SOID`);
create table `city_RR` (`RoleID` bigint ,`FormKey` varchar(128) ,`DictID` bigint ,`HasRights` int , PRIMARY KEY(`RoleID`,`DictID`) )ENGINE=INNODB;
create table `city_OR` (`OperatorID` bigint ,`FormKey` varchar(128) ,`DictID` bigint ,`HasRights` int , PRIMARY KEY(`OperatorID`,`DictID`) )ENGINE=INNODB;
create table `dict` (`OID` bigint ,`SOID` bigint ,`POID` bigint ,`VERID` int ,`DVERID` int ,`Code` varchar(255) ,`Name` varchar(255) ,`NodeType` int ,`ParentID` bigint ,`Status` int ,`Enable` int ,`TLeft` int ,`TRight` int ,`MapCount` int ,`Slock` int , PRIMARY KEY(`OID`) )ENGINE=INNODB;
create index I_dict_SOID on `dict`(`SOID`);
create table `dict_RR` (`RoleID` bigint ,`FormKey` varchar(128) ,`DictID` bigint ,`HasRights` int , PRIMARY KEY(`RoleID`,`DictID`) )ENGINE=INNODB;
create table `dict_OR` (`OperatorID` bigint ,`FormKey` varchar(128) ,`DictID` bigint ,`HasRights` int , PRIMARY KEY(`OperatorID`,`DictID`) )ENGINE=INNODB;
create table `leaveHead` (`OID` bigint ,`SOID` bigint ,`POID` bigint ,`VERID` int ,`DVERID` int ,`NO` varchar(255) ,`Status` int ,`BillDate` datetime ,`Creator` bigint ,`CreateTime` datetime ,`Modifier` bigint ,`ModifyTime` datetime ,`InstanceID` bigint ,`Number` varchar(255) ,`Name` varchar(255) ,`StartDate` datetime ,`EndDate` datetime ,`Shuyou` varchar(255) ,`MapCount` int ,`Slock` int , PRIMARY KEY(`OID`) )ENGINE=INNODB;
create unique index I_leaveHead_SOID on `leaveHead`(`SOID`);
create table `leaveDetail` (`OID` bigint ,`POID` bigint ,`SOID` bigint ,`VERID` int ,`DVERID` int ,`SEQUENCE` int ,`MapCount` int ,`Slock` int , PRIMARY KEY(`OID`) )ENGINE=INNODB;
create index I_leaveDetail_SOID on `leaveDetail`(`SOID`);
create table `lianshidict` (`OID` bigint ,`SOID` bigint ,`POID` bigint ,`VERID` int ,`DVERID` int ,`Code` varchar(255) ,`Name` varchar(255) ,`Status` int ,`Enable` int ,`NodeType` int ,`ParentID` bigint ,`TLeft` int ,`TRight` int ,`MapCount` int ,`Slock` int , PRIMARY KEY(`OID`) )ENGINE=INNODB;
create index I_lianshidict_SOID on `lianshidict`(`SOID`);
create table `lianshidict_RR` (`RoleID` bigint ,`FormKey` varchar(128) ,`DictID` bigint ,`HasRights` int , PRIMARY KEY(`RoleID`,`DictID`) )ENGINE=INNODB;
create table `lianshidict_OR` (`OperatorID` bigint ,`FormKey` varchar(128) ,`DictID` bigint ,`HasRights` int , PRIMARY KEY(`OperatorID`,`DictID`) )ENGINE=INNODB;
create table `MaterialDict` (`OID` bigint ,`SOID` bigint ,`POID` bigint ,`VERID` int ,`DVERID` int ,`Code` varchar(255) ,`Name` varchar(255) ,`NodeType` int ,`ParentID` bigint ,`Status` int ,`Enable` int ,`TLeft` int ,`TRight` int ,`Unit` varchar(255) ,`Price` numeric(16,2) ,`MapCount` int ,`Slock` int , PRIMARY KEY(`OID`) )ENGINE=INNODB;
create index I_MaterialDict_SOID on `MaterialDict`(`SOID`);
create table `MaterialDict_RR` (`RoleID` bigint ,`FormKey` varchar(128) ,`DictID` bigint ,`HasRights` int , PRIMARY KEY(`RoleID`,`DictID`) )ENGINE=INNODB;
create table `MaterialDict_OR` (`OperatorID` bigint ,`FormKey` varchar(128) ,`DictID` bigint ,`HasRights` int , PRIMARY KEY(`OperatorID`,`DictID`) )ENGINE=INNODB;
create table `Province` (`OID` bigint ,`SOID` bigint ,`POID` bigint ,`VERID` int ,`DVERID` int ,`Code` varchar(255) ,`Name` varchar(255) ,`NodeType` int ,`ParentID` bigint ,`Status` int ,`Enable` int ,`TLeft` int ,`TRight` int ,`MapCount` int ,`Slock` int , PRIMARY KEY(`OID`) )ENGINE=INNODB;
create index I_Province_SOID on `Province`(`SOID`);
create table `Province_RR` (`RoleID` bigint ,`FormKey` varchar(128) ,`DictID` bigint ,`HasRights` int , PRIMARY KEY(`RoleID`,`DictID`) )ENGINE=INNODB;
create table `Province_OR` (`OperatorID` bigint ,`FormKey` varchar(128) ,`DictID` bigint ,`HasRights` int , PRIMARY KEY(`OperatorID`,`DictID`) )ENGINE=INNODB;
create table `provincecityHead` (`OID` bigint ,`SOID` bigint ,`POID` bigint ,`VERID` int ,`DVERID` int ,`NO` varchar(255) ,`Status` int ,`BillDate` datetime ,`Creator` bigint ,`CreateTime` datetime ,`Modifier` bigint ,`ModifyTime` datetime ,`InstanceID` bigint ,`Province` bigint ,`City` bigint ,`MapCount` int ,`Slock` int , PRIMARY KEY(`OID`) )ENGINE=INNODB;
create unique index I_rovincecityHead_SOID on `provincecityHead`(`SOID`);
create table `provincecityDetail` (`OID` bigint ,`POID` bigint ,`SOID` bigint ,`VERID` int ,`DVERID` int ,`SEQUENCE` int ,`MapCount` int ,`Slock` int , PRIMARY KEY(`OID`) )ENGINE=INNODB;
create index I_vincecityDetail_SOID on `provincecityDetail`(`SOID`);
create table `PurchaseDataDetail` (`OID` bigint ,`POID` bigint ,`SOID` bigint ,`VERID` int ,`DVERID` int ,`SEQUENCE` int ,`Warehouse` bigint ,`Material` bigint ,`Amount` numeric(16,2) ,`NotStockInAmount` numeric(16,2) ,`MapCount` int ,`Slock` int , PRIMARY KEY(`OID`) )ENGINE=INNODB;
create unique index I_chaseDataDetail_SOID on `PurchaseDataDetail`(`SOID`);
create table `PurchaseData1Detail` (`OID` bigint ,`POID` bigint ,`SOID` bigint ,`VERID` int ,`DVERID` int ,`SEQUENCE` int ,`Material` bigint ,`Amount` numeric(16,2) ,`NotInAmount` numeric(16,2) ,`MapCount` int ,`Slock` int , PRIMARY KEY(`OID`) )ENGINE=INNODB;
create unique index I_haseData1Detail_SOID on `PurchaseData1Detail`(`SOID`);
create table `qingjiaHead` (`OID` bigint ,`SOID` bigint ,`POID` bigint ,`VERID` int ,`DVERID` int ,`Status` int ,`BillDate` datetime ,`Creator` bigint ,`CreateTime` datetime ,`Modifier` bigint ,`ModifyTime` datetime ,`InstanceID` bigint ,`EmpName` varchar(255) ,`StatusType` varchar(255) ,`StartDate` datetime ,`EndDate` datetime ,`Days` varchar(255) ,`Shuzhi1` numeric(16,2) ,`Shuzhi2` numeric(16,2) ,`Shuzhi3` numeric(16,2) ,`Lianshidict` bigint ,`MapCount` int ,`Slock` int , PRIMARY KEY(`OID`) )ENGINE=INNODB;
create unique index I_qingjiaHead_SOID on `qingjiaHead`(`SOID`);
create table `qingjiaDetail` (`OID` bigint ,`POID` bigint ,`SOID` bigint ,`VERID` int ,`DVERID` int ,`SEQUENCE` int ,`MapCount` int ,`Slock` int , PRIMARY KEY(`OID`) )ENGINE=INNODB;
create index I_qingjiaDetail_SOID on `qingjiaDetail`(`SOID`);
create table `test` (`OID` bigint ,`SOID` bigint ,`POID` bigint ,`VERID` int ,`DVERID` int ,`Material` bigint ,`Amount` numeric(16,2) ,`UserType` bigint ,`SumExpand` numeric(16,2) ,`City` varchar(255) ,`MapCount` int ,`Slock` int , PRIMARY KEY(`OID`) )ENGINE=INNODB;
create index I_test_SOID on `test`(`SOID`);
create table `qiuzhixinxiHead` (`OID` bigint ,`SOID` bigint ,`POID` bigint ,`VERID` int ,`DVERID` int ,`NO` varchar(255) ,`Status` int ,`BillDate` datetime ,`Creator` bigint ,`CreateTime` datetime ,`Modifier` bigint ,`ModifyTime` datetime ,`InstanceID` bigint ,`Name` varchar(255) ,`Dict2` bigint ,`Province` bigint ,`City` bigint ,`Zhusuo` varchar(255) ,`Phone` bigint ,`Xiala` varchar(255) ,`Zhuanye` varchar(4000) ,`Beizhu` varchar(4000) ,`Jiaoyu` varchar(4000) ,`Gongzuo` varchar(4000) ,`Java` int ,`C` int ,`Sql` int ,`Net` int ,`MapCount` int ,`Slock` int , PRIMARY KEY(`OID`) )ENGINE=INNODB;
create unique index I_qiuzhixinxiHead_SOID on `qiuzhixinxiHead`(`SOID`);
create table `qiuzhixinxiDetail` (`OID` bigint ,`POID` bigint ,`SOID` bigint ,`VERID` int ,`DVERID` int ,`SEQUENCE` int ,`MapCount` int ,`Slock` int , PRIMARY KEY(`OID`) )ENGINE=INNODB;
create index I_uzhixinxiDetail_SOID on `qiuzhixinxiDetail`(`SOID`);
create table `RukudanHead` (`OID` bigint ,`SOID` bigint ,`POID` bigint ,`VERID` int ,`DVERID` int ,`NO` varchar(255) ,`Status` int ,`BillDate` datetime ,`Creator` bigint ,`CreateTime` datetime ,`Modifier` bigint ,`ModifyTime` datetime ,`InstanceID` bigint ,`MapCount` int ,`Slock` int , PRIMARY KEY(`OID`) )ENGINE=INNODB;
create unique index I_RukudanHead_SOID on `RukudanHead`(`SOID`);
create table `RukudanDetail` (`OID` bigint ,`POID` bigint ,`SOID` bigint ,`VERID` int ,`DVERID` int ,`SEQUENCE` int ,`Material` bigint ,`Uint` varchar(255) ,`Price` numeric(16,2) ,`Amount` numeric(16,2) ,`TotalPrice` numeric(16,2) ,`Hege` varchar(255) ,`MapCount` int ,`Slock` int , PRIMARY KEY(`OID`) )ENGINE=INNODB;
create index I_RukudanDetail_SOID on `RukudanDetail`(`SOID`);
create table `Rukudan1Head` (`OID` bigint ,`SOID` bigint ,`POID` bigint ,`VERID` int ,`DVERID` int ,`NO` varchar(255) ,`Status` int ,`BillDate` datetime ,`Creator` bigint ,`CreateTime` datetime ,`Modifier` bigint ,`ModifyTime` datetime ,`InstanceID` bigint ,`MapCount` int ,`Slock` int , PRIMARY KEY(`OID`) )ENGINE=INNODB;
create unique index I_Rukudan1Head_SOID on `Rukudan1Head`(`SOID`);
create table `Rukudan1Detail` (`OID` bigint ,`POID` bigint ,`SOID` bigint ,`VERID` int ,`DVERID` int ,`SEQUENCE` int ,`Material` bigint ,`Amount` numeric(16,2) ,`MapKey` varchar(255) ,`SrcOID` bigint ,`SrcSOID` bigint ,`MapCount` int ,`Slock` int , PRIMARY KEY(`OID`) )ENGINE=INNODB;
create index I_Rukudan1Detail_SOID on `Rukudan1Detail`(`SOID`);
create index I_Rukudan1Detail_SRCO on `Rukudan1Detail`(`SrcOID`);
create index I_Rukudan1Detail_SRCS on `Rukudan1Detail`(`SrcSOID`);
create table `Rukudan2Head` (`OID` bigint ,`SOID` bigint ,`POID` bigint ,`VERID` int ,`DVERID` int ,`NO` varchar(255) ,`Status` int ,`BillDate` datetime ,`Creator` bigint ,`CreateTime` datetime ,`Modifier` bigint ,`ModifyTime` datetime ,`InstanceID` bigint ,`MapCount` int ,`Slock` int , PRIMARY KEY(`OID`) )ENGINE=INNODB;
create unique index I_Rukudan2Head_SOID on `Rukudan2Head`(`SOID`);
create table `Rukudan2Detail` (`OID` bigint ,`POID` bigint ,`SOID` bigint ,`VERID` int ,`DVERID` int ,`SEQUENCE` int ,`Warehouse` bigint ,`Material` bigint ,`Amount` numeric(16,2) ,`MapCount` int ,`Slock` int , PRIMARY KEY(`OID`) )ENGINE=INNODB;
create index I_Rukudan2Detail_SOID on `Rukudan2Detail`(`SOID`);
create table `Rukudan3Head` (`OID` bigint ,`SOID` bigint ,`POID` bigint ,`VERID` int ,`DVERID` int ,`NO` varchar(255) ,`Status` int ,`BillDate` datetime ,`Creator` bigint ,`CreateTime` datetime ,`Modifier` bigint ,`ModifyTime` datetime ,`InstanceID` bigint ,`MapCount` int ,`Slock` int , PRIMARY KEY(`OID`) )ENGINE=INNODB;
create unique index I_Rukudan3Head_SOID on `Rukudan3Head`(`SOID`);
create table `Rukudan3Detail` (`OID` bigint ,`POID` bigint ,`SOID` bigint ,`VERID` int ,`DVERID` int ,`SEQUENCE` int ,`Warehouse` bigint ,`Material` bigint ,`Amount` numeric(16,2) ,`Unit` varchar(255) ,`MapKey` varchar(255) ,`SrcOID` bigint ,`SrcSOID` bigint ,`MapCount` int ,`Slock` int , PRIMARY KEY(`OID`) )ENGINE=INNODB;
create index I_Rukudan3Detail_SOID on `Rukudan3Detail`(`SOID`);
create index I_Rukudan3Detail_SRCO on `Rukudan3Detail`(`SrcOID`);
create index I_Rukudan3Detail_SRCS on `Rukudan3Detail`(`SrcSOID`);
create table `testHead` (`OID` bigint ,`SOID` bigint ,`POID` bigint ,`VERID` int ,`DVERID` int ,`NO` varchar(255) ,`Status` int ,`BillDate` datetime ,`Creator` bigint ,`CreateTime` datetime ,`Modifier` bigint ,`ModifyTime` datetime ,`InstanceID` bigint ,`MapCount` int ,`Slock` int , PRIMARY KEY(`OID`) )ENGINE=INNODB;
create unique index I_testHead_SOID on `testHead`(`SOID`);
create table `testDetail` (`OID` bigint ,`POID` bigint ,`SOID` bigint ,`VERID` int ,`DVERID` int ,`SEQUENCE` int ,`Number` numeric(16,2) ,`Material` bigint ,`MapCount` int ,`Slock` int , PRIMARY KEY(`OID`) )ENGINE=INNODB;
create index I_testDetail_SOID on `testDetail`(`SOID`);
create table `Warehouse` (`OID` bigint ,`SOID` bigint ,`POID` bigint ,`VERID` int ,`DVERID` int ,`Code` varchar(255) ,`Name` varchar(255) ,`NodeType` int ,`ParentID` bigint ,`Status` int ,`Enable` int ,`TLeft` int ,`TRight` int ,`MapCount` int ,`Slock` int , PRIMARY KEY(`OID`) )ENGINE=INNODB;
create index I_Warehouse_SOID on `Warehouse`(`SOID`);
create table `Warehouse_RR` (`RoleID` bigint ,`FormKey` varchar(128) ,`DictID` bigint ,`HasRights` int , PRIMARY KEY(`RoleID`,`DictID`) )ENGINE=INNODB;
create table `Warehouse_OR` (`OperatorID` bigint ,`FormKey` varchar(128) ,`DictID` bigint ,`HasRights` int , PRIMARY KEY(`OperatorID`,`DictID`) )ENGINE=INNODB;
create table `BPM_Instance` (`InstanceID` bigint ,`OID` bigint ,`ProcessKey` varchar(255) ,`VerID` int ,`StartTime` datetime ,`EndTime` datetime ,`CostTime` bigint ,`InstanceState` int ,`FormKey` varchar(255) ,`FormName` varchar(255) ,`ObjectKey` varchar(255) ,`InstanceMode` int ,`ParentInstanceID` bigint ,`StepIDSeed` int ,`TokenIDSeed` int ,`LogSeed` int ,`LogIndexSeed` int ,`EventSeed` int ,`StateWorkitemID` bigint ,`TransactionID` int ,`TransitTo` int ,`TransWorkitem` bigint ,`BPMState` int ,`BeginOperatorID` bigint ,`DocState` int ,`MapCount` int ,`Slock` int , PRIMARY KEY(`InstanceID`) )ENGINE=INNODB;
create index I_BPM_InstanceOID on `BPM_Instance`(`OID`);
create table `BPM_Node` (`InstanceID` bigint ,`OID` bigint ,`InlineNodeID` int ,`NodeID` int ,`InlineVersion` int ,`NodeType` int ,`Result` int ,`SubInstanceID` bigint ,`WorkitemID` bigint ,`BPMState` int ,`CountSeed` int ,`TransactionID` int ,`assistTransactionID` int ,`MapCount` int ,`Slock` int , PRIMARY KEY(`InstanceID`,`InlineNodeID`,`NodeID`) )ENGINE=INNODB;
create index I_BPM_NodeInstanceID on `BPM_Node`(`InstanceID`);
create table `BPM_NodeRB` (`InstanceID` bigint ,`OID` bigint ,`InlineNodeID` int ,`NodeID` int ,`TransactionID` int ,`InlineVersion` int ,`NodeType` int ,`Result` int ,`SubInstanceID` bigint ,`WorkitemID` bigint ,`BPMState` int ,`CountSeed` int ,`assistTransactionID` int ,`MapCount` int ,`Slock` int , PRIMARY KEY(`InstanceID`,`InlineNodeID`,`NodeID`,`TransactionID`) )ENGINE=INNODB;
create index I_BPM_NodeRBInstanceID on `BPM_NodeRB`(`InstanceID`);
create table `BPM_StepInfo` (`InstanceID` bigint ,`OID` bigint ,`StepID` int ,`InlineNodeID` int ,`SourceNodeID` int ,`TargetNodeID` int ,`TransactionID` int ,`assistTransactionID` int ,`MapCount` int ,`Slock` int , PRIMARY KEY(`InstanceID`,`StepID`) )ENGINE=INNODB;
create index I_BPM_StepInfoInstanceID on `BPM_StepInfo`(`InstanceID`);
create table `BPM_StepInfoRB` (`InstanceID` bigint ,`OID` bigint ,`StepID` int ,`TransactionID` int ,`InlineNodeID` int ,`SourceNodeID` int ,`TargetNodeID` int ,`assistTransactionID` int ,`MapCount` int ,`Slock` int , PRIMARY KEY(`InstanceID`,`StepID`,`TransactionID`) )ENGINE=INNODB;
create index I_BPM_StepInfoRBInstanceID on `BPM_StepInfoRB`(`InstanceID`);
create table `BPM_Token` (`InstanceID` bigint ,`OID` bigint ,`TokenID` int ,`InlineNodeID` int ,`NodeID` int ,`TransactionID` int ,`assistTransactionID` int ,`MapCount` int ,`Slock` int , PRIMARY KEY(`InstanceID`,`TokenID`) )ENGINE=INNODB;
create index I_BPM_TokenInstanceID on `BPM_Token`(`InstanceID`);
create table `BPM_TokenRB` (`InstanceID` bigint ,`OID` bigint ,`TokenID` int ,`TransactionID` int ,`InlineNodeID` int ,`NodeID` int ,`assistTransactionID` int ,`MapCount` int ,`Slock` int , PRIMARY KEY(`InstanceID`,`TokenID`,`TransactionID`) )ENGINE=INNODB;
create index I_BPM_TokenRBInstanceID on `BPM_TokenRB`(`InstanceID`);
create table `BPM_WorkitemInfo` (`InstanceID` bigint ,`OID` bigint ,`WorkitemID` bigint ,`InlineNodeID` int ,`NodeID` int ,`NodeKey` varchar(255) ,`FormKey` varchar(255) ,`ParentWorkitemID` bigint ,`PWorkitemID4Transfer` bigint ,`TransitTo` int ,`backsiteWorkitemID` bigint ,`CountID` int ,`TransactionID` int ,`assistTransactionID` int ,`MapCount` int ,`Slock` int , PRIMARY KEY(`InstanceID`,`WorkitemID`) )ENGINE=INNODB;
create index I_PM_WorkitemInfoInstanceID on `BPM_WorkitemInfo`(`InstanceID`);
create table `BPM_WorkitemInfoRB` (`InstanceID` bigint ,`OID` bigint ,`WorkitemID` bigint ,`TransactionID` int ,`InlineNodeID` int ,`NodeID` int ,`NodeKey` varchar(255) ,`FormKey` varchar(255) ,`ParentWorkitemID` bigint ,`PWorkitemID4Transfer` bigint ,`TransitTo` int ,`backsiteWorkitemID` bigint ,`CountID` int ,`assistTransactionID` int ,`MapCount` int ,`Slock` int , PRIMARY KEY(`InstanceID`,`WorkitemID`,`TransactionID`) )ENGINE=INNODB;
create index I__WorkitemInfoRBInstanceID on `BPM_WorkitemInfoRB`(`InstanceID`);
create table `BPM_EventLog` (`InstanceID` bigint ,`OID` bigint ,`LogID` bigint ,`EventTime` datetime ,`ActionType` int ,`Name` varchar(255) ,`Soperator` bigint ,`Toperator` bigint ,`UserInfo` varchar(255) ,`MapCount` int ,`Slock` int , PRIMARY KEY(`InstanceID`,`LogID`) )ENGINE=INNODB;
create index I_BPM_EventLogInstanceID on `BPM_EventLog`(`InstanceID`);
create table `BPM_AuditRetLog` (`InstanceID` bigint ,`OID` bigint ,`WorkitemID` bigint ,`UserID` bigint ,`AuditResult` int ,`UserInfo` varchar(255) ,`NodeID` int ,`InlineNodeID` int ,`MapCount` int ,`Slock` int , PRIMARY KEY(`InstanceID`,`UserID`) )ENGINE=INNODB;
create index I_BPM_AuditRetLogInstanceID on `BPM_AuditRetLog`(`InstanceID`);
create table `BPM_TransitTo` (`InstanceID` bigint ,`OID` bigint ,`WorkitemID` bigint ,`NodeID` int ,`transitToWorkitem` bigint ,`MapCount` int ,`Slock` int , PRIMARY KEY(`WorkitemID`,`transitToWorkitem`) )ENGINE=INNODB;
create index I_BPM_TransitToInstanceID on `BPM_TransitTo`(`InstanceID`);
create table `BPM_Log` (`InstanceID` bigint ,`OID` bigint ,`LogID` int ,`LogIndex` int ,`InlineNodeID` int ,`NodeID` int ,`WorkitemID` bigint ,`WorkitemName` varchar(255) ,`WorkitemState` int ,`CreatTime` datetime ,`FinishTime` datetime ,`OperatorID` bigint ,`AuditResult` int ,`UserInfo` varchar(4000) ,`ResultInfo` varchar(255) ,`LaunchInfo` varchar(255) ,`TransactionID` int ,`assistTransactionID` int ,`MapCount` int ,`Slock` int , PRIMARY KEY(`InstanceID`,`LogID`) )ENGINE=INNODB;
create index I_BPM_LogInstanceID on `BPM_Log`(`InstanceID`);
create table `BPM_LogRB` (`InstanceID` bigint ,`OID` bigint ,`LogID` int ,`LogIndex` int ,`InlineNodeID` int ,`NodeID` int ,`WorkitemID` bigint ,`WorkitemName` varchar(255) ,`WorkitemState` int ,`CreatTime` datetime ,`FinishTime` datetime ,`OperatorID` bigint ,`AuditResult` int ,`UserInfo` varchar(4000) ,`ResultInfo` varchar(255) ,`LaunchInfo` varchar(255) ,`TransactionID` int ,`assistTransactionID` int ,`MapCount` int ,`Slock` int , PRIMARY KEY(`InstanceID`,`LogID`,`TransactionID`) )ENGINE=INNODB;
create index I_BPM_LogRBInstanceID on `BPM_LogRB`(`InstanceID`);
create table `BPM_TimerEvent` (`InstanceID` bigint ,`OID` bigint ,`InlineNodeID` int ,`NodeID` int ,`EventTime` datetime ,`TransactionID` int ,`AssistTransactionID` int ,`MapCount` int ,`Slock` int , PRIMARY KEY(`InstanceID`,`InlineNodeID`,`NodeID`) )ENGINE=INNODB;
create index I_BPM_TimerEventInstanceID on `BPM_TimerEvent`(`InstanceID`);
create table `BPM_TimerEventRB` (`InstanceID` bigint ,`OID` bigint ,`InlineNodeID` int ,`NodeID` int ,`EventTime` datetime ,`TransactionID` int ,`AssistTransactionID` int ,`MapCount` int ,`Slock` int , PRIMARY KEY(`InstanceID`,`InlineNodeID`,`NodeID`,`TransactionID`) )ENGINE=INNODB;
create index I_PM_TimerEventRBInstanceID on `BPM_TimerEventRB`(`InstanceID`);
create table `BPM_FocusInstance` (`InstanceID` bigint ,`OID` bigint ,`FocusInstanceID` bigint ,`InlineNodeID` int ,`NodeID` int ,`InstanceSyncState` int ,`TransactionID` int ,`AssistTransactionID` int ,`MapCount` int ,`Slock` int , PRIMARY KEY(`InstanceID`,`FocusInstanceID`) )ENGINE=INNODB;
create index I_M_FocusInstanceInstanceID on `BPM_FocusInstance`(`InstanceID`);
create table `BPM_FocusInstanceRB` (`InstanceID` bigint ,`OID` bigint ,`FocusInstanceID` bigint ,`InlineNodeID` int ,`NodeID` int ,`InstanceSyncState` int ,`TransactionID` int ,`AssistTransactionID` int ,`MapCount` int ,`Slock` int , PRIMARY KEY(`InstanceID`,`FocusInstanceID`,`TransactionID`) )ENGINE=INNODB;
create index I_FocusInstanceRBInstanceID on `BPM_FocusInstanceRB`(`InstanceID`);
create table `BPM_FocusedInstance` (`InstanceID` bigint ,`OID` bigint ,`FocusedInstanceID` bigint ,`SyncTriggerType` int ,`TransactionID` int ,`AssistTransactionID` int ,`MapCount` int ,`Slock` int , PRIMARY KEY(`InstanceID`,`FocusedInstanceID`) )ENGINE=INNODB;
create index I_FocusedInstanceInstanceID on `BPM_FocusedInstance`(`InstanceID`);
create table `BPM_FocusedInstanceRB` (`InstanceID` bigint ,`OID` bigint ,`FocusedInstanceID` bigint ,`SyncTriggerType` int ,`TransactionID` int ,`AssistTransactionID` int ,`MapCount` int ,`Slock` int , PRIMARY KEY(`InstanceID`,`FocusedInstanceID`,`TransactionID`) )ENGINE=INNODB;
create index I_cusedInstanceRBInstanceID on `BPM_FocusedInstanceRB`(`InstanceID`);
create table `BPM_Transaction` (`InstanceID` bigint ,`OID` bigint ,`TransactionID` int ,`WorkitemID` bigint ,`OperatorID` bigint ,`WorkitemRevoke` int ,`fieldKey` varchar(255) ,`fieldValue` varchar(255) ,`statusValue` int ,`MapCount` int ,`Slock` int , PRIMARY KEY(`InstanceID`,`TransactionID`) )ENGINE=INNODB;
create index I_BPM_TransactionInstanceID on `BPM_Transaction`(`InstanceID`);
create table `WF_Delegate` (`DelegateID` bigint ,`DelegateType` int ,`SrcOperatorID` int ,`TgtOperatorID` int ,`CreaterID` int ,`ObjectType` int ,`ObjectKey` varchar(255) ,`NodeKey` varchar(255) ,`StartTime` datetime ,`EndTime` datetime ,`AlwaysValid` int ,`Enable` int ,`AutoRetreat` int ,`MapCount` int ,`Slock` int , PRIMARY KEY(`DelegateID`) )ENGINE=INNODB;
create index I_WF_DelegateTime on `WF_Delegate`(`StartTime`,`AlwaysValid`,`EndTime`);
create table `BPM_Timer` (`InstanceID` bigint ,`OID` bigint ,`InlineNodeID` int ,`NodeID` int ,`ItemKey` varchar(255) ,`TriggerTime` datetime ,`MapCount` int ,`Slock` int , PRIMARY KEY(`InstanceID`,`InlineNodeID`,`NodeID`,`ItemKey`) )ENGINE=INNODB;
create index I_BPM_TimerInstanceID on `BPM_Timer`(`InstanceID`,`InlineNodeID`,`NodeID`);
create table `BPM_WorkitemTimer` (`InstanceID` bigint ,`OID` bigint ,`WorkitemID` bigint ,`ItemKey` varchar(255) ,`TriggerTime` datetime ,`MapCount` int ,`Slock` int , PRIMARY KEY(`WorkitemID`,`ItemKey`) )ENGINE=INNODB;
create index I_M_WorkitemTimerWorkitemID on `BPM_WorkitemTimer`(`WorkitemID`);
create table `BPM_StateRB` (`InstanceID` bigint ,`OID` bigint ,`InlineNodeID` int ,`NodeID` int ,`OperatorID` bigint ,`WorkitemID` bigint ,`OperationNodeID` int ,`TransactionID` int ,`AssistTransactionID` int ,`MapCount` int ,`Slock` int , PRIMARY KEY(`InstanceID`,`OperatorID`,`WorkitemID`,`OperationNodeID`,`TransactionID`) )ENGINE=INNODB;
create index I_BPM_StateRBInstanceID on `BPM_StateRB`(`InstanceID`);
create table `BPM_State` (`InstanceID` bigint ,`OID` bigint ,`InlineNodeID` int ,`NodeID` int ,`OperatorID` bigint ,`WorkitemID` bigint ,`OperationNodeID` int ,`TransactionID` int ,`AssistTransactionID` int ,`MapCount` int ,`Slock` int , PRIMARY KEY(`InstanceID`,`OperatorID`,`WorkitemID`,`OperationNodeID`) )ENGINE=INNODB;
create index I_BPM_StateInstanceID on `BPM_State`(`InstanceID`);
create table `BPM_Migration` (`OID` bigint ,`SOID` bigint ,`VERID` bigint ,`DVERID` bigint ,`POID` bigint ,`MapCount` int ,`Slock` int , PRIMARY KEY(`OID`) )ENGINE=INNODB;
create index I_BPM_Migration_SOID on `BPM_Migration`(`SOID`);
create table `BPM_DirectTransition` (`InstanceID` bigint ,`OID` bigint ,`InlineNodeID` int ,`NodeID` int ,`TgtNodeID` int ,`TransactionID` int ,`AssistTransactionID` int ,`MapCount` int ,`Slock` int , PRIMARY KEY(`InstanceID`,`InlineNodeID`,`NodeID`) )ENGINE=INNODB;
create table `BPM_DirectTransitionRB` (`InstanceID` bigint ,`OID` bigint ,`InlineNodeID` int ,`NodeID` int ,`TransactionID` int ,`TgtNodeID` int ,`AssistTransactionID` int ,`MapCount` int ,`Slock` int , PRIMARY KEY(`InstanceID`,`InlineNodeID`,`NodeID`,`TransactionID`) )ENGINE=INNODB;
create table `BPM_AttachmentInfo` (`InstanceID` bigint ,`OID` bigint ,`AttachmentKey` varchar(64) ,`AttachmentInfo` varchar(255) ,`AttachmentPara` varchar(255) ,`TransactionID` int ,`AssistTransactionID` int ,`MapCount` int ,`Slock` int , PRIMARY KEY(`InstanceID`,`AttachmentKey`) )ENGINE=INNODB;
create table `BPM_AttachmentInfoRB` (`InstanceID` bigint ,`OID` bigint ,`AttachmentKey` varchar(64) ,`AttachmentInfo` varchar(255) ,`AttachmentPara` varchar(255) ,`TransactionID` int ,`AssistTransactionID` int ,`MapCount` int ,`Slock` int , PRIMARY KEY(`InstanceID`,`AttachmentKey`,`TransactionID`) )ENGINE=INNODB;
create table `WF_Workitem` (`WorkitemID` bigint ,`OID` bigint ,`WorkitemName` varchar(255) ,`WorkitemState` int ,`CreatTime` datetime ,`FinishTime` datetime ,`OperatorID` bigint ,`SrcOperatorID` bigint ,`TransferType` int ,`AuditResult` int ,`UserInfo` varchar(4000) ,`ResultInfo` varchar(255) ,`InlineNodeID` int ,`NodeID` int ,`NodeKey` varchar(255) ,`NodeType` int ,`TransitTo` int ,`BacksiteWorkitemID` bigint ,`LaunchInfo` varchar(255) ,`TransactionID` int ,`AssistTransactionID` int ,`LogID` int ,`ParentAuditResult` int ,`MapCount` int ,`Slock` int , PRIMARY KEY(`WorkitemID`) )ENGINE=INNODB;
create table `WF_WorkitemRB` (`WorkitemID` bigint ,`OID` bigint ,`WorkitemName` varchar(255) ,`WorkitemState` int ,`CreatTime` datetime ,`FinishTime` datetime ,`OperatorID` bigint ,`SrcOperatorID` bigint ,`TransferType` int ,`AuditResult` int ,`UserInfo` varchar(4000) ,`ResultInfo` varchar(255) ,`InlineNodeID` int ,`NodeID` int ,`NodeType` int ,`TransitTo` int ,`BacksiteWorkitemID` bigint ,`LaunchInfo` varchar(255) ,`TransactionID` int ,`AssistTransactionID` int ,`LogID` int ,`ParentAuditResult` int ,`MapCount` int ,`Slock` int , PRIMARY KEY(`WorkitemID`,`TransactionID`) )ENGINE=INNODB;
create index I_WF_WorkitemRBWorkitemID on `WF_WorkitemRB`(`WorkitemID`);
create table `WF_ParticipatorRB` (`WorkitemID` bigint ,`OperatorID` bigint ,`OID` bigint ,`SrcOperatorID` bigint ,`DelegateID` bigint ,`TransactionID` int ,`AssistTransactionID` int ,`Visible` int ,`MapCount` int ,`Slock` int , PRIMARY KEY(`WorkitemID`,`OperatorID`,`TransactionID`) )ENGINE=INNODB;
create index I__ParticipatorRBWorkitemID on `WF_ParticipatorRB`(`WorkitemID`);
create table `WF_Participator` (`WorkitemID` bigint ,`OperatorID` bigint ,`OID` bigint ,`SrcOperatorID` bigint ,`DelegateID` bigint ,`TransactionID` int ,`AssistTransactionID` int ,`Visible` int ,`MapCount` int ,`Slock` int , PRIMARY KEY(`WorkitemID`,`OperatorID`) )ENGINE=INNODB;
create index I_WF_ParticipatorWorkitemID on `WF_Participator`(`WorkitemID`);
create table `SYS_IDSeed` (`SeedID` int ,`SeedMark` bigint ,`Description` varchar(255) ,`CreateTime` date ,`Slock` int , PRIMARY KEY(`SeedID`) )ENGINE=INNODB;
create table `SYS_Sequence` (`SequenceID` int ,`NoPrefix` varchar(100) ,`Slock` int , PRIMARY KEY(`NoPrefix`) )ENGINE=INNODB;
create table `USER_Attachment` (`OID` bigint ,`SOID` bigint ,`UploadTime` datetime ,`UploadOperator` bigint ,`Path` varchar(150) ,`Name` varchar(150) ,`FileSize` bigint ,`UploadSize` bigint ,`FileMD5` varchar(150) ,`Client` varchar(150) ,`Server` varchar(150) ,`Schedule` double ,`UploadStatus` varchar(20) ,`Slock` int , PRIMARY KEY(`OID`) )ENGINE=INNODB;
create table `SYS_RoleEntryRights` (`RoleID` bigint ,`EntryKey` varchar(512) ,`HasRights` int ,`Slock` int  )ENGINE=INNODB;
create index I_RoleEntryRightsRoleID on `SYS_RoleEntryRights`(`RoleID`);
create table `SYS_WorkingCalendar` (`OID` bigint ,`DateOfYear` varchar(255) ,`ClusterID` bigint ,`isWorkDay` int ,`Slock` int , PRIMARY KEY(`OID`) )ENGINE=INNODB;
create table `SYS_WorkingTime` (`OID` bigint ,`WorkingTime` varchar(255) ,`ClusterID` bigint ,`Slock` int , PRIMARY KEY(`OID`) )ENGINE=INNODB;
create table `SYS_OperatorEntryRights` (`OperatorID` bigint ,`EntryKey` varchar(512) ,`HasRights` int ,`Slock` int  )ENGINE=INNODB;
create index I_atorEntryRightsOperatorID on `SYS_OperatorEntryRights`(`OperatorID`);
create table `SYS_RoleOptRights` (`RoleID` bigint ,`FormKey` varchar(64) ,`OptKey` varchar(64) ,`HasRights` int ,`Slock` int , PRIMARY KEY(`RoleID`,`FormKey`,`OptKey`) )ENGINE=INNODB;
create table `SYS_OperatorOptRights` (`OperatorID` bigint ,`FormKey` varchar(64) ,`OptKey` varchar(64) ,`HasRights` int ,`Slock` int , PRIMARY KEY(`OperatorID`,`FormKey`,`OptKey`) )ENGINE=INNODB;
create table `SYS_RoleFieldRights` (`RoleID` bigint ,`FormKey` varchar(64) ,`FieldKey` varchar(64) ,`Visible` int ,`Enable` int ,`HasRights` int ,`Slock` int , PRIMARY KEY(`RoleID`,`FormKey`,`FieldKey`) )ENGINE=INNODB;
create table `SYS_OperatorFieldRights` (`OperatorID` bigint ,`FormKey` varchar(64) ,`FieldKey` varchar(64) ,`Visible` int ,`Enable` int ,`HasRights` int ,`Slock` int , PRIMARY KEY(`OperatorID`,`FormKey`,`FieldKey`) )ENGINE=INNODB;
create table `SYS_RoleFormRights` (`RoleID` bigint ,`FormKey` varchar(64) ,`HasRights` int ,`Slock` int  )ENGINE=INNODB;
create table `SYS_OperatorFormRights` (`OperatorID` bigint ,`FormKey` varchar(64) ,`HasRights` int ,`Slock` int  )ENGINE=INNODB;
create table `SYS_Para` (`ParaKey` varchar(50) ,`ParaValue` varchar(1024) ,`ParaVer` int ,`Slock` int  )ENGINE=INNODB;
create table `SYS_SessionLog` (`OID` bigint ,`ClientID` varchar(50) ,`Operator` bigint ,`Happentime` datetime ,`Flag` int ,`IP` varchar(50) ,`Session_Mode` int ,`Host` varchar(50) ,`Port` varchar(50) ,`Notes` varchar(100) ,`Slock` int , PRIMARY KEY(`OID`) )ENGINE=INNODB;
create table `SYS_OperatorCertificate` (`OID` bigint ,`OperatorID` bigint ,`Fingerprint` varchar(1024) ,`ClientName` varchar(255) ,`Alias` varchar(100) ,`PublicKey` varchar(1024) ,`PrivateKey` varchar(1024) ,`StartTime` datetime ,`EndTime` datetime ,`UpdateTime` datetime ,`Flag` int ,`Slock` int , PRIMARY KEY(`OID`) )ENGINE=INNODB;
create table `SYS_OperateFingerprintCheck` (`OID` bigint ,`OperatorID` bigint ,`MetaKey` varchar(128) ,`CmdKey` varchar(100) ,`Slock` int , PRIMARY KEY(`OID`) )ENGINE=INNODB;
create table `SYS_RelationDataObject` (`OperatorID` bigint ,`OperationType` int ,`DataObjectKey` varchar(255) ,`Slock` int  )ENGINE=INNODB;
create table `SYS_RelationScript` (`OperatorID` bigint ,`FormKey` varchar(255) ,`ScriptName` varchar(255) ,`Slock` int  )ENGINE=INNODB;
create table `SYS_RelationService` (`OperatorID` bigint ,`ServiceName` varchar(255) ,`Slock` int  )ENGINE=INNODB;
create table `SYS_RoleDataObjectRights` (`RoleID` bigint ,`DataObjectKey` varchar(255) ,`NewOpt` int ,`DeleteOpt` int ,`SaveOpt` int ,`LoadOpt` int ,`Slock` int  )ENGINE=INNODB;
create table `SYS_OperatorDataObjectRights` (`OperatorID` bigint ,`DataObjectKey` varchar(255) ,`NewOpt` int ,`DeleteOpt` int ,`SaveOpt` int ,`LoadOpt` int ,`Slock` int  )ENGINE=INNODB;
create table `SYS_RoleCustomOptRights` (`RoleID` bigint ,`GroupKey` varchar(255) ,`OptKey` varchar(255) ,`HasRights` int ,`Slock` int  )ENGINE=INNODB;
create table `SYS_OperatorCustomOptRights` (`OperatorID` bigint ,`GroupKey` varchar(255) ,`OptKey` varchar(255) ,`HasRights` int ,`Slock` int  )ENGINE=INNODB;
create table `SYS_RoleNamedSqlRights` (`RoleID` bigint ,`Name` varchar(255) ,`HasRights` int ,`Slock` int  )ENGINE=INNODB;
create table `SYS_OperatorNamedSqlRights` (`OperatorID` bigint ,`Name` varchar(255) ,`HasRights` int ,`Slock` int  )ENGINE=INNODB;
create table `SYS_RoleExServiceRights` (`RoleID` bigint ,`Name` varchar(255) ,`HasRights` int ,`Slock` int  )ENGINE=INNODB;
create table `SYS_OperatorExServiceRights` (`OperatorID` bigint ,`Name` varchar(255) ,`HasRights` int ,`Slock` int  )ENGINE=INNODB;
create table `QRTZ_JOB_DETAILS` (`SCHED_NAME` varchar(120) ,`JOB_NAME` varchar(200) ,`JOB_GROUP` varchar(200) ,`DESCRIPTION` varchar(250) ,`JOB_CLASS_NAME` varchar(250) ,`IS_DURABLE` varchar(1) ,`IS_NONCONCURRENT` varchar(1) ,`IS_UPDATE_DATA` varchar(1) ,`REQUESTS_RECOVERY` varchar(1) ,`JOB_DATA` long varbinary ,`Slock` int , PRIMARY KEY(`SCHED_NAME`,`JOB_NAME`,`JOB_GROUP`) )ENGINE=INNODB;
create table `QRTZ_TRIGGERS` (`SCHED_NAME` varchar(120) ,`TRIGGER_NAME` varchar(200) ,`TRIGGER_GROUP` varchar(200) ,`JOB_NAME` varchar(200) ,`JOB_GROUP` varchar(200) ,`DESCRIPTION` varchar(250) ,`NEXT_FIRE_TIME` bigint ,`PREV_FIRE_TIME` bigint ,`PRIORITY` int ,`TRIGGER_STATE` varchar(16) ,`TRIGGER_TYPE` varchar(8) ,`START_TIME` bigint ,`END_TIME` bigint ,`CALENDAR_NAME` varchar(200) ,`MISFIRE_INSTR` int ,`JOB_DATA` long varbinary ,`Slock` int , PRIMARY KEY(`SCHED_NAME`,`TRIGGER_NAME`,`TRIGGER_GROUP`) )ENGINE=INNODB;
create table `QRTZ_SIMPLE_TRIGGERS` (`SCHED_NAME` varchar(120) ,`TRIGGER_NAME` varchar(200) ,`TRIGGER_GROUP` varchar(200) ,`REPEAT_COUNT` bigint ,`REPEAT_INTERVAL` bigint ,`TIMES_TRIGGERED` bigint ,`Slock` int , PRIMARY KEY(`SCHED_NAME`,`TRIGGER_NAME`,`TRIGGER_GROUP`) )ENGINE=INNODB;
create table `QRTZ_CRON_TRIGGERS` (`SCHED_NAME` varchar(120) ,`TRIGGER_NAME` varchar(200) ,`TRIGGER_GROUP` varchar(200) ,`CRON_EXPRESSION` varchar(200) ,`TIME_ZONE_ID` varchar(80) ,`Slock` int , PRIMARY KEY(`SCHED_NAME`,`TRIGGER_NAME`,`TRIGGER_GROUP`) )ENGINE=INNODB;
create table `QRTZ_SIMPROP_TRIGGERS` (`SCHED_NAME` varchar(120) ,`TRIGGER_NAME` varchar(200) ,`TRIGGER_GROUP` varchar(200) ,`STR_PROP_1` varchar(512) ,`STR_PROP_2` varchar(512) ,`STR_PROP_3` varchar(512) ,`INT_PROP_1` int ,`INT_PROP_2` int ,`LONG_PROP_1` bigint ,`LONG_PROP_2` bigint ,`DEC_PROP_1` numeric(13,4) ,`DEC_PROP_2` numeric(13,4) ,`BOOL_PROP_1` varchar(1) ,`BOOL_PROP_2` varchar(1) ,`Slock` int , PRIMARY KEY(`SCHED_NAME`,`TRIGGER_NAME`,`TRIGGER_GROUP`) )ENGINE=INNODB;
create table `QRTZ_BLOB_TRIGGERS` (`SCHED_NAME` varchar(120) ,`TRIGGER_NAME` varchar(200) ,`TRIGGER_GROUP` varchar(200) ,`BLOB_DATA` long varbinary ,`Slock` int , PRIMARY KEY(`SCHED_NAME`,`TRIGGER_NAME`,`TRIGGER_GROUP`) )ENGINE=INNODB;
create table `QRTZ_CALENDARS` (`SCHED_NAME` varchar(120) ,`CALENDAR_NAME` varchar(200) ,`CALENDAR` long varbinary ,`Slock` int , PRIMARY KEY(`SCHED_NAME`,`CALENDAR_NAME`) )ENGINE=INNODB;
create table `QRTZ_PAUSED_TRIGGER_GRPS` (`SCHED_NAME` varchar(120) ,`TRIGGER_GROUP` varchar(200) ,`Slock` int , PRIMARY KEY(`SCHED_NAME`,`TRIGGER_GROUP`) )ENGINE=INNODB;
create table `QRTZ_FIRED_TRIGGERS` (`SCHED_NAME` varchar(120) ,`ENTRY_ID` varchar(95) ,`TRIGGER_NAME` varchar(200) ,`TRIGGER_GROUP` varchar(200) ,`INSTANCE_NAME` varchar(200) ,`FIRED_TIME` bigint ,`SCHED_TIME` bigint ,`PRIORITY` int ,`STATE` varchar(16) ,`JOB_NAME` varchar(200) ,`JOB_GROUP` varchar(200) ,`IS_NONCONCURRENT` varchar(1) ,`REQUESTS_RECOVERY` varchar(1) ,`Slock` int , PRIMARY KEY(`SCHED_NAME`,`ENTRY_ID`) )ENGINE=INNODB;
create table `QRTZ_SCHEDULER_STATE` (`SCHED_NAME` varchar(120) ,`INSTANCE_NAME` varchar(200) ,`LAST_CHECKIN_TIME` bigint ,`CHECKIN_INTERVAL` bigint ,`Slock` int , PRIMARY KEY(`SCHED_NAME`,`INSTANCE_NAME`) )ENGINE=INNODB;
create table `QRTZ_LOCKS` (`SCHED_NAME` varchar(120) ,`LOCK_NAME` varchar(40) ,`Slock` int , PRIMARY KEY(`SCHED_NAME`,`LOCK_NAME`) )ENGINE=INNODB;
D:\shanghaiboke\CDlogistics||Mysql1||Fri Sep 28 08:27:44 CST 2018
create table `Inventory` (`OID` bigint ,`SOID` bigint ,`POID` bigint ,`VERID` int ,`DVERID` int ,`Warehouse` bigint ,`Materiel` bigint ,`Amount` numeric(16,2) ,`Unit` bigint ,`MapCount` int ,`Slock` int , PRIMARY KEY(`OID`) )ENGINE=INNODB;
create unique index I_Inventory_MIGR on `Inventory`(`Warehouse`,`Materiel`,`Unit`);
create table `City` (`OID` bigint ,`SOID` bigint ,`POID` bigint ,`VERID` int ,`DVERID` int ,`Code` varchar(255) ,`Name` varchar(255) ,`NodeType` int ,`ParentID` bigint ,`Status` int ,`Enable` int ,`TLeft` int ,`TRight` int ,`ProvinceID` bigint ,`MapCount` int ,`Slock` int , PRIMARY KEY(`OID`) )ENGINE=INNODB;
create index I_City_SOID on `City`(`SOID`);
create table `City_RR` (`RoleID` bigint ,`FormKey` varchar(128) ,`DictID` bigint ,`HasRights` int , PRIMARY KEY(`RoleID`,`DictID`) )ENGINE=INNODB;
create table `City_OR` (`OperatorID` bigint ,`FormKey` varchar(128) ,`DictID` bigint ,`HasRights` int , PRIMARY KEY(`OperatorID`,`DictID`) )ENGINE=INNODB;
create table `Materiel` (`OID` bigint ,`SOID` bigint ,`POID` bigint ,`VERID` int ,`DVERID` int ,`Code` varchar(255) ,`Name` varchar(255) ,`NodeType` int ,`ParentID` bigint ,`Status` int ,`Enable` int ,`TLeft` int ,`TRight` int ,`Price` numeric(16,2) ,`Unit` bigint ,`MapCount` int ,`Slock` int , PRIMARY KEY(`OID`) )ENGINE=INNODB;
create index I_Materiel_SOID on `Materiel`(`SOID`);
create table `Materiel_RR` (`RoleID` bigint ,`FormKey` varchar(128) ,`DictID` bigint ,`HasRights` int , PRIMARY KEY(`RoleID`,`DictID`) )ENGINE=INNODB;
create table `Materiel_OR` (`OperatorID` bigint ,`FormKey` varchar(128) ,`DictID` bigint ,`HasRights` int , PRIMARY KEY(`OperatorID`,`DictID`) )ENGINE=INNODB;
create table `Province` (`OID` bigint ,`SOID` bigint ,`POID` bigint ,`VERID` int ,`DVERID` int ,`Code` varchar(255) ,`Name` varchar(255) ,`NodeType` int ,`ParentID` bigint ,`Status` int ,`Enable` int ,`TLeft` int ,`TRight` int ,`MapCount` int ,`Slock` int , PRIMARY KEY(`OID`) )ENGINE=INNODB;
create index I_Province_SOID on `Province`(`SOID`);
create table `Province_RR` (`RoleID` bigint ,`FormKey` varchar(128) ,`DictID` bigint ,`HasRights` int , PRIMARY KEY(`RoleID`,`DictID`) )ENGINE=INNODB;
create table `Province_OR` (`OperatorID` bigint ,`FormKey` varchar(128) ,`DictID` bigint ,`HasRights` int , PRIMARY KEY(`OperatorID`,`DictID`) )ENGINE=INNODB;
create table `Unit` (`OID` bigint ,`SOID` bigint ,`POID` bigint ,`VERID` int ,`DVERID` int ,`Code` varchar(255) ,`Name` varchar(255) ,`NodeType` int ,`ParentID` bigint ,`Status` int ,`Enable` int ,`TLeft` int ,`TRight` int ,`MapCount` int ,`Slock` int , PRIMARY KEY(`OID`) )ENGINE=INNODB;
create index I_Unit_SOID on `Unit`(`SOID`);
create table `Unit_RR` (`RoleID` bigint ,`FormKey` varchar(128) ,`DictID` bigint ,`HasRights` int , PRIMARY KEY(`RoleID`,`DictID`) )ENGINE=INNODB;
create table `Unit_OR` (`OperatorID` bigint ,`FormKey` varchar(128) ,`DictID` bigint ,`HasRights` int , PRIMARY KEY(`OperatorID`,`DictID`) )ENGINE=INNODB;
create table `Warehouse` (`OID` bigint ,`SOID` bigint ,`POID` bigint ,`VERID` int ,`DVERID` int ,`Code` varchar(255) ,`Name` varchar(255) ,`NodeType` int ,`ParentID` bigint ,`Status` int ,`Enable` int ,`TLeft` int ,`TRight` int ,`MapCount` int ,`Slock` int , PRIMARY KEY(`OID`) )ENGINE=INNODB;
create index I_Warehouse_SOID on `Warehouse`(`SOID`);
create table `Warehouse_RR` (`RoleID` bigint ,`FormKey` varchar(128) ,`DictID` bigint ,`HasRights` int , PRIMARY KEY(`RoleID`,`DictID`) )ENGINE=INNODB;
create table `Warehouse_OR` (`OperatorID` bigint ,`FormKey` varchar(128) ,`DictID` bigint ,`HasRights` int , PRIMARY KEY(`OperatorID`,`DictID`) )ENGINE=INNODB;
create table `JobInfo` (`OID` bigint ,`SOID` bigint ,`POID` bigint ,`VERID` int ,`DVERID` int ,`Name` varchar(255) ,`Gender` int ,`Province` bigint ,`City` bigint ,`Address` varchar(255) ,`Phone` varchar(255) ,`Education` int ,`Major` varchar(255) ,`EducationalExperience` varchar(255) ,`WorkExperience` varchar(255) ,`Skill_JAVA` int ,`Skill_CPlus` int ,`Skill_SQL` int ,`Skill_Net` int ,`Remarks` varchar(255) ,`MapCount` int ,`Slock` int , PRIMARY KEY(`OID`) )ENGINE=INNODB;
create unique index I_JobInfo_SOID on `JobInfo`(`SOID`);
create table `PurchaseHead` (`OID` bigint ,`SOID` bigint ,`POID` bigint ,`VERID` int ,`DVERID` int ,`NO` varchar(255) ,`Status` int ,`BillDate` datetime ,`Creator` bigint ,`CreateTime` datetime ,`Modifier` bigint ,`ModifyTime` datetime ,`InstanceID` bigint ,`Dict1` bigint ,`Dict2` bigint ,`DynamicDict1` bigint ,`DynamicDict1ItemKey` varchar(255) ,`SumPrice` numeric(16,2) ,`MapCount` int ,`Slock` int , PRIMARY KEY(`OID`) )ENGINE=INNODB;
create unique index I_PurchaseHead_SOID on `PurchaseHead`(`SOID`);
create table `PurchaseDetail` (`OID` bigint ,`POID` bigint ,`SOID` bigint ,`VERID` int ,`DVERID` int ,`SEQUENCE` int ,`Warehouse` bigint ,`Materiel` bigint ,`Amount` numeric(16,2) ,`InAmount` numeric(16,2) ,`UseType` int ,`Price` numeric(16,2) ,`Unit` bigint ,`TotalPrice` numeric(16,2) ,`MapCount` int ,`Slock` int , PRIMARY KEY(`OID`) )ENGINE=INNODB;
create index I_PurchaseDetail_SOID on `PurchaseDetail`(`SOID`);
create table `PurchaseData` (`OID` bigint ,`SOID` bigint ,`POID` bigint ,`VERID` int ,`DVERID` int ,`Warehouse` bigint ,`Materiel` bigint ,`Amount` numeric(16,2) ,`NotInAmount` numeric(16,2) ,`Unit` bigint ,`Price` numeric(16,2) ,`MapCount` int ,`Slock` int , PRIMARY KEY(`OID`) )ENGINE=INNODB;
create unique index I_PurchaseData_SOID on `PurchaseData`(`SOID`);
create table `StockInHead` (`OID` bigint ,`SOID` bigint ,`POID` bigint ,`VERID` int ,`DVERID` int ,`NO` varchar(255) ,`Status` int ,`BillDate` datetime ,`Creator` bigint ,`CreateTime` datetime ,`Modifier` bigint ,`ModifyTime` datetime ,`InstanceID` bigint ,`SumPrice` numeric(16,2) ,`MaterielState` int ,`MapCount` int ,`Slock` int , PRIMARY KEY(`OID`) )ENGINE=INNODB;
create unique index I_StockInHead_SOID on `StockInHead`(`SOID`);
create table `StockInDetail` (`OID` bigint ,`POID` bigint ,`SOID` bigint ,`VERID` int ,`DVERID` int ,`SEQUENCE` int ,`Warehouse` bigint ,`Materiel` bigint ,`Unit` bigint ,`Price` numeric(16,2) ,`Amount` numeric(16,2) ,`TotalPrice` numeric(16,2) ,`MapKey` varchar(255) ,`SrcOID` bigint ,`SrcSOID` bigint ,`MapCount` int ,`Slock` int , PRIMARY KEY(`OID`) )ENGINE=INNODB;
create index I_StockInDetail_SOID on `StockInDetail`(`SOID`);
create index I_StockInDetail_SRCO on `StockInDetail`(`SrcOID`);
create index I_StockInDetail_SRCS on `StockInDetail`(`SrcSOID`);
create table `StockOutHead` (`OID` bigint ,`SOID` bigint ,`POID` bigint ,`VERID` int ,`DVERID` int ,`NO` varchar(255) ,`Status` int ,`BillDate` datetime ,`Creator` bigint ,`CreateTime` datetime ,`Modifier` bigint ,`ModifyTime` datetime ,`InstanceID` bigint ,`MapCount` int ,`Slock` int , PRIMARY KEY(`OID`) )ENGINE=INNODB;
create unique index I_StockOutHead_SOID on `StockOutHead`(`SOID`);
create table `StockOutDetail` (`OID` bigint ,`POID` bigint ,`SOID` bigint ,`VERID` int ,`DVERID` int ,`SEQUENCE` int ,`Warehouse` bigint ,`Materiel` bigint ,`Amount` numeric(16,2) ,`UseType` int ,`Unit` bigint ,`MapCount` int ,`Slock` int , PRIMARY KEY(`OID`) )ENGINE=INNODB;
create index I_StockOutDetail_SOID on `StockOutDetail`(`SOID`);
create table `VacationRequest` (`OID` bigint ,`SOID` bigint ,`POID` bigint ,`VERID` int ,`DVERID` int ,`EmpNO` bigint ,`Name` varchar(255) ,`StartTime` datetime ,`EndTime` datetime ,`VacationNum` int ,`Cause` int ,`MapCount` int ,`Slock` int , PRIMARY KEY(`OID`) )ENGINE=INNODB;
create unique index I_VacationRequest_SOID on `VacationRequest`(`SOID`);
create table `SYS_Operator` (`OID` bigint ,`POID` bigint ,`SOID` bigint ,`VERID` int ,`DVERID` int ,`Status` int ,`Enable` int ,`NodeType` int ,`ParentID` bigint ,`TLeft` int ,`TRight` int ,`Code` varchar(50) ,`Name` varchar(50) ,`Password` varchar(512) ,`MapCount` int ,`Slock` int , PRIMARY KEY(`OID`) )ENGINE=INNODB;
create index I_SYS_Operator_SOID on `SYS_Operator`(`SOID`);
create table `SYS_OperatorRole` (`OID` bigint ,`POID` bigint ,`SOID` bigint ,`VERID` int ,`DVERID` int ,`Sequence` int ,`Role` bigint ,`MapCount` int ,`Slock` int , PRIMARY KEY(`OID`) )ENGINE=INNODB;
create index I_YS_OperatorRole_SOID on `SYS_OperatorRole`(`SOID`);
create table `SYS_Operator_RR` (`RoleID` bigint ,`FormKey` varchar(128) ,`DictID` bigint ,`HasRights` int , PRIMARY KEY(`RoleID`,`DictID`) )ENGINE=INNODB;
create table `SYS_Operator_OR` (`OperatorID` bigint ,`FormKey` varchar(128) ,`DictID` bigint ,`HasRights` int , PRIMARY KEY(`OperatorID`,`DictID`) )ENGINE=INNODB;
create table `CUST_StaticObj` (`OID` bigint ,`POID` bigint ,`SOID` bigint ,`VERID` int ,`DVERID` int ,`MapCount` int ,`Slock` int , PRIMARY KEY(`OID`) )ENGINE=INNODB;
create unique index I_CUST_StaticObj_SOID on `CUST_StaticObj`(`SOID`);
create table `CUST_Para` (`OID` bigint ,`POID` bigint ,`SOID` bigint ,`VERID` int ,`DVERID` int ,`ParaKey` varchar(64) ,`ParentKey` varchar(64) ,`ParaValue` bigint ,`NodeType` int ,`MapCount` int ,`Slock` int , PRIMARY KEY(`OID`) )ENGINE=INNODB;
create index I_CUST_Para_SOID on `CUST_Para`(`SOID`);
create table `SYS_Role` (`OID` bigint ,`POID` bigint ,`SOID` bigint ,`VERID` int ,`DVERID` int ,`Status` int ,`Enable` int ,`NodeType` int ,`ParentID` bigint ,`TLeft` int ,`TRight` int ,`Code` varchar(50) ,`Name` varchar(50) ,`IsAdmin` int ,`MapCount` int ,`Slock` int , PRIMARY KEY(`OID`) )ENGINE=INNODB;
create index I_SYS_Role_SOID on `SYS_Role`(`SOID`);
create table `SYS_Role_RR` (`RoleID` bigint ,`FormKey` varchar(128) ,`DictID` bigint ,`HasRights` int , PRIMARY KEY(`RoleID`,`DictID`) )ENGINE=INNODB;
create table `SYS_Role_OR` (`OperatorID` bigint ,`FormKey` varchar(128) ,`DictID` bigint ,`HasRights` int , PRIMARY KEY(`OperatorID`,`DictID`) )ENGINE=INNODB;
create table `LeaveHead` (`OID` bigint ,`SOID` bigint ,`POID` bigint ,`VERID` int ,`DVERID` int ,`NO` varchar(255) ,`Status` int ,`BillDate` datetime ,`Creator` bigint ,`CreateTime` datetime ,`Modifier` bigint ,`ModifyTime` datetime ,`InstanceID` bigint ,`MapCount` int ,`Slock` int , PRIMARY KEY(`OID`) )ENGINE=INNODB;
create unique index I_LeaveHead_SOID on `LeaveHead`(`SOID`);
create table `LeaveDetail` (`OID` bigint ,`POID` bigint ,`SOID` bigint ,`VERID` int ,`DVERID` int ,`SEQUENCE` int ,`EmpNo` bigint ,`Name` varchar(255) ,`StartTime` datetime ,`EndTime` datetime ,`LeaveNum` numeric(16,2) ,`MapCount` int ,`Slock` int , PRIMARY KEY(`OID`) )ENGINE=INNODB;
create index I_LeaveDetail_SOID on `LeaveDetail`(`SOID`);
create table `BPM_Instance` (`InstanceID` bigint ,`OID` bigint ,`ProcessKey` varchar(255) ,`VerID` int ,`StartTime` datetime ,`EndTime` datetime ,`CostTime` bigint ,`InstanceState` int ,`FormKey` varchar(255) ,`FormName` varchar(255) ,`ObjectKey` varchar(255) ,`InstanceMode` int ,`ParentInstanceID` bigint ,`StepIDSeed` int ,`TokenIDSeed` int ,`LogSeed` int ,`LogIndexSeed` int ,`EventSeed` int ,`StateWorkitemID` bigint ,`TransactionID` int ,`TransitTo` int ,`TransWorkitem` bigint ,`BPMState` int ,`BeginOperatorID` bigint ,`DocState` int ,`MapCount` int ,`Slock` int , PRIMARY KEY(`InstanceID`) )ENGINE=INNODB;
create index I_BPM_InstanceOID on `BPM_Instance`(`OID`);
create table `BPM_Node` (`InstanceID` bigint ,`OID` bigint ,`InlineNodeID` int ,`NodeID` int ,`InlineVersion` int ,`NodeType` int ,`Result` int ,`SubInstanceID` bigint ,`WorkitemID` bigint ,`BPMState` int ,`CountSeed` int ,`TransactionID` int ,`assistTransactionID` int ,`MapCount` int ,`Slock` int , PRIMARY KEY(`InstanceID`,`InlineNodeID`,`NodeID`) )ENGINE=INNODB;
create index I_BPM_NodeInstanceID on `BPM_Node`(`InstanceID`);
create table `BPM_NodeRB` (`InstanceID` bigint ,`OID` bigint ,`InlineNodeID` int ,`NodeID` int ,`TransactionID` int ,`InlineVersion` int ,`NodeType` int ,`Result` int ,`SubInstanceID` bigint ,`WorkitemID` bigint ,`BPMState` int ,`CountSeed` int ,`assistTransactionID` int ,`MapCount` int ,`Slock` int , PRIMARY KEY(`InstanceID`,`InlineNodeID`,`NodeID`,`TransactionID`) )ENGINE=INNODB;
create index I_BPM_NodeRBInstanceID on `BPM_NodeRB`(`InstanceID`);
create table `BPM_StepInfo` (`InstanceID` bigint ,`OID` bigint ,`StepID` int ,`InlineNodeID` int ,`SourceNodeID` int ,`TargetNodeID` int ,`TransactionID` int ,`assistTransactionID` int ,`MapCount` int ,`Slock` int , PRIMARY KEY(`InstanceID`,`StepID`) )ENGINE=INNODB;
create index I_BPM_StepInfoInstanceID on `BPM_StepInfo`(`InstanceID`);
create table `BPM_StepInfoRB` (`InstanceID` bigint ,`OID` bigint ,`StepID` int ,`TransactionID` int ,`InlineNodeID` int ,`SourceNodeID` int ,`TargetNodeID` int ,`assistTransactionID` int ,`MapCount` int ,`Slock` int , PRIMARY KEY(`InstanceID`,`StepID`,`TransactionID`) )ENGINE=INNODB;
create index I_BPM_StepInfoRBInstanceID on `BPM_StepInfoRB`(`InstanceID`);
create table `BPM_Token` (`InstanceID` bigint ,`OID` bigint ,`TokenID` int ,`InlineNodeID` int ,`NodeID` int ,`TransactionID` int ,`assistTransactionID` int ,`MapCount` int ,`Slock` int , PRIMARY KEY(`InstanceID`,`TokenID`) )ENGINE=INNODB;
create index I_BPM_TokenInstanceID on `BPM_Token`(`InstanceID`);
create table `BPM_TokenRB` (`InstanceID` bigint ,`OID` bigint ,`TokenID` int ,`TransactionID` int ,`InlineNodeID` int ,`NodeID` int ,`assistTransactionID` int ,`MapCount` int ,`Slock` int , PRIMARY KEY(`InstanceID`,`TokenID`,`TransactionID`) )ENGINE=INNODB;
create index I_BPM_TokenRBInstanceID on `BPM_TokenRB`(`InstanceID`);
create table `BPM_WorkitemInfo` (`InstanceID` bigint ,`OID` bigint ,`WorkitemID` bigint ,`InlineNodeID` int ,`NodeID` int ,`NodeKey` varchar(255) ,`FormKey` varchar(255) ,`ParentWorkitemID` bigint ,`PWorkitemID4Transfer` bigint ,`TransitTo` int ,`backsiteWorkitemID` bigint ,`CountID` int ,`TransactionID` int ,`assistTransactionID` int ,`MapCount` int ,`Slock` int , PRIMARY KEY(`InstanceID`,`WorkitemID`) )ENGINE=INNODB;
create index I_PM_WorkitemInfoInstanceID on `BPM_WorkitemInfo`(`InstanceID`);
create table `BPM_WorkitemInfoRB` (`InstanceID` bigint ,`OID` bigint ,`WorkitemID` bigint ,`TransactionID` int ,`InlineNodeID` int ,`NodeID` int ,`NodeKey` varchar(255) ,`FormKey` varchar(255) ,`ParentWorkitemID` bigint ,`PWorkitemID4Transfer` bigint ,`TransitTo` int ,`backsiteWorkitemID` bigint ,`CountID` int ,`assistTransactionID` int ,`MapCount` int ,`Slock` int , PRIMARY KEY(`InstanceID`,`WorkitemID`,`TransactionID`) )ENGINE=INNODB;
create index I__WorkitemInfoRBInstanceID on `BPM_WorkitemInfoRB`(`InstanceID`);
create table `BPM_EventLog` (`InstanceID` bigint ,`OID` bigint ,`LogID` bigint ,`EventTime` datetime ,`ActionType` int ,`Name` varchar(255) ,`Soperator` bigint ,`Toperator` bigint ,`UserInfo` varchar(255) ,`MapCount` int ,`Slock` int , PRIMARY KEY(`InstanceID`,`LogID`) )ENGINE=INNODB;
create index I_BPM_EventLogInstanceID on `BPM_EventLog`(`InstanceID`);
create table `BPM_AuditRetLog` (`InstanceID` bigint ,`OID` bigint ,`WorkitemID` bigint ,`UserID` bigint ,`AuditResult` int ,`UserInfo` varchar(255) ,`NodeID` int ,`InlineNodeID` int ,`MapCount` int ,`Slock` int , PRIMARY KEY(`InstanceID`,`UserID`) )ENGINE=INNODB;
create index I_BPM_AuditRetLogInstanceID on `BPM_AuditRetLog`(`InstanceID`);
create table `BPM_TransitTo` (`InstanceID` bigint ,`OID` bigint ,`WorkitemID` bigint ,`NodeID` int ,`transitToWorkitem` bigint ,`MapCount` int ,`Slock` int , PRIMARY KEY(`WorkitemID`,`transitToWorkitem`) )ENGINE=INNODB;
create index I_BPM_TransitToInstanceID on `BPM_TransitTo`(`InstanceID`);
create table `BPM_Log` (`InstanceID` bigint ,`OID` bigint ,`LogID` int ,`LogIndex` int ,`InlineNodeID` int ,`NodeID` int ,`WorkitemID` bigint ,`WorkitemName` varchar(255) ,`WorkitemState` int ,`CreatTime` datetime ,`FinishTime` datetime ,`OperatorID` bigint ,`AuditResult` int ,`UserInfo` varchar(4000) ,`ResultInfo` varchar(255) ,`LaunchInfo` varchar(255) ,`TransactionID` int ,`assistTransactionID` int ,`MapCount` int ,`Slock` int , PRIMARY KEY(`InstanceID`,`LogID`) )ENGINE=INNODB;
create index I_BPM_LogInstanceID on `BPM_Log`(`InstanceID`);
create table `BPM_LogRB` (`InstanceID` bigint ,`OID` bigint ,`LogID` int ,`LogIndex` int ,`InlineNodeID` int ,`NodeID` int ,`WorkitemID` bigint ,`WorkitemName` varchar(255) ,`WorkitemState` int ,`CreatTime` datetime ,`FinishTime` datetime ,`OperatorID` bigint ,`AuditResult` int ,`UserInfo` varchar(4000) ,`ResultInfo` varchar(255) ,`LaunchInfo` varchar(255) ,`TransactionID` int ,`assistTransactionID` int ,`MapCount` int ,`Slock` int , PRIMARY KEY(`InstanceID`,`LogID`,`TransactionID`) )ENGINE=INNODB;
create index I_BPM_LogRBInstanceID on `BPM_LogRB`(`InstanceID`);
create table `BPM_TimerEvent` (`InstanceID` bigint ,`OID` bigint ,`InlineNodeID` int ,`NodeID` int ,`EventTime` datetime ,`TransactionID` int ,`AssistTransactionID` int ,`MapCount` int ,`Slock` int , PRIMARY KEY(`InstanceID`,`InlineNodeID`,`NodeID`) )ENGINE=INNODB;
create index I_BPM_TimerEventInstanceID on `BPM_TimerEvent`(`InstanceID`);
create table `BPM_TimerEventRB` (`InstanceID` bigint ,`OID` bigint ,`InlineNodeID` int ,`NodeID` int ,`EventTime` datetime ,`TransactionID` int ,`AssistTransactionID` int ,`MapCount` int ,`Slock` int , PRIMARY KEY(`InstanceID`,`InlineNodeID`,`NodeID`,`TransactionID`) )ENGINE=INNODB;
create index I_PM_TimerEventRBInstanceID on `BPM_TimerEventRB`(`InstanceID`);
create table `BPM_FocusInstance` (`InstanceID` bigint ,`OID` bigint ,`FocusInstanceID` bigint ,`InlineNodeID` int ,`NodeID` int ,`InstanceSyncState` int ,`TransactionID` int ,`AssistTransactionID` int ,`MapCount` int ,`Slock` int , PRIMARY KEY(`InstanceID`,`FocusInstanceID`) )ENGINE=INNODB;
create index I_M_FocusInstanceInstanceID on `BPM_FocusInstance`(`InstanceID`);
create table `BPM_FocusInstanceRB` (`InstanceID` bigint ,`OID` bigint ,`FocusInstanceID` bigint ,`InlineNodeID` int ,`NodeID` int ,`InstanceSyncState` int ,`TransactionID` int ,`AssistTransactionID` int ,`MapCount` int ,`Slock` int , PRIMARY KEY(`InstanceID`,`FocusInstanceID`,`TransactionID`) )ENGINE=INNODB;
create index I_FocusInstanceRBInstanceID on `BPM_FocusInstanceRB`(`InstanceID`);
create table `BPM_FocusedInstance` (`InstanceID` bigint ,`OID` bigint ,`FocusedInstanceID` bigint ,`SyncTriggerType` int ,`TransactionID` int ,`AssistTransactionID` int ,`MapCount` int ,`Slock` int , PRIMARY KEY(`InstanceID`,`FocusedInstanceID`) )ENGINE=INNODB;
create index I_FocusedInstanceInstanceID on `BPM_FocusedInstance`(`InstanceID`);
create table `BPM_FocusedInstanceRB` (`InstanceID` bigint ,`OID` bigint ,`FocusedInstanceID` bigint ,`SyncTriggerType` int ,`TransactionID` int ,`AssistTransactionID` int ,`MapCount` int ,`Slock` int , PRIMARY KEY(`InstanceID`,`FocusedInstanceID`,`TransactionID`) )ENGINE=INNODB;
create index I_cusedInstanceRBInstanceID on `BPM_FocusedInstanceRB`(`InstanceID`);
create table `BPM_Transaction` (`InstanceID` bigint ,`OID` bigint ,`TransactionID` int ,`WorkitemID` bigint ,`OperatorID` bigint ,`WorkitemRevoke` int ,`fieldKey` varchar(255) ,`fieldValue` varchar(255) ,`statusValue` int ,`MapCount` int ,`Slock` int , PRIMARY KEY(`InstanceID`,`TransactionID`) )ENGINE=INNODB;
create index I_BPM_TransactionInstanceID on `BPM_Transaction`(`InstanceID`);
create table `WF_Delegate` (`DelegateID` bigint ,`DelegateType` int ,`SrcOperatorID` int ,`TgtOperatorID` int ,`CreaterID` int ,`ObjectType` int ,`ObjectKey` varchar(255) ,`NodeKey` varchar(255) ,`StartTime` datetime ,`EndTime` datetime ,`AlwaysValid` int ,`Enable` int ,`AutoRetreat` int ,`MapCount` int ,`Slock` int , PRIMARY KEY(`DelegateID`) )ENGINE=INNODB;
create index I_WF_DelegateTime on `WF_Delegate`(`StartTime`,`AlwaysValid`,`EndTime`);
create table `BPM_Timer` (`InstanceID` bigint ,`OID` bigint ,`InlineNodeID` int ,`NodeID` int ,`ItemKey` varchar(255) ,`TriggerTime` datetime ,`MapCount` int ,`Slock` int , PRIMARY KEY(`InstanceID`,`InlineNodeID`,`NodeID`,`ItemKey`) )ENGINE=INNODB;
create index I_BPM_TimerInstanceID on `BPM_Timer`(`InstanceID`,`InlineNodeID`,`NodeID`);
create table `BPM_WorkitemTimer` (`InstanceID` bigint ,`OID` bigint ,`WorkitemID` bigint ,`ItemKey` varchar(255) ,`TriggerTime` datetime ,`MapCount` int ,`Slock` int , PRIMARY KEY(`WorkitemID`,`ItemKey`) )ENGINE=INNODB;
create index I_M_WorkitemTimerWorkitemID on `BPM_WorkitemTimer`(`WorkitemID`);
create table `BPM_StateRB` (`InstanceID` bigint ,`OID` bigint ,`InlineNodeID` int ,`NodeID` int ,`OperatorID` bigint ,`WorkitemID` bigint ,`OperationNodeID` int ,`TransactionID` int ,`AssistTransactionID` int ,`MapCount` int ,`Slock` int , PRIMARY KEY(`InstanceID`,`OperatorID`,`WorkitemID`,`OperationNodeID`,`TransactionID`) )ENGINE=INNODB;
create index I_BPM_StateRBInstanceID on `BPM_StateRB`(`InstanceID`);
create table `BPM_State` (`InstanceID` bigint ,`OID` bigint ,`InlineNodeID` int ,`NodeID` int ,`OperatorID` bigint ,`WorkitemID` bigint ,`OperationNodeID` int ,`TransactionID` int ,`AssistTransactionID` int ,`MapCount` int ,`Slock` int , PRIMARY KEY(`InstanceID`,`OperatorID`,`WorkitemID`,`OperationNodeID`) )ENGINE=INNODB;
create index I_BPM_StateInstanceID on `BPM_State`(`InstanceID`);
create table `BPM_Migration` (`OID` bigint ,`SOID` bigint ,`VERID` bigint ,`DVERID` bigint ,`POID` bigint ,`MapCount` int ,`Slock` int , PRIMARY KEY(`OID`) )ENGINE=INNODB;
create index I_BPM_Migration_SOID on `BPM_Migration`(`SOID`);
create table `BPM_DirectTransition` (`InstanceID` bigint ,`OID` bigint ,`InlineNodeID` int ,`NodeID` int ,`TgtNodeID` int ,`TransactionID` int ,`AssistTransactionID` int ,`MapCount` int ,`Slock` int , PRIMARY KEY(`InstanceID`,`InlineNodeID`,`NodeID`) )ENGINE=INNODB;
create table `BPM_DirectTransitionRB` (`InstanceID` bigint ,`OID` bigint ,`InlineNodeID` int ,`NodeID` int ,`TransactionID` int ,`TgtNodeID` int ,`AssistTransactionID` int ,`MapCount` int ,`Slock` int , PRIMARY KEY(`InstanceID`,`InlineNodeID`,`NodeID`,`TransactionID`) )ENGINE=INNODB;
create table `BPM_AttachmentInfo` (`InstanceID` bigint ,`OID` bigint ,`AttachmentKey` varchar(64) ,`AttachmentInfo` varchar(255) ,`AttachmentPara` varchar(255) ,`TransactionID` int ,`AssistTransactionID` int ,`MapCount` int ,`Slock` int , PRIMARY KEY(`InstanceID`,`AttachmentKey`) )ENGINE=INNODB;
create table `BPM_AttachmentInfoRB` (`InstanceID` bigint ,`OID` bigint ,`AttachmentKey` varchar(64) ,`AttachmentInfo` varchar(255) ,`AttachmentPara` varchar(255) ,`TransactionID` int ,`AssistTransactionID` int ,`MapCount` int ,`Slock` int , PRIMARY KEY(`InstanceID`,`AttachmentKey`,`TransactionID`) )ENGINE=INNODB;
create table `WF_Workitem` (`WorkitemID` bigint ,`OID` bigint ,`WorkitemName` varchar(255) ,`WorkitemState` int ,`CreatTime` datetime ,`FinishTime` datetime ,`OperatorID` bigint ,`SrcOperatorID` bigint ,`TransferType` int ,`AuditResult` int ,`UserInfo` varchar(4000) ,`ResultInfo` varchar(255) ,`InlineNodeID` int ,`NodeID` int ,`NodeKey` varchar(255) ,`NodeType` int ,`TransitTo` int ,`BacksiteWorkitemID` bigint ,`LaunchInfo` varchar(255) ,`TransactionID` int ,`AssistTransactionID` int ,`LogID` int ,`ParentAuditResult` int ,`MapCount` int ,`Slock` int , PRIMARY KEY(`WorkitemID`) )ENGINE=INNODB;
create table `WF_WorkitemRB` (`WorkitemID` bigint ,`OID` bigint ,`WorkitemName` varchar(255) ,`WorkitemState` int ,`CreatTime` datetime ,`FinishTime` datetime ,`OperatorID` bigint ,`SrcOperatorID` bigint ,`TransferType` int ,`AuditResult` int ,`UserInfo` varchar(4000) ,`ResultInfo` varchar(255) ,`InlineNodeID` int ,`NodeID` int ,`NodeType` int ,`TransitTo` int ,`BacksiteWorkitemID` bigint ,`LaunchInfo` varchar(255) ,`TransactionID` int ,`AssistTransactionID` int ,`LogID` int ,`ParentAuditResult` int ,`MapCount` int ,`Slock` int , PRIMARY KEY(`WorkitemID`,`TransactionID`) )ENGINE=INNODB;
create index I_WF_WorkitemRBWorkitemID on `WF_WorkitemRB`(`WorkitemID`);
create table `WF_ParticipatorRB` (`WorkitemID` bigint ,`OperatorID` bigint ,`OID` bigint ,`SrcOperatorID` bigint ,`DelegateID` bigint ,`TransactionID` int ,`AssistTransactionID` int ,`Visible` int ,`MapCount` int ,`Slock` int , PRIMARY KEY(`WorkitemID`,`OperatorID`,`TransactionID`) )ENGINE=INNODB;
create index I__ParticipatorRBWorkitemID on `WF_ParticipatorRB`(`WorkitemID`);
create table `WF_Participator` (`WorkitemID` bigint ,`OperatorID` bigint ,`OID` bigint ,`SrcOperatorID` bigint ,`DelegateID` bigint ,`TransactionID` int ,`AssistTransactionID` int ,`Visible` int ,`MapCount` int ,`Slock` int , PRIMARY KEY(`WorkitemID`,`OperatorID`) )ENGINE=INNODB;
create index I_WF_ParticipatorWorkitemID on `WF_Participator`(`WorkitemID`);
create table `SYS_IDSeed` (`SeedID` int ,`SeedMark` bigint ,`Description` varchar(255) ,`CreateTime` date ,`Slock` int , PRIMARY KEY(`SeedID`) )ENGINE=INNODB;
create table `SYS_Sequence` (`SequenceID` int ,`NoPrefix` varchar(100) ,`Slock` int , PRIMARY KEY(`NoPrefix`) )ENGINE=INNODB;
create table `USER_Attachment` (`OID` bigint ,`SOID` bigint ,`UploadTime` datetime ,`UploadOperator` bigint ,`Path` varchar(150) ,`Name` varchar(150) ,`FileSize` bigint ,`UploadSize` bigint ,`FileMD5` varchar(150) ,`Client` varchar(150) ,`Server` varchar(150) ,`Schedule` double ,`UploadStatus` varchar(20) ,`Slock` int , PRIMARY KEY(`OID`) )ENGINE=INNODB;
create table `SYS_RoleEntryRights` (`RoleID` bigint ,`EntryKey` varchar(512) ,`HasRights` int ,`Slock` int  )ENGINE=INNODB;
create index I_RoleEntryRightsRoleID on `SYS_RoleEntryRights`(`RoleID`);
create table `SYS_WorkingCalendar` (`OID` bigint ,`DateOfYear` varchar(255) ,`ClusterID` bigint ,`isWorkDay` int ,`Slock` int , PRIMARY KEY(`OID`) )ENGINE=INNODB;
create table `SYS_WorkingTime` (`OID` bigint ,`WorkingTime` varchar(255) ,`ClusterID` bigint ,`Slock` int , PRIMARY KEY(`OID`) )ENGINE=INNODB;
create table `SYS_OperatorEntryRights` (`OperatorID` bigint ,`EntryKey` varchar(512) ,`HasRights` int ,`Slock` int  )ENGINE=INNODB;
create index I_atorEntryRightsOperatorID on `SYS_OperatorEntryRights`(`OperatorID`);
create table `SYS_RoleOptRights` (`RoleID` bigint ,`FormKey` varchar(64) ,`OptKey` varchar(64) ,`HasRights` int ,`Slock` int , PRIMARY KEY(`RoleID`,`FormKey`,`OptKey`) )ENGINE=INNODB;
create table `SYS_OperatorOptRights` (`OperatorID` bigint ,`FormKey` varchar(64) ,`OptKey` varchar(64) ,`HasRights` int ,`Slock` int , PRIMARY KEY(`OperatorID`,`FormKey`,`OptKey`) )ENGINE=INNODB;
create table `SYS_RoleFieldRights` (`RoleID` bigint ,`FormKey` varchar(64) ,`FieldKey` varchar(64) ,`Visible` int ,`Enable` int ,`HasRights` int ,`Slock` int , PRIMARY KEY(`RoleID`,`FormKey`,`FieldKey`) )ENGINE=INNODB;
create table `SYS_OperatorFieldRights` (`OperatorID` bigint ,`FormKey` varchar(64) ,`FieldKey` varchar(64) ,`Visible` int ,`Enable` int ,`HasRights` int ,`Slock` int , PRIMARY KEY(`OperatorID`,`FormKey`,`FieldKey`) )ENGINE=INNODB;
create table `SYS_RoleFormRights` (`RoleID` bigint ,`FormKey` varchar(64) ,`HasRights` int ,`Slock` int  )ENGINE=INNODB;
create table `SYS_OperatorFormRights` (`OperatorID` bigint ,`FormKey` varchar(64) ,`HasRights` int ,`Slock` int  )ENGINE=INNODB;
create table `SYS_Para` (`ParaKey` varchar(50) ,`ParaValue` varchar(1024) ,`ParaVer` int ,`Slock` int  )ENGINE=INNODB;
create table `SYS_SessionLog` (`OID` bigint ,`ClientID` varchar(50) ,`Operator` bigint ,`Happentime` datetime ,`Flag` int ,`IP` varchar(50) ,`Session_Mode` int ,`Host` varchar(50) ,`Port` varchar(50) ,`Notes` varchar(100) ,`Slock` int , PRIMARY KEY(`OID`) )ENGINE=INNODB;
create table `SYS_OperatorCertificate` (`OID` bigint ,`OperatorID` bigint ,`Fingerprint` varchar(1024) ,`ClientName` varchar(255) ,`Alias` varchar(100) ,`PublicKey` varchar(1024) ,`PrivateKey` varchar(1024) ,`StartTime` datetime ,`EndTime` datetime ,`UpdateTime` datetime ,`Flag` int ,`Slock` int , PRIMARY KEY(`OID`) )ENGINE=INNODB;
create table `SYS_OperateFingerprintCheck` (`OID` bigint ,`OperatorID` bigint ,`MetaKey` varchar(128) ,`CmdKey` varchar(100) ,`Slock` int , PRIMARY KEY(`OID`) )ENGINE=INNODB;
create table `SYS_RelationDataObject` (`OperatorID` bigint ,`OperationType` int ,`DataObjectKey` varchar(255) ,`Slock` int  )ENGINE=INNODB;
create table `SYS_RelationScript` (`OperatorID` bigint ,`FormKey` varchar(255) ,`ScriptName` varchar(255) ,`Slock` int  )ENGINE=INNODB;
create table `SYS_RelationService` (`OperatorID` bigint ,`ServiceName` varchar(255) ,`Slock` int  )ENGINE=INNODB;
create table `SYS_RoleDataObjectRights` (`RoleID` bigint ,`DataObjectKey` varchar(255) ,`NewOpt` int ,`DeleteOpt` int ,`SaveOpt` int ,`LoadOpt` int ,`Slock` int  )ENGINE=INNODB;
create table `SYS_OperatorDataObjectRights` (`OperatorID` bigint ,`DataObjectKey` varchar(255) ,`NewOpt` int ,`DeleteOpt` int ,`SaveOpt` int ,`LoadOpt` int ,`Slock` int  )ENGINE=INNODB;
create table `SYS_RoleCustomOptRights` (`RoleID` bigint ,`GroupKey` varchar(255) ,`OptKey` varchar(255) ,`HasRights` int ,`Slock` int  )ENGINE=INNODB;
create table `SYS_OperatorCustomOptRights` (`OperatorID` bigint ,`GroupKey` varchar(255) ,`OptKey` varchar(255) ,`HasRights` int ,`Slock` int  )ENGINE=INNODB;
create table `SYS_RoleNamedSqlRights` (`RoleID` bigint ,`Name` varchar(255) ,`HasRights` int ,`Slock` int  )ENGINE=INNODB;
create table `SYS_OperatorNamedSqlRights` (`OperatorID` bigint ,`Name` varchar(255) ,`HasRights` int ,`Slock` int  )ENGINE=INNODB;
create table `SYS_RoleExServiceRights` (`RoleID` bigint ,`Name` varchar(255) ,`HasRights` int ,`Slock` int  )ENGINE=INNODB;
create table `SYS_OperatorExServiceRights` (`OperatorID` bigint ,`Name` varchar(255) ,`HasRights` int ,`Slock` int  )ENGINE=INNODB;
create table `QRTZ_JOB_DETAILS` (`SCHED_NAME` varchar(120) ,`JOB_NAME` varchar(200) ,`JOB_GROUP` varchar(200) ,`DESCRIPTION` varchar(250) ,`JOB_CLASS_NAME` varchar(250) ,`IS_DURABLE` varchar(1) ,`IS_NONCONCURRENT` varchar(1) ,`IS_UPDATE_DATA` varchar(1) ,`REQUESTS_RECOVERY` varchar(1) ,`JOB_DATA` long varbinary ,`Slock` int , PRIMARY KEY(`SCHED_NAME`,`JOB_NAME`,`JOB_GROUP`) )ENGINE=INNODB;
create table `QRTZ_TRIGGERS` (`SCHED_NAME` varchar(120) ,`TRIGGER_NAME` varchar(200) ,`TRIGGER_GROUP` varchar(200) ,`JOB_NAME` varchar(200) ,`JOB_GROUP` varchar(200) ,`DESCRIPTION` varchar(250) ,`NEXT_FIRE_TIME` bigint ,`PREV_FIRE_TIME` bigint ,`PRIORITY` int ,`TRIGGER_STATE` varchar(16) ,`TRIGGER_TYPE` varchar(8) ,`START_TIME` bigint ,`END_TIME` bigint ,`CALENDAR_NAME` varchar(200) ,`MISFIRE_INSTR` int ,`JOB_DATA` long varbinary ,`Slock` int , PRIMARY KEY(`SCHED_NAME`,`TRIGGER_NAME`,`TRIGGER_GROUP`) )ENGINE=INNODB;
create table `QRTZ_SIMPLE_TRIGGERS` (`SCHED_NAME` varchar(120) ,`TRIGGER_NAME` varchar(200) ,`TRIGGER_GROUP` varchar(200) ,`REPEAT_COUNT` bigint ,`REPEAT_INTERVAL` bigint ,`TIMES_TRIGGERED` bigint ,`Slock` int , PRIMARY KEY(`SCHED_NAME`,`TRIGGER_NAME`,`TRIGGER_GROUP`) )ENGINE=INNODB;
create table `QRTZ_CRON_TRIGGERS` (`SCHED_NAME` varchar(120) ,`TRIGGER_NAME` varchar(200) ,`TRIGGER_GROUP` varchar(200) ,`CRON_EXPRESSION` varchar(200) ,`TIME_ZONE_ID` varchar(80) ,`Slock` int , PRIMARY KEY(`SCHED_NAME`,`TRIGGER_NAME`,`TRIGGER_GROUP`) )ENGINE=INNODB;
create table `QRTZ_SIMPROP_TRIGGERS` (`SCHED_NAME` varchar(120) ,`TRIGGER_NAME` varchar(200) ,`TRIGGER_GROUP` varchar(200) ,`STR_PROP_1` varchar(512) ,`STR_PROP_2` varchar(512) ,`STR_PROP_3` varchar(512) ,`INT_PROP_1` int ,`INT_PROP_2` int ,`LONG_PROP_1` bigint ,`LONG_PROP_2` bigint ,`DEC_PROP_1` numeric(13,4) ,`DEC_PROP_2` numeric(13,4) ,`BOOL_PROP_1` varchar(1) ,`BOOL_PROP_2` varchar(1) ,`Slock` int , PRIMARY KEY(`SCHED_NAME`,`TRIGGER_NAME`,`TRIGGER_GROUP`) )ENGINE=INNODB;
create table `QRTZ_BLOB_TRIGGERS` (`SCHED_NAME` varchar(120) ,`TRIGGER_NAME` varchar(200) ,`TRIGGER_GROUP` varchar(200) ,`BLOB_DATA` long varbinary ,`Slock` int , PRIMARY KEY(`SCHED_NAME`,`TRIGGER_NAME`,`TRIGGER_GROUP`) )ENGINE=INNODB;
create table `QRTZ_CALENDARS` (`SCHED_NAME` varchar(120) ,`CALENDAR_NAME` varchar(200) ,`CALENDAR` long varbinary ,`Slock` int , PRIMARY KEY(`SCHED_NAME`,`CALENDAR_NAME`) )ENGINE=INNODB;
create table `QRTZ_PAUSED_TRIGGER_GRPS` (`SCHED_NAME` varchar(120) ,`TRIGGER_GROUP` varchar(200) ,`Slock` int , PRIMARY KEY(`SCHED_NAME`,`TRIGGER_GROUP`) )ENGINE=INNODB;
create table `QRTZ_FIRED_TRIGGERS` (`SCHED_NAME` varchar(120) ,`ENTRY_ID` varchar(95) ,`TRIGGER_NAME` varchar(200) ,`TRIGGER_GROUP` varchar(200) ,`INSTANCE_NAME` varchar(200) ,`FIRED_TIME` bigint ,`SCHED_TIME` bigint ,`PRIORITY` int ,`STATE` varchar(16) ,`JOB_NAME` varchar(200) ,`JOB_GROUP` varchar(200) ,`IS_NONCONCURRENT` varchar(1) ,`REQUESTS_RECOVERY` varchar(1) ,`Slock` int , PRIMARY KEY(`SCHED_NAME`,`ENTRY_ID`) )ENGINE=INNODB;
create table `QRTZ_SCHEDULER_STATE` (`SCHED_NAME` varchar(120) ,`INSTANCE_NAME` varchar(200) ,`LAST_CHECKIN_TIME` bigint ,`CHECKIN_INTERVAL` bigint ,`Slock` int , PRIMARY KEY(`SCHED_NAME`,`INSTANCE_NAME`) )ENGINE=INNODB;
create table `QRTZ_LOCKS` (`SCHED_NAME` varchar(120) ,`LOCK_NAME` varchar(40) ,`Slock` int , PRIMARY KEY(`SCHED_NAME`,`LOCK_NAME`) )ENGINE=INNODB;
D:\shanghaiboke\培训\yigo\wuliao||yigotest||Fri Sep 28 08:52:32 CST 2018
create table `InventoryList` (`OID` bigint ,`SOID` bigint ,`POID` bigint ,`VERID` int ,`DVERID` int ,`Warehouse` bigint ,`Material` bigint ,`Amount` numeric(16,2) ,`MapCount` int ,`Slock` int , PRIMARY KEY(`OID`) )ENGINE=INNODB;
create unique index I_InventoryList_MIGR on `InventoryList`(`Warehouse`,`Material`);
create table `SYS_Operator` (`OID` bigint ,`POID` bigint ,`SOID` bigint ,`VERID` int ,`DVERID` int ,`Status` int ,`Enable` int ,`NodeType` int ,`ParentID` bigint ,`TLeft` int ,`TRight` int ,`Code` varchar(50) ,`Name` varchar(50) ,`Password` varchar(512) ,`MapCount` int ,`Slock` int , PRIMARY KEY(`OID`) )ENGINE=INNODB;
create index I_SYS_Operator_SOID on `SYS_Operator`(`SOID`);
create table `SYS_OperatorRole` (`OID` bigint ,`POID` bigint ,`SOID` bigint ,`VERID` int ,`DVERID` int ,`Sequence` int ,`Role` bigint ,`MapCount` int ,`Slock` int , PRIMARY KEY(`OID`) )ENGINE=INNODB;
create index I_YS_OperatorRole_SOID on `SYS_OperatorRole`(`SOID`);
create table `SYS_Operator_RR` (`RoleID` bigint ,`FormKey` varchar(128) ,`DictID` bigint ,`HasRights` int , PRIMARY KEY(`RoleID`,`DictID`) )ENGINE=INNODB;
create table `SYS_Operator_OR` (`OperatorID` bigint ,`FormKey` varchar(128) ,`DictID` bigint ,`HasRights` int , PRIMARY KEY(`OperatorID`,`DictID`) )ENGINE=INNODB;
create table `CUST_StaticObj` (`OID` bigint ,`POID` bigint ,`SOID` bigint ,`VERID` int ,`DVERID` int ,`MapCount` int ,`Slock` int , PRIMARY KEY(`OID`) )ENGINE=INNODB;
create unique index I_CUST_StaticObj_SOID on `CUST_StaticObj`(`SOID`);
create table `CUST_Para` (`OID` bigint ,`POID` bigint ,`SOID` bigint ,`VERID` int ,`DVERID` int ,`ParaKey` varchar(64) ,`ParentKey` varchar(64) ,`ParaValue` bigint ,`NodeType` int ,`MapCount` int ,`Slock` int , PRIMARY KEY(`OID`) )ENGINE=INNODB;
create index I_CUST_Para_SOID on `CUST_Para`(`SOID`);
create table `SYS_Role` (`OID` bigint ,`POID` bigint ,`SOID` bigint ,`VERID` int ,`DVERID` int ,`Status` int ,`Enable` int ,`NodeType` int ,`ParentID` bigint ,`TLeft` int ,`TRight` int ,`Code` varchar(50) ,`Name` varchar(50) ,`IsAdmin` int ,`MapCount` int ,`Slock` int , PRIMARY KEY(`OID`) )ENGINE=INNODB;
create index I_SYS_Role_SOID on `SYS_Role`(`SOID`);
create table `SYS_Role_RR` (`RoleID` bigint ,`FormKey` varchar(128) ,`DictID` bigint ,`HasRights` int , PRIMARY KEY(`RoleID`,`DictID`) )ENGINE=INNODB;
create table `SYS_Role_OR` (`OperatorID` bigint ,`FormKey` varchar(128) ,`DictID` bigint ,`HasRights` int , PRIMARY KEY(`OperatorID`,`DictID`) )ENGINE=INNODB;
create table `CaigoudanHead` (`OID` bigint ,`SOID` bigint ,`POID` bigint ,`VERID` int ,`DVERID` int ,`NO` varchar(255) ,`Status` int ,`BillDate` datetime ,`Creator` bigint ,`CreateTime` datetime ,`Modifier` bigint ,`ModifyTime` datetime ,`InstanceID` bigint ,`TotalAmount` numeric(16,2) ,`MapCount` int ,`Slock` int , PRIMARY KEY(`OID`) )ENGINE=INNODB;
create unique index I_CaigoudanHead_SOID on `CaigoudanHead`(`SOID`);
create table `CaigoudanDetail` (`OID` bigint ,`POID` bigint ,`SOID` bigint ,`VERID` int ,`DVERID` int ,`SEQUENCE` int ,`Warehouse` bigint ,`Material` bigint ,`Amount` numeric(16,2) ,`Unit` varchar(255) ,`Price` numeric(16,2) ,`TotalPrice` numeric(16,2) ,`RukuAmount` numeric(16,2) ,`MapCount` int ,`Slock` int , PRIMARY KEY(`OID`) )ENGINE=INNODB;
create index I_CaigoudanDetail_SOID on `CaigoudanDetail`(`SOID`);
create table `Caigoudan1Head` (`OID` bigint ,`SOID` bigint ,`POID` bigint ,`VERID` int ,`DVERID` int ,`NO` varchar(255) ,`Status` int ,`BillDate` datetime ,`Creator` bigint ,`CreateTime` datetime ,`Modifier` bigint ,`ModifyTime` datetime ,`InstanceID` bigint ,`MapCount` int ,`Slock` int , PRIMARY KEY(`OID`) )ENGINE=INNODB;
create unique index I_Caigoudan1Head_SOID on `Caigoudan1Head`(`SOID`);
create table `Caigoudan1Detail` (`OID` bigint ,`POID` bigint ,`SOID` bigint ,`VERID` int ,`DVERID` int ,`SEQUENCE` int ,`Material` bigint ,`Amount` numeric(16,2) ,`StockInAmount` numeric(16,2) ,`MapCount` int ,`Slock` int , PRIMARY KEY(`OID`) )ENGINE=INNODB;
create index I_aigoudan1Detail_SOID on `Caigoudan1Detail`(`SOID`);
create table `ChukudanHead` (`OID` bigint ,`SOID` bigint ,`POID` bigint ,`VERID` int ,`DVERID` int ,`NO` varchar(255) ,`Status` int ,`BillDate` datetime ,`Creator` bigint ,`CreateTime` datetime ,`Modifier` bigint ,`ModifyTime` datetime ,`InstanceID` bigint ,`MapCount` int ,`Slock` int , PRIMARY KEY(`OID`) )ENGINE=INNODB;
create unique index I_ChukudanHead_SOID on `ChukudanHead`(`SOID`);
create table `ChukudanDetail` (`OID` bigint ,`POID` bigint ,`SOID` bigint ,`VERID` int ,`DVERID` int ,`SEQUENCE` int ,`Warehouse` bigint ,`Mateial` bigint ,`Amount` numeric(16,2) ,`MapCount` int ,`Slock` int , PRIMARY KEY(`OID`) )ENGINE=INNODB;
create index I_ChukudanDetail_SOID on `ChukudanDetail`(`SOID`);
create table `city` (`OID` bigint ,`SOID` bigint ,`POID` bigint ,`VERID` int ,`DVERID` int ,`Code` varchar(255) ,`Name` varchar(255) ,`NodeType` int ,`ParentID` bigint ,`Status` int ,`Enable` int ,`TLeft` int ,`TRight` int ,`ProvinceID` bigint ,`MapCount` int ,`Slock` int , PRIMARY KEY(`OID`) )ENGINE=INNODB;
create index I_city_SOID on `city`(`SOID`);
create table `city_RR` (`RoleID` bigint ,`FormKey` varchar(128) ,`DictID` bigint ,`HasRights` int , PRIMARY KEY(`RoleID`,`DictID`) )ENGINE=INNODB;
create table `city_OR` (`OperatorID` bigint ,`FormKey` varchar(128) ,`DictID` bigint ,`HasRights` int , PRIMARY KEY(`OperatorID`,`DictID`) )ENGINE=INNODB;
create table `dict` (`OID` bigint ,`SOID` bigint ,`POID` bigint ,`VERID` int ,`DVERID` int ,`Code` varchar(255) ,`Name` varchar(255) ,`NodeType` int ,`ParentID` bigint ,`Status` int ,`Enable` int ,`TLeft` int ,`TRight` int ,`MapCount` int ,`Slock` int , PRIMARY KEY(`OID`) )ENGINE=INNODB;
create index I_dict_SOID on `dict`(`SOID`);
create table `dict_RR` (`RoleID` bigint ,`FormKey` varchar(128) ,`DictID` bigint ,`HasRights` int , PRIMARY KEY(`RoleID`,`DictID`) )ENGINE=INNODB;
create table `dict_OR` (`OperatorID` bigint ,`FormKey` varchar(128) ,`DictID` bigint ,`HasRights` int , PRIMARY KEY(`OperatorID`,`DictID`) )ENGINE=INNODB;
create table `leaveHead` (`OID` bigint ,`SOID` bigint ,`POID` bigint ,`VERID` int ,`DVERID` int ,`NO` varchar(255) ,`Status` int ,`BillDate` datetime ,`Creator` bigint ,`CreateTime` datetime ,`Modifier` bigint ,`ModifyTime` datetime ,`InstanceID` bigint ,`Number` varchar(255) ,`Name` varchar(255) ,`StartDate` datetime ,`EndDate` datetime ,`Shuyou` varchar(255) ,`MapCount` int ,`Slock` int , PRIMARY KEY(`OID`) )ENGINE=INNODB;
create unique index I_leaveHead_SOID on `leaveHead`(`SOID`);
create table `leaveDetail` (`OID` bigint ,`POID` bigint ,`SOID` bigint ,`VERID` int ,`DVERID` int ,`SEQUENCE` int ,`MapCount` int ,`Slock` int , PRIMARY KEY(`OID`) )ENGINE=INNODB;
create index I_leaveDetail_SOID on `leaveDetail`(`SOID`);
create table `lianshidict` (`OID` bigint ,`SOID` bigint ,`POID` bigint ,`VERID` int ,`DVERID` int ,`Code` varchar(255) ,`Name` varchar(255) ,`Status` int ,`Enable` int ,`NodeType` int ,`ParentID` bigint ,`TLeft` int ,`TRight` int ,`MapCount` int ,`Slock` int , PRIMARY KEY(`OID`) )ENGINE=INNODB;
create index I_lianshidict_SOID on `lianshidict`(`SOID`);
create table `lianshidict_RR` (`RoleID` bigint ,`FormKey` varchar(128) ,`DictID` bigint ,`HasRights` int , PRIMARY KEY(`RoleID`,`DictID`) )ENGINE=INNODB;
create table `lianshidict_OR` (`OperatorID` bigint ,`FormKey` varchar(128) ,`DictID` bigint ,`HasRights` int , PRIMARY KEY(`OperatorID`,`DictID`) )ENGINE=INNODB;
create table `MaterialDict` (`OID` bigint ,`SOID` bigint ,`POID` bigint ,`VERID` int ,`DVERID` int ,`Code` varchar(255) ,`Name` varchar(255) ,`NodeType` int ,`ParentID` bigint ,`Status` int ,`Enable` int ,`TLeft` int ,`TRight` int ,`Unit` varchar(255) ,`Price` numeric(16,2) ,`MapCount` int ,`Slock` int , PRIMARY KEY(`OID`) )ENGINE=INNODB;
create index I_MaterialDict_SOID on `MaterialDict`(`SOID`);
create table `MaterialDict_RR` (`RoleID` bigint ,`FormKey` varchar(128) ,`DictID` bigint ,`HasRights` int , PRIMARY KEY(`RoleID`,`DictID`) )ENGINE=INNODB;
create table `MaterialDict_OR` (`OperatorID` bigint ,`FormKey` varchar(128) ,`DictID` bigint ,`HasRights` int , PRIMARY KEY(`OperatorID`,`DictID`) )ENGINE=INNODB;
create table `Province` (`OID` bigint ,`SOID` bigint ,`POID` bigint ,`VERID` int ,`DVERID` int ,`Code` varchar(255) ,`Name` varchar(255) ,`NodeType` int ,`ParentID` bigint ,`Status` int ,`Enable` int ,`TLeft` int ,`TRight` int ,`MapCount` int ,`Slock` int , PRIMARY KEY(`OID`) )ENGINE=INNODB;
create index I_Province_SOID on `Province`(`SOID`);
create table `Province_RR` (`RoleID` bigint ,`FormKey` varchar(128) ,`DictID` bigint ,`HasRights` int , PRIMARY KEY(`RoleID`,`DictID`) )ENGINE=INNODB;
create table `Province_OR` (`OperatorID` bigint ,`FormKey` varchar(128) ,`DictID` bigint ,`HasRights` int , PRIMARY KEY(`OperatorID`,`DictID`) )ENGINE=INNODB;
create table `provincecityHead` (`OID` bigint ,`SOID` bigint ,`POID` bigint ,`VERID` int ,`DVERID` int ,`NO` varchar(255) ,`Status` int ,`BillDate` datetime ,`Creator` bigint ,`CreateTime` datetime ,`Modifier` bigint ,`ModifyTime` datetime ,`InstanceID` bigint ,`Province` bigint ,`City` bigint ,`MapCount` int ,`Slock` int , PRIMARY KEY(`OID`) )ENGINE=INNODB;
create unique index I_rovincecityHead_SOID on `provincecityHead`(`SOID`);
create table `provincecityDetail` (`OID` bigint ,`POID` bigint ,`SOID` bigint ,`VERID` int ,`DVERID` int ,`SEQUENCE` int ,`MapCount` int ,`Slock` int , PRIMARY KEY(`OID`) )ENGINE=INNODB;
create index I_vincecityDetail_SOID on `provincecityDetail`(`SOID`);
create table `PurchaseDataDetail` (`OID` bigint ,`POID` bigint ,`SOID` bigint ,`VERID` int ,`DVERID` int ,`SEQUENCE` int ,`Warehouse` bigint ,`Material` bigint ,`Amount` numeric(16,2) ,`NotStockInAmount` numeric(16,2) ,`MapCount` int ,`Slock` int , PRIMARY KEY(`OID`) )ENGINE=INNODB;
create unique index I_chaseDataDetail_SOID on `PurchaseDataDetail`(`SOID`);
create table `PurchaseData1Detail` (`OID` bigint ,`POID` bigint ,`SOID` bigint ,`VERID` int ,`DVERID` int ,`SEQUENCE` int ,`Material` bigint ,`Amount` numeric(16,2) ,`NotInAmount` numeric(16,2) ,`MapCount` int ,`Slock` int , PRIMARY KEY(`OID`) )ENGINE=INNODB;
create unique index I_haseData1Detail_SOID on `PurchaseData1Detail`(`SOID`);
create table `qingjiaHead` (`OID` bigint ,`SOID` bigint ,`POID` bigint ,`VERID` int ,`DVERID` int ,`Status` int ,`BillDate` datetime ,`Creator` bigint ,`CreateTime` datetime ,`Modifier` bigint ,`ModifyTime` datetime ,`InstanceID` bigint ,`EmpName` varchar(255) ,`StatusType` varchar(255) ,`StartDate` datetime ,`EndDate` datetime ,`Days` varchar(255) ,`Shuzhi1` numeric(16,2) ,`Shuzhi2` numeric(16,2) ,`Shuzhi3` numeric(16,2) ,`Lianshidict` bigint ,`MapCount` int ,`Slock` int , PRIMARY KEY(`OID`) )ENGINE=INNODB;
create unique index I_qingjiaHead_SOID on `qingjiaHead`(`SOID`);
create table `qingjiaDetail` (`OID` bigint ,`POID` bigint ,`SOID` bigint ,`VERID` int ,`DVERID` int ,`SEQUENCE` int ,`MapCount` int ,`Slock` int , PRIMARY KEY(`OID`) )ENGINE=INNODB;
create index I_qingjiaDetail_SOID on `qingjiaDetail`(`SOID`);
create table `test` (`OID` bigint ,`SOID` bigint ,`POID` bigint ,`VERID` int ,`DVERID` int ,`Material` bigint ,`Amount` numeric(16,2) ,`UserType` bigint ,`SumExpand` numeric(16,2) ,`City` varchar(255) ,`MapCount` int ,`Slock` int , PRIMARY KEY(`OID`) )ENGINE=INNODB;
create index I_test_SOID on `test`(`SOID`);
create table `qiuzhixinxiHead` (`OID` bigint ,`SOID` bigint ,`POID` bigint ,`VERID` int ,`DVERID` int ,`NO` varchar(255) ,`Status` int ,`BillDate` datetime ,`Creator` bigint ,`CreateTime` datetime ,`Modifier` bigint ,`ModifyTime` datetime ,`InstanceID` bigint ,`Name` varchar(255) ,`Dict2` bigint ,`Province` bigint ,`City` bigint ,`Zhusuo` varchar(255) ,`Phone` bigint ,`Xiala` varchar(255) ,`Zhuanye` varchar(4000) ,`Beizhu` varchar(4000) ,`Jiaoyu` varchar(4000) ,`Gongzuo` varchar(4000) ,`Java` int ,`C` int ,`Sql` int ,`Net` int ,`MapCount` int ,`Slock` int , PRIMARY KEY(`OID`) )ENGINE=INNODB;
create unique index I_qiuzhixinxiHead_SOID on `qiuzhixinxiHead`(`SOID`);
create table `qiuzhixinxiDetail` (`OID` bigint ,`POID` bigint ,`SOID` bigint ,`VERID` int ,`DVERID` int ,`SEQUENCE` int ,`MapCount` int ,`Slock` int , PRIMARY KEY(`OID`) )ENGINE=INNODB;
create index I_uzhixinxiDetail_SOID on `qiuzhixinxiDetail`(`SOID`);
create table `RukudanHead` (`OID` bigint ,`SOID` bigint ,`POID` bigint ,`VERID` int ,`DVERID` int ,`NO` varchar(255) ,`Status` int ,`BillDate` datetime ,`Creator` bigint ,`CreateTime` datetime ,`Modifier` bigint ,`ModifyTime` datetime ,`InstanceID` bigint ,`MapCount` int ,`Slock` int , PRIMARY KEY(`OID`) )ENGINE=INNODB;
create unique index I_RukudanHead_SOID on `RukudanHead`(`SOID`);
create table `RukudanDetail` (`OID` bigint ,`POID` bigint ,`SOID` bigint ,`VERID` int ,`DVERID` int ,`SEQUENCE` int ,`Material` bigint ,`Uint` varchar(255) ,`Price` numeric(16,2) ,`Amount` numeric(16,2) ,`TotalPrice` numeric(16,2) ,`Hege` varchar(255) ,`MapCount` int ,`Slock` int , PRIMARY KEY(`OID`) )ENGINE=INNODB;
create index I_RukudanDetail_SOID on `RukudanDetail`(`SOID`);
create table `Rukudan1Head` (`OID` bigint ,`SOID` bigint ,`POID` bigint ,`VERID` int ,`DVERID` int ,`NO` varchar(255) ,`Status` int ,`BillDate` datetime ,`Creator` bigint ,`CreateTime` datetime ,`Modifier` bigint ,`ModifyTime` datetime ,`InstanceID` bigint ,`MapCount` int ,`Slock` int , PRIMARY KEY(`OID`) )ENGINE=INNODB;
create unique index I_Rukudan1Head_SOID on `Rukudan1Head`(`SOID`);
create table `Rukudan1Detail` (`OID` bigint ,`POID` bigint ,`SOID` bigint ,`VERID` int ,`DVERID` int ,`SEQUENCE` int ,`Material` bigint ,`Amount` numeric(16,2) ,`MapKey` varchar(255) ,`SrcOID` bigint ,`SrcSOID` bigint ,`MapCount` int ,`Slock` int , PRIMARY KEY(`OID`) )ENGINE=INNODB;
create index I_Rukudan1Detail_SOID on `Rukudan1Detail`(`SOID`);
create index I_Rukudan1Detail_SRCO on `Rukudan1Detail`(`SrcOID`);
create index I_Rukudan1Detail_SRCS on `Rukudan1Detail`(`SrcSOID`);
create table `Rukudan2Head` (`OID` bigint ,`SOID` bigint ,`POID` bigint ,`VERID` int ,`DVERID` int ,`NO` varchar(255) ,`Status` int ,`BillDate` datetime ,`Creator` bigint ,`CreateTime` datetime ,`Modifier` bigint ,`ModifyTime` datetime ,`InstanceID` bigint ,`MapCount` int ,`Slock` int , PRIMARY KEY(`OID`) )ENGINE=INNODB;
create unique index I_Rukudan2Head_SOID on `Rukudan2Head`(`SOID`);
create table `Rukudan2Detail` (`OID` bigint ,`POID` bigint ,`SOID` bigint ,`VERID` int ,`DVERID` int ,`SEQUENCE` int ,`Warehouse` bigint ,`Material` bigint ,`Amount` numeric(16,2) ,`MapCount` int ,`Slock` int , PRIMARY KEY(`OID`) )ENGINE=INNODB;
create index I_Rukudan2Detail_SOID on `Rukudan2Detail`(`SOID`);
create table `Rukudan3Head` (`OID` bigint ,`SOID` bigint ,`POID` bigint ,`VERID` int ,`DVERID` int ,`NO` varchar(255) ,`Status` int ,`BillDate` datetime ,`Creator` bigint ,`CreateTime` datetime ,`Modifier` bigint ,`ModifyTime` datetime ,`InstanceID` bigint ,`MapCount` int ,`Slock` int , PRIMARY KEY(`OID`) )ENGINE=INNODB;
create unique index I_Rukudan3Head_SOID on `Rukudan3Head`(`SOID`);
create table `Rukudan3Detail` (`OID` bigint ,`POID` bigint ,`SOID` bigint ,`VERID` int ,`DVERID` int ,`SEQUENCE` int ,`Warehouse` bigint ,`Material` bigint ,`Amount` numeric(16,2) ,`Unit` varchar(255) ,`MapKey` varchar(255) ,`SrcOID` bigint ,`SrcSOID` bigint ,`MapCount` int ,`Slock` int , PRIMARY KEY(`OID`) )ENGINE=INNODB;
create index I_Rukudan3Detail_SOID on `Rukudan3Detail`(`SOID`);
create index I_Rukudan3Detail_SRCO on `Rukudan3Detail`(`SrcOID`);
create index I_Rukudan3Detail_SRCS on `Rukudan3Detail`(`SrcSOID`);
create table `testHead` (`OID` bigint ,`SOID` bigint ,`POID` bigint ,`VERID` int ,`DVERID` int ,`NO` varchar(255) ,`Status` int ,`BillDate` datetime ,`Creator` bigint ,`CreateTime` datetime ,`Modifier` bigint ,`ModifyTime` datetime ,`InstanceID` bigint ,`MapCount` int ,`Slock` int , PRIMARY KEY(`OID`) )ENGINE=INNODB;
create unique index I_testHead_SOID on `testHead`(`SOID`);
create table `testDetail` (`OID` bigint ,`POID` bigint ,`SOID` bigint ,`VERID` int ,`DVERID` int ,`SEQUENCE` int ,`Number` numeric(16,2) ,`Material` bigint ,`MapCount` int ,`Slock` int , PRIMARY KEY(`OID`) )ENGINE=INNODB;
create index I_testDetail_SOID on `testDetail`(`SOID`);
create table `Warehouse` (`OID` bigint ,`SOID` bigint ,`POID` bigint ,`VERID` int ,`DVERID` int ,`Code` varchar(255) ,`Name` varchar(255) ,`NodeType` int ,`ParentID` bigint ,`Status` int ,`Enable` int ,`TLeft` int ,`TRight` int ,`MapCount` int ,`Slock` int , PRIMARY KEY(`OID`) )ENGINE=INNODB;
create index I_Warehouse_SOID on `Warehouse`(`SOID`);
create table `Warehouse_RR` (`RoleID` bigint ,`FormKey` varchar(128) ,`DictID` bigint ,`HasRights` int , PRIMARY KEY(`RoleID`,`DictID`) )ENGINE=INNODB;
create table `Warehouse_OR` (`OperatorID` bigint ,`FormKey` varchar(128) ,`DictID` bigint ,`HasRights` int , PRIMARY KEY(`OperatorID`,`DictID`) )ENGINE=INNODB;
create table `BPM_Instance` (`InstanceID` bigint ,`OID` bigint ,`ProcessKey` varchar(255) ,`VerID` int ,`StartTime` datetime ,`EndTime` datetime ,`CostTime` bigint ,`InstanceState` int ,`FormKey` varchar(255) ,`FormName` varchar(255) ,`ObjectKey` varchar(255) ,`InstanceMode` int ,`ParentInstanceID` bigint ,`StepIDSeed` int ,`TokenIDSeed` int ,`LogSeed` int ,`LogIndexSeed` int ,`EventSeed` int ,`StateWorkitemID` bigint ,`TransactionID` int ,`TransitTo` int ,`TransWorkitem` bigint ,`BPMState` int ,`BeginOperatorID` bigint ,`DocState` int ,`MapCount` int ,`Slock` int , PRIMARY KEY(`InstanceID`) )ENGINE=INNODB;
create index I_BPM_InstanceOID on `BPM_Instance`(`OID`);
create table `BPM_Node` (`InstanceID` bigint ,`OID` bigint ,`InlineNodeID` int ,`NodeID` int ,`InlineVersion` int ,`NodeType` int ,`Result` int ,`SubInstanceID` bigint ,`WorkitemID` bigint ,`BPMState` int ,`CountSeed` int ,`TransactionID` int ,`assistTransactionID` int ,`MapCount` int ,`Slock` int , PRIMARY KEY(`InstanceID`,`InlineNodeID`,`NodeID`) )ENGINE=INNODB;
create index I_BPM_NodeInstanceID on `BPM_Node`(`InstanceID`);
create table `BPM_NodeRB` (`InstanceID` bigint ,`OID` bigint ,`InlineNodeID` int ,`NodeID` int ,`TransactionID` int ,`InlineVersion` int ,`NodeType` int ,`Result` int ,`SubInstanceID` bigint ,`WorkitemID` bigint ,`BPMState` int ,`CountSeed` int ,`assistTransactionID` int ,`MapCount` int ,`Slock` int , PRIMARY KEY(`InstanceID`,`InlineNodeID`,`NodeID`,`TransactionID`) )ENGINE=INNODB;
create index I_BPM_NodeRBInstanceID on `BPM_NodeRB`(`InstanceID`);
create table `BPM_StepInfo` (`InstanceID` bigint ,`OID` bigint ,`StepID` int ,`InlineNodeID` int ,`SourceNodeID` int ,`TargetNodeID` int ,`TransactionID` int ,`assistTransactionID` int ,`MapCount` int ,`Slock` int , PRIMARY KEY(`InstanceID`,`StepID`) )ENGINE=INNODB;
create index I_BPM_StepInfoInstanceID on `BPM_StepInfo`(`InstanceID`);
create table `BPM_StepInfoRB` (`InstanceID` bigint ,`OID` bigint ,`StepID` int ,`TransactionID` int ,`InlineNodeID` int ,`SourceNodeID` int ,`TargetNodeID` int ,`assistTransactionID` int ,`MapCount` int ,`Slock` int , PRIMARY KEY(`InstanceID`,`StepID`,`TransactionID`) )ENGINE=INNODB;
create index I_BPM_StepInfoRBInstanceID on `BPM_StepInfoRB`(`InstanceID`);
create table `BPM_Token` (`InstanceID` bigint ,`OID` bigint ,`TokenID` int ,`InlineNodeID` int ,`NodeID` int ,`TransactionID` int ,`assistTransactionID` int ,`MapCount` int ,`Slock` int , PRIMARY KEY(`InstanceID`,`TokenID`) )ENGINE=INNODB;
create index I_BPM_TokenInstanceID on `BPM_Token`(`InstanceID`);
create table `BPM_TokenRB` (`InstanceID` bigint ,`OID` bigint ,`TokenID` int ,`TransactionID` int ,`InlineNodeID` int ,`NodeID` int ,`assistTransactionID` int ,`MapCount` int ,`Slock` int , PRIMARY KEY(`InstanceID`,`TokenID`,`TransactionID`) )ENGINE=INNODB;
create index I_BPM_TokenRBInstanceID on `BPM_TokenRB`(`InstanceID`);
create table `BPM_WorkitemInfo` (`InstanceID` bigint ,`OID` bigint ,`WorkitemID` bigint ,`InlineNodeID` int ,`NodeID` int ,`NodeKey` varchar(255) ,`FormKey` varchar(255) ,`ParentWorkitemID` bigint ,`PWorkitemID4Transfer` bigint ,`TransitTo` int ,`backsiteWorkitemID` bigint ,`CountID` int ,`TransactionID` int ,`assistTransactionID` int ,`MapCount` int ,`Slock` int , PRIMARY KEY(`InstanceID`,`WorkitemID`) )ENGINE=INNODB;
create index I_PM_WorkitemInfoInstanceID on `BPM_WorkitemInfo`(`InstanceID`);
create table `BPM_WorkitemInfoRB` (`InstanceID` bigint ,`OID` bigint ,`WorkitemID` bigint ,`TransactionID` int ,`InlineNodeID` int ,`NodeID` int ,`NodeKey` varchar(255) ,`FormKey` varchar(255) ,`ParentWorkitemID` bigint ,`PWorkitemID4Transfer` bigint ,`TransitTo` int ,`backsiteWorkitemID` bigint ,`CountID` int ,`assistTransactionID` int ,`MapCount` int ,`Slock` int , PRIMARY KEY(`InstanceID`,`WorkitemID`,`TransactionID`) )ENGINE=INNODB;
create index I__WorkitemInfoRBInstanceID on `BPM_WorkitemInfoRB`(`InstanceID`);
create table `BPM_EventLog` (`InstanceID` bigint ,`OID` bigint ,`LogID` bigint ,`EventTime` datetime ,`ActionType` int ,`Name` varchar(255) ,`Soperator` bigint ,`Toperator` bigint ,`UserInfo` varchar(255) ,`MapCount` int ,`Slock` int , PRIMARY KEY(`InstanceID`,`LogID`) )ENGINE=INNODB;
create index I_BPM_EventLogInstanceID on `BPM_EventLog`(`InstanceID`);
create table `BPM_AuditRetLog` (`InstanceID` bigint ,`OID` bigint ,`WorkitemID` bigint ,`UserID` bigint ,`AuditResult` int ,`UserInfo` varchar(255) ,`NodeID` int ,`InlineNodeID` int ,`MapCount` int ,`Slock` int , PRIMARY KEY(`InstanceID`,`UserID`) )ENGINE=INNODB;
create index I_BPM_AuditRetLogInstanceID on `BPM_AuditRetLog`(`InstanceID`);
create table `BPM_TransitTo` (`InstanceID` bigint ,`OID` bigint ,`WorkitemID` bigint ,`NodeID` int ,`transitToWorkitem` bigint ,`MapCount` int ,`Slock` int , PRIMARY KEY(`WorkitemID`,`transitToWorkitem`) )ENGINE=INNODB;
create index I_BPM_TransitToInstanceID on `BPM_TransitTo`(`InstanceID`);
create table `BPM_Log` (`InstanceID` bigint ,`OID` bigint ,`LogID` int ,`LogIndex` int ,`InlineNodeID` int ,`NodeID` int ,`WorkitemID` bigint ,`WorkitemName` varchar(255) ,`WorkitemState` int ,`CreatTime` datetime ,`FinishTime` datetime ,`OperatorID` bigint ,`AuditResult` int ,`UserInfo` varchar(4000) ,`ResultInfo` varchar(255) ,`LaunchInfo` varchar(255) ,`TransactionID` int ,`assistTransactionID` int ,`MapCount` int ,`Slock` int , PRIMARY KEY(`InstanceID`,`LogID`) )ENGINE=INNODB;
create index I_BPM_LogInstanceID on `BPM_Log`(`InstanceID`);
create table `BPM_LogRB` (`InstanceID` bigint ,`OID` bigint ,`LogID` int ,`LogIndex` int ,`InlineNodeID` int ,`NodeID` int ,`WorkitemID` bigint ,`WorkitemName` varchar(255) ,`WorkitemState` int ,`CreatTime` datetime ,`FinishTime` datetime ,`OperatorID` bigint ,`AuditResult` int ,`UserInfo` varchar(4000) ,`ResultInfo` varchar(255) ,`LaunchInfo` varchar(255) ,`TransactionID` int ,`assistTransactionID` int ,`MapCount` int ,`Slock` int , PRIMARY KEY(`InstanceID`,`LogID`,`TransactionID`) )ENGINE=INNODB;
create index I_BPM_LogRBInstanceID on `BPM_LogRB`(`InstanceID`);
create table `BPM_TimerEvent` (`InstanceID` bigint ,`OID` bigint ,`InlineNodeID` int ,`NodeID` int ,`EventTime` datetime ,`TransactionID` int ,`AssistTransactionID` int ,`MapCount` int ,`Slock` int , PRIMARY KEY(`InstanceID`,`InlineNodeID`,`NodeID`) )ENGINE=INNODB;
create index I_BPM_TimerEventInstanceID on `BPM_TimerEvent`(`InstanceID`);
create table `BPM_TimerEventRB` (`InstanceID` bigint ,`OID` bigint ,`InlineNodeID` int ,`NodeID` int ,`EventTime` datetime ,`TransactionID` int ,`AssistTransactionID` int ,`MapCount` int ,`Slock` int , PRIMARY KEY(`InstanceID`,`InlineNodeID`,`NodeID`,`TransactionID`) )ENGINE=INNODB;
create index I_PM_TimerEventRBInstanceID on `BPM_TimerEventRB`(`InstanceID`);
create table `BPM_FocusInstance` (`InstanceID` bigint ,`OID` bigint ,`FocusInstanceID` bigint ,`InlineNodeID` int ,`NodeID` int ,`InstanceSyncState` int ,`TransactionID` int ,`AssistTransactionID` int ,`MapCount` int ,`Slock` int , PRIMARY KEY(`InstanceID`,`FocusInstanceID`) )ENGINE=INNODB;
create index I_M_FocusInstanceInstanceID on `BPM_FocusInstance`(`InstanceID`);
create table `BPM_FocusInstanceRB` (`InstanceID` bigint ,`OID` bigint ,`FocusInstanceID` bigint ,`InlineNodeID` int ,`NodeID` int ,`InstanceSyncState` int ,`TransactionID` int ,`AssistTransactionID` int ,`MapCount` int ,`Slock` int , PRIMARY KEY(`InstanceID`,`FocusInstanceID`,`TransactionID`) )ENGINE=INNODB;
create index I_FocusInstanceRBInstanceID on `BPM_FocusInstanceRB`(`InstanceID`);
create table `BPM_FocusedInstance` (`InstanceID` bigint ,`OID` bigint ,`FocusedInstanceID` bigint ,`SyncTriggerType` int ,`TransactionID` int ,`AssistTransactionID` int ,`MapCount` int ,`Slock` int , PRIMARY KEY(`InstanceID`,`FocusedInstanceID`) )ENGINE=INNODB;
create index I_FocusedInstanceInstanceID on `BPM_FocusedInstance`(`InstanceID`);
create table `BPM_FocusedInstanceRB` (`InstanceID` bigint ,`OID` bigint ,`FocusedInstanceID` bigint ,`SyncTriggerType` int ,`TransactionID` int ,`AssistTransactionID` int ,`MapCount` int ,`Slock` int , PRIMARY KEY(`InstanceID`,`FocusedInstanceID`,`TransactionID`) )ENGINE=INNODB;
create index I_cusedInstanceRBInstanceID on `BPM_FocusedInstanceRB`(`InstanceID`);
create table `BPM_Transaction` (`InstanceID` bigint ,`OID` bigint ,`TransactionID` int ,`WorkitemID` bigint ,`OperatorID` bigint ,`WorkitemRevoke` int ,`fieldKey` varchar(255) ,`fieldValue` varchar(255) ,`statusValue` int ,`MapCount` int ,`Slock` int , PRIMARY KEY(`InstanceID`,`TransactionID`) )ENGINE=INNODB;
create index I_BPM_TransactionInstanceID on `BPM_Transaction`(`InstanceID`);
create table `WF_Delegate` (`DelegateID` bigint ,`DelegateType` int ,`SrcOperatorID` int ,`TgtOperatorID` int ,`CreaterID` int ,`ObjectType` int ,`ObjectKey` varchar(255) ,`NodeKey` varchar(255) ,`StartTime` datetime ,`EndTime` datetime ,`AlwaysValid` int ,`Enable` int ,`AutoRetreat` int ,`MapCount` int ,`Slock` int , PRIMARY KEY(`DelegateID`) )ENGINE=INNODB;
create index I_WF_DelegateTime on `WF_Delegate`(`StartTime`,`AlwaysValid`,`EndTime`);
create table `BPM_Timer` (`InstanceID` bigint ,`OID` bigint ,`InlineNodeID` int ,`NodeID` int ,`ItemKey` varchar(255) ,`TriggerTime` datetime ,`MapCount` int ,`Slock` int , PRIMARY KEY(`InstanceID`,`InlineNodeID`,`NodeID`,`ItemKey`) )ENGINE=INNODB;
create index I_BPM_TimerInstanceID on `BPM_Timer`(`InstanceID`,`InlineNodeID`,`NodeID`);
create table `BPM_WorkitemTimer` (`InstanceID` bigint ,`OID` bigint ,`WorkitemID` bigint ,`ItemKey` varchar(255) ,`TriggerTime` datetime ,`MapCount` int ,`Slock` int , PRIMARY KEY(`WorkitemID`,`ItemKey`) )ENGINE=INNODB;
create index I_M_WorkitemTimerWorkitemID on `BPM_WorkitemTimer`(`WorkitemID`);
create table `BPM_StateRB` (`InstanceID` bigint ,`OID` bigint ,`InlineNodeID` int ,`NodeID` int ,`OperatorID` bigint ,`WorkitemID` bigint ,`OperationNodeID` int ,`TransactionID` int ,`AssistTransactionID` int ,`MapCount` int ,`Slock` int , PRIMARY KEY(`InstanceID`,`OperatorID`,`WorkitemID`,`OperationNodeID`,`TransactionID`) )ENGINE=INNODB;
create index I_BPM_StateRBInstanceID on `BPM_StateRB`(`InstanceID`);
create table `BPM_State` (`InstanceID` bigint ,`OID` bigint ,`InlineNodeID` int ,`NodeID` int ,`OperatorID` bigint ,`WorkitemID` bigint ,`OperationNodeID` int ,`TransactionID` int ,`AssistTransactionID` int ,`MapCount` int ,`Slock` int , PRIMARY KEY(`InstanceID`,`OperatorID`,`WorkitemID`,`OperationNodeID`) )ENGINE=INNODB;
create index I_BPM_StateInstanceID on `BPM_State`(`InstanceID`);
create table `BPM_Migration` (`OID` bigint ,`SOID` bigint ,`VERID` bigint ,`DVERID` bigint ,`POID` bigint ,`MapCount` int ,`Slock` int , PRIMARY KEY(`OID`) )ENGINE=INNODB;
create index I_BPM_Migration_SOID on `BPM_Migration`(`SOID`);
create table `BPM_DirectTransition` (`InstanceID` bigint ,`OID` bigint ,`InlineNodeID` int ,`NodeID` int ,`TgtNodeID` int ,`TransactionID` int ,`AssistTransactionID` int ,`MapCount` int ,`Slock` int , PRIMARY KEY(`InstanceID`,`InlineNodeID`,`NodeID`) )ENGINE=INNODB;
create table `BPM_DirectTransitionRB` (`InstanceID` bigint ,`OID` bigint ,`InlineNodeID` int ,`NodeID` int ,`TransactionID` int ,`TgtNodeID` int ,`AssistTransactionID` int ,`MapCount` int ,`Slock` int , PRIMARY KEY(`InstanceID`,`InlineNodeID`,`NodeID`,`TransactionID`) )ENGINE=INNODB;
create table `BPM_AttachmentInfo` (`InstanceID` bigint ,`OID` bigint ,`AttachmentKey` varchar(64) ,`AttachmentInfo` varchar(255) ,`AttachmentPara` varchar(255) ,`TransactionID` int ,`AssistTransactionID` int ,`MapCount` int ,`Slock` int , PRIMARY KEY(`InstanceID`,`AttachmentKey`) )ENGINE=INNODB;
create table `BPM_AttachmentInfoRB` (`InstanceID` bigint ,`OID` bigint ,`AttachmentKey` varchar(64) ,`AttachmentInfo` varchar(255) ,`AttachmentPara` varchar(255) ,`TransactionID` int ,`AssistTransactionID` int ,`MapCount` int ,`Slock` int , PRIMARY KEY(`InstanceID`,`AttachmentKey`,`TransactionID`) )ENGINE=INNODB;
create table `WF_Workitem` (`WorkitemID` bigint ,`OID` bigint ,`WorkitemName` varchar(255) ,`WorkitemState` int ,`CreatTime` datetime ,`FinishTime` datetime ,`OperatorID` bigint ,`SrcOperatorID` bigint ,`TransferType` int ,`AuditResult` int ,`UserInfo` varchar(4000) ,`ResultInfo` varchar(255) ,`InlineNodeID` int ,`NodeID` int ,`NodeKey` varchar(255) ,`NodeType` int ,`TransitTo` int ,`BacksiteWorkitemID` bigint ,`LaunchInfo` varchar(255) ,`TransactionID` int ,`AssistTransactionID` int ,`LogID` int ,`ParentAuditResult` int ,`MapCount` int ,`Slock` int , PRIMARY KEY(`WorkitemID`) )ENGINE=INNODB;
create table `WF_WorkitemRB` (`WorkitemID` bigint ,`OID` bigint ,`WorkitemName` varchar(255) ,`WorkitemState` int ,`CreatTime` datetime ,`FinishTime` datetime ,`OperatorID` bigint ,`SrcOperatorID` bigint ,`TransferType` int ,`AuditResult` int ,`UserInfo` varchar(4000) ,`ResultInfo` varchar(255) ,`InlineNodeID` int ,`NodeID` int ,`NodeType` int ,`TransitTo` int ,`BacksiteWorkitemID` bigint ,`LaunchInfo` varchar(255) ,`TransactionID` int ,`AssistTransactionID` int ,`LogID` int ,`ParentAuditResult` int ,`MapCount` int ,`Slock` int , PRIMARY KEY(`WorkitemID`,`TransactionID`) )ENGINE=INNODB;
create index I_WF_WorkitemRBWorkitemID on `WF_WorkitemRB`(`WorkitemID`);
create table `WF_ParticipatorRB` (`WorkitemID` bigint ,`OperatorID` bigint ,`OID` bigint ,`SrcOperatorID` bigint ,`DelegateID` bigint ,`TransactionID` int ,`AssistTransactionID` int ,`Visible` int ,`MapCount` int ,`Slock` int , PRIMARY KEY(`WorkitemID`,`OperatorID`,`TransactionID`) )ENGINE=INNODB;
create index I__ParticipatorRBWorkitemID on `WF_ParticipatorRB`(`WorkitemID`);
create table `WF_Participator` (`WorkitemID` bigint ,`OperatorID` bigint ,`OID` bigint ,`SrcOperatorID` bigint ,`DelegateID` bigint ,`TransactionID` int ,`AssistTransactionID` int ,`Visible` int ,`MapCount` int ,`Slock` int , PRIMARY KEY(`WorkitemID`,`OperatorID`) )ENGINE=INNODB;
create index I_WF_ParticipatorWorkitemID on `WF_Participator`(`WorkitemID`);
create table `SYS_IDSeed` (`SeedID` int ,`SeedMark` bigint ,`Description` varchar(255) ,`CreateTime` date ,`Slock` int , PRIMARY KEY(`SeedID`) )ENGINE=INNODB;
create table `SYS_Sequence` (`SequenceID` int ,`NoPrefix` varchar(100) ,`Slock` int , PRIMARY KEY(`NoPrefix`) )ENGINE=INNODB;
create table `USER_Attachment` (`OID` bigint ,`SOID` bigint ,`UploadTime` datetime ,`UploadOperator` bigint ,`Path` varchar(150) ,`Name` varchar(150) ,`FileSize` bigint ,`UploadSize` bigint ,`FileMD5` varchar(150) ,`Client` varchar(150) ,`Server` varchar(150) ,`Schedule` double ,`UploadStatus` varchar(20) ,`Slock` int , PRIMARY KEY(`OID`) )ENGINE=INNODB;
create table `SYS_RoleEntryRights` (`RoleID` bigint ,`EntryKey` varchar(512) ,`HasRights` int ,`Slock` int  )ENGINE=INNODB;
create index I_RoleEntryRightsRoleID on `SYS_RoleEntryRights`(`RoleID`);
create table `SYS_WorkingCalendar` (`OID` bigint ,`DateOfYear` varchar(255) ,`ClusterID` bigint ,`isWorkDay` int ,`Slock` int , PRIMARY KEY(`OID`) )ENGINE=INNODB;
create table `SYS_WorkingTime` (`OID` bigint ,`WorkingTime` varchar(255) ,`ClusterID` bigint ,`Slock` int , PRIMARY KEY(`OID`) )ENGINE=INNODB;
create table `SYS_OperatorEntryRights` (`OperatorID` bigint ,`EntryKey` varchar(512) ,`HasRights` int ,`Slock` int  )ENGINE=INNODB;
create index I_atorEntryRightsOperatorID on `SYS_OperatorEntryRights`(`OperatorID`);
create table `SYS_RoleOptRights` (`RoleID` bigint ,`FormKey` varchar(64) ,`OptKey` varchar(64) ,`HasRights` int ,`Slock` int , PRIMARY KEY(`RoleID`,`FormKey`,`OptKey`) )ENGINE=INNODB;
create table `SYS_OperatorOptRights` (`OperatorID` bigint ,`FormKey` varchar(64) ,`OptKey` varchar(64) ,`HasRights` int ,`Slock` int , PRIMARY KEY(`OperatorID`,`FormKey`,`OptKey`) )ENGINE=INNODB;
create table `SYS_RoleFieldRights` (`RoleID` bigint ,`FormKey` varchar(64) ,`FieldKey` varchar(64) ,`Visible` int ,`Enable` int ,`HasRights` int ,`Slock` int , PRIMARY KEY(`RoleID`,`FormKey`,`FieldKey`) )ENGINE=INNODB;
create table `SYS_OperatorFieldRights` (`OperatorID` bigint ,`FormKey` varchar(64) ,`FieldKey` varchar(64) ,`Visible` int ,`Enable` int ,`HasRights` int ,`Slock` int , PRIMARY KEY(`OperatorID`,`FormKey`,`FieldKey`) )ENGINE=INNODB;
create table `SYS_RoleFormRights` (`RoleID` bigint ,`FormKey` varchar(64) ,`HasRights` int ,`Slock` int  )ENGINE=INNODB;
create table `SYS_OperatorFormRights` (`OperatorID` bigint ,`FormKey` varchar(64) ,`HasRights` int ,`Slock` int  )ENGINE=INNODB;
create table `SYS_Para` (`ParaKey` varchar(50) ,`ParaValue` varchar(1024) ,`ParaVer` int ,`Slock` int  )ENGINE=INNODB;
create table `SYS_SessionLog` (`OID` bigint ,`ClientID` varchar(50) ,`Operator` bigint ,`Happentime` datetime ,`Flag` int ,`IP` varchar(50) ,`Session_Mode` int ,`Host` varchar(50) ,`Port` varchar(50) ,`Notes` varchar(100) ,`Slock` int , PRIMARY KEY(`OID`) )ENGINE=INNODB;
create table `SYS_OperatorCertificate` (`OID` bigint ,`OperatorID` bigint ,`Fingerprint` varchar(1024) ,`ClientName` varchar(255) ,`Alias` varchar(100) ,`PublicKey` varchar(1024) ,`PrivateKey` varchar(1024) ,`StartTime` datetime ,`EndTime` datetime ,`UpdateTime` datetime ,`Flag` int ,`Slock` int , PRIMARY KEY(`OID`) )ENGINE=INNODB;
create table `SYS_OperateFingerprintCheck` (`OID` bigint ,`OperatorID` bigint ,`MetaKey` varchar(128) ,`CmdKey` varchar(100) ,`Slock` int , PRIMARY KEY(`OID`) )ENGINE=INNODB;
create table `SYS_RelationDataObject` (`OperatorID` bigint ,`OperationType` int ,`DataObjectKey` varchar(255) ,`Slock` int  )ENGINE=INNODB;
create table `SYS_RelationScript` (`OperatorID` bigint ,`FormKey` varchar(255) ,`ScriptName` varchar(255) ,`Slock` int  )ENGINE=INNODB;
create table `SYS_RelationService` (`OperatorID` bigint ,`ServiceName` varchar(255) ,`Slock` int  )ENGINE=INNODB;
create table `SYS_RoleDataObjectRights` (`RoleID` bigint ,`DataObjectKey` varchar(255) ,`NewOpt` int ,`DeleteOpt` int ,`SaveOpt` int ,`LoadOpt` int ,`Slock` int  )ENGINE=INNODB;
create table `SYS_OperatorDataObjectRights` (`OperatorID` bigint ,`DataObjectKey` varchar(255) ,`NewOpt` int ,`DeleteOpt` int ,`SaveOpt` int ,`LoadOpt` int ,`Slock` int  )ENGINE=INNODB;
create table `SYS_RoleCustomOptRights` (`RoleID` bigint ,`GroupKey` varchar(255) ,`OptKey` varchar(255) ,`HasRights` int ,`Slock` int  )ENGINE=INNODB;
create table `SYS_OperatorCustomOptRights` (`OperatorID` bigint ,`GroupKey` varchar(255) ,`OptKey` varchar(255) ,`HasRights` int ,`Slock` int  )ENGINE=INNODB;
create table `SYS_RoleNamedSqlRights` (`RoleID` bigint ,`Name` varchar(255) ,`HasRights` int ,`Slock` int  )ENGINE=INNODB;
create table `SYS_OperatorNamedSqlRights` (`OperatorID` bigint ,`Name` varchar(255) ,`HasRights` int ,`Slock` int  )ENGINE=INNODB;
create table `SYS_RoleExServiceRights` (`RoleID` bigint ,`Name` varchar(255) ,`HasRights` int ,`Slock` int  )ENGINE=INNODB;
create table `SYS_OperatorExServiceRights` (`OperatorID` bigint ,`Name` varchar(255) ,`HasRights` int ,`Slock` int  )ENGINE=INNODB;
create table `QRTZ_JOB_DETAILS` (`SCHED_NAME` varchar(120) ,`JOB_NAME` varchar(200) ,`JOB_GROUP` varchar(200) ,`DESCRIPTION` varchar(250) ,`JOB_CLASS_NAME` varchar(250) ,`IS_DURABLE` varchar(1) ,`IS_NONCONCURRENT` varchar(1) ,`IS_UPDATE_DATA` varchar(1) ,`REQUESTS_RECOVERY` varchar(1) ,`JOB_DATA` long varbinary ,`Slock` int , PRIMARY KEY(`SCHED_NAME`,`JOB_NAME`,`JOB_GROUP`) )ENGINE=INNODB;
create table `QRTZ_TRIGGERS` (`SCHED_NAME` varchar(120) ,`TRIGGER_NAME` varchar(200) ,`TRIGGER_GROUP` varchar(200) ,`JOB_NAME` varchar(200) ,`JOB_GROUP` varchar(200) ,`DESCRIPTION` varchar(250) ,`NEXT_FIRE_TIME` bigint ,`PREV_FIRE_TIME` bigint ,`PRIORITY` int ,`TRIGGER_STATE` varchar(16) ,`TRIGGER_TYPE` varchar(8) ,`START_TIME` bigint ,`END_TIME` bigint ,`CALENDAR_NAME` varchar(200) ,`MISFIRE_INSTR` int ,`JOB_DATA` long varbinary ,`Slock` int , PRIMARY KEY(`SCHED_NAME`,`TRIGGER_NAME`,`TRIGGER_GROUP`) )ENGINE=INNODB;
create table `QRTZ_SIMPLE_TRIGGERS` (`SCHED_NAME` varchar(120) ,`TRIGGER_NAME` varchar(200) ,`TRIGGER_GROUP` varchar(200) ,`REPEAT_COUNT` bigint ,`REPEAT_INTERVAL` bigint ,`TIMES_TRIGGERED` bigint ,`Slock` int , PRIMARY KEY(`SCHED_NAME`,`TRIGGER_NAME`,`TRIGGER_GROUP`) )ENGINE=INNODB;
create table `QRTZ_CRON_TRIGGERS` (`SCHED_NAME` varchar(120) ,`TRIGGER_NAME` varchar(200) ,`TRIGGER_GROUP` varchar(200) ,`CRON_EXPRESSION` varchar(200) ,`TIME_ZONE_ID` varchar(80) ,`Slock` int , PRIMARY KEY(`SCHED_NAME`,`TRIGGER_NAME`,`TRIGGER_GROUP`) )ENGINE=INNODB;
create table `QRTZ_SIMPROP_TRIGGERS` (`SCHED_NAME` varchar(120) ,`TRIGGER_NAME` varchar(200) ,`TRIGGER_GROUP` varchar(200) ,`STR_PROP_1` varchar(512) ,`STR_PROP_2` varchar(512) ,`STR_PROP_3` varchar(512) ,`INT_PROP_1` int ,`INT_PROP_2` int ,`LONG_PROP_1` bigint ,`LONG_PROP_2` bigint ,`DEC_PROP_1` numeric(13,4) ,`DEC_PROP_2` numeric(13,4) ,`BOOL_PROP_1` varchar(1) ,`BOOL_PROP_2` varchar(1) ,`Slock` int , PRIMARY KEY(`SCHED_NAME`,`TRIGGER_NAME`,`TRIGGER_GROUP`) )ENGINE=INNODB;
create table `QRTZ_BLOB_TRIGGERS` (`SCHED_NAME` varchar(120) ,`TRIGGER_NAME` varchar(200) ,`TRIGGER_GROUP` varchar(200) ,`BLOB_DATA` long varbinary ,`Slock` int , PRIMARY KEY(`SCHED_NAME`,`TRIGGER_NAME`,`TRIGGER_GROUP`) )ENGINE=INNODB;
create table `QRTZ_CALENDARS` (`SCHED_NAME` varchar(120) ,`CALENDAR_NAME` varchar(200) ,`CALENDAR` long varbinary ,`Slock` int , PRIMARY KEY(`SCHED_NAME`,`CALENDAR_NAME`) )ENGINE=INNODB;
create table `QRTZ_PAUSED_TRIGGER_GRPS` (`SCHED_NAME` varchar(120) ,`TRIGGER_GROUP` varchar(200) ,`Slock` int , PRIMARY KEY(`SCHED_NAME`,`TRIGGER_GROUP`) )ENGINE=INNODB;
create table `QRTZ_FIRED_TRIGGERS` (`SCHED_NAME` varchar(120) ,`ENTRY_ID` varchar(95) ,`TRIGGER_NAME` varchar(200) ,`TRIGGER_GROUP` varchar(200) ,`INSTANCE_NAME` varchar(200) ,`FIRED_TIME` bigint ,`SCHED_TIME` bigint ,`PRIORITY` int ,`STATE` varchar(16) ,`JOB_NAME` varchar(200) ,`JOB_GROUP` varchar(200) ,`IS_NONCONCURRENT` varchar(1) ,`REQUESTS_RECOVERY` varchar(1) ,`Slock` int , PRIMARY KEY(`SCHED_NAME`,`ENTRY_ID`) )ENGINE=INNODB;
create table `QRTZ_SCHEDULER_STATE` (`SCHED_NAME` varchar(120) ,`INSTANCE_NAME` varchar(200) ,`LAST_CHECKIN_TIME` bigint ,`CHECKIN_INTERVAL` bigint ,`Slock` int , PRIMARY KEY(`SCHED_NAME`,`INSTANCE_NAME`) )ENGINE=INNODB;
create table `QRTZ_LOCKS` (`SCHED_NAME` varchar(120) ,`LOCK_NAME` varchar(40) ,`Slock` int , PRIMARY KEY(`SCHED_NAME`,`LOCK_NAME`) )ENGINE=INNODB;
D:\shanghaiboke\Yigo\fanxiaofei\fanxiaofei||yigo_fanxiaofei||Fri Sep 28 11:15:32 CST 2018
create table `SYS_Operator` (`OID` bigint ,`POID` bigint ,`SOID` bigint ,`VERID` int ,`DVERID` int ,`Status` int ,`Enable` int ,`NodeType` int ,`ParentID` bigint ,`TLeft` int ,`TRight` int ,`Code` varchar(50) ,`Name` varchar(50) ,`Password` varchar(512) ,`MapCount` int ,`Slock` int , PRIMARY KEY(`OID`) )ENGINE=INNODB;
create index I_SYS_Operator_SOID on `SYS_Operator`(`SOID`);
create table `SYS_OperatorRole` (`OID` bigint ,`POID` bigint ,`SOID` bigint ,`VERID` int ,`DVERID` int ,`Sequence` int ,`Role` bigint ,`MapCount` int ,`Slock` int , PRIMARY KEY(`OID`) )ENGINE=INNODB;
create index I_YS_OperatorRole_SOID on `SYS_OperatorRole`(`SOID`);
create table `SYS_Operator_RR` (`RoleID` bigint ,`FormKey` varchar(128) ,`DictID` bigint ,`HasRights` int , PRIMARY KEY(`RoleID`,`DictID`) )ENGINE=INNODB;
create table `SYS_Operator_OR` (`OperatorID` bigint ,`FormKey` varchar(128) ,`DictID` bigint ,`HasRights` int , PRIMARY KEY(`OperatorID`,`DictID`) )ENGINE=INNODB;
create table `CUST_StaticObj` (`OID` bigint ,`POID` bigint ,`SOID` bigint ,`VERID` int ,`DVERID` int ,`MapCount` int ,`Slock` int , PRIMARY KEY(`OID`) )ENGINE=INNODB;
create unique index I_CUST_StaticObj_SOID on `CUST_StaticObj`(`SOID`);
create table `CUST_Para` (`OID` bigint ,`POID` bigint ,`SOID` bigint ,`VERID` int ,`DVERID` int ,`ParaKey` varchar(64) ,`ParentKey` varchar(64) ,`ParaValue` bigint ,`NodeType` int ,`MapCount` int ,`Slock` int , PRIMARY KEY(`OID`) )ENGINE=INNODB;
create index I_CUST_Para_SOID on `CUST_Para`(`SOID`);
create table `SYS_Role` (`OID` bigint ,`POID` bigint ,`SOID` bigint ,`VERID` int ,`DVERID` int ,`Status` int ,`Enable` int ,`NodeType` int ,`ParentID` bigint ,`TLeft` int ,`TRight` int ,`Code` varchar(50) ,`Name` varchar(50) ,`IsAdmin` int ,`MapCount` int ,`Slock` int , PRIMARY KEY(`OID`) )ENGINE=INNODB;
create index I_SYS_Role_SOID on `SYS_Role`(`SOID`);
create table `SYS_Role_RR` (`RoleID` bigint ,`FormKey` varchar(128) ,`DictID` bigint ,`HasRights` int , PRIMARY KEY(`RoleID`,`DictID`) )ENGINE=INNODB;
create table `SYS_Role_OR` (`OperatorID` bigint ,`FormKey` varchar(128) ,`DictID` bigint ,`HasRights` int , PRIMARY KEY(`OperatorID`,`DictID`) )ENGINE=INNODB;
create table `BPM_Instance` (`InstanceID` bigint ,`OID` bigint ,`ProcessKey` varchar(255) ,`VerID` int ,`StartTime` datetime ,`EndTime` datetime ,`CostTime` bigint ,`InstanceState` int ,`FormKey` varchar(255) ,`FormName` varchar(255) ,`ObjectKey` varchar(255) ,`InstanceMode` int ,`ParentInstanceID` bigint ,`StepIDSeed` int ,`TokenIDSeed` int ,`LogSeed` int ,`LogIndexSeed` int ,`EventSeed` int ,`StateWorkitemID` bigint ,`TransactionID` int ,`TransitTo` int ,`TransWorkitem` bigint ,`BPMState` int ,`BeginOperatorID` bigint ,`DocState` int ,`MapCount` int ,`Slock` int , PRIMARY KEY(`InstanceID`) )ENGINE=INNODB;
create index I_BPM_InstanceOID on `BPM_Instance`(`OID`);
create table `BPM_Node` (`InstanceID` bigint ,`OID` bigint ,`InlineNodeID` int ,`NodeID` int ,`InlineVersion` int ,`NodeType` int ,`Result` int ,`SubInstanceID` bigint ,`WorkitemID` bigint ,`BPMState` int ,`CountSeed` int ,`TransactionID` int ,`assistTransactionID` int ,`MapCount` int ,`Slock` int , PRIMARY KEY(`InstanceID`,`InlineNodeID`,`NodeID`) )ENGINE=INNODB;
create index I_BPM_NodeInstanceID on `BPM_Node`(`InstanceID`);
create table `BPM_NodeRB` (`InstanceID` bigint ,`OID` bigint ,`InlineNodeID` int ,`NodeID` int ,`TransactionID` int ,`InlineVersion` int ,`NodeType` int ,`Result` int ,`SubInstanceID` bigint ,`WorkitemID` bigint ,`BPMState` int ,`CountSeed` int ,`assistTransactionID` int ,`MapCount` int ,`Slock` int , PRIMARY KEY(`InstanceID`,`InlineNodeID`,`NodeID`,`TransactionID`) )ENGINE=INNODB;
create index I_BPM_NodeRBInstanceID on `BPM_NodeRB`(`InstanceID`);
create table `BPM_StepInfo` (`InstanceID` bigint ,`OID` bigint ,`StepID` int ,`InlineNodeID` int ,`SourceNodeID` int ,`TargetNodeID` int ,`TransactionID` int ,`assistTransactionID` int ,`MapCount` int ,`Slock` int , PRIMARY KEY(`InstanceID`,`StepID`) )ENGINE=INNODB;
create index I_BPM_StepInfoInstanceID on `BPM_StepInfo`(`InstanceID`);
create table `BPM_StepInfoRB` (`InstanceID` bigint ,`OID` bigint ,`StepID` int ,`TransactionID` int ,`InlineNodeID` int ,`SourceNodeID` int ,`TargetNodeID` int ,`assistTransactionID` int ,`MapCount` int ,`Slock` int , PRIMARY KEY(`InstanceID`,`StepID`,`TransactionID`) )ENGINE=INNODB;
create index I_BPM_StepInfoRBInstanceID on `BPM_StepInfoRB`(`InstanceID`);
create table `BPM_Token` (`InstanceID` bigint ,`OID` bigint ,`TokenID` int ,`InlineNodeID` int ,`NodeID` int ,`TransactionID` int ,`assistTransactionID` int ,`MapCount` int ,`Slock` int , PRIMARY KEY(`InstanceID`,`TokenID`) )ENGINE=INNODB;
create index I_BPM_TokenInstanceID on `BPM_Token`(`InstanceID`);
create table `BPM_TokenRB` (`InstanceID` bigint ,`OID` bigint ,`TokenID` int ,`TransactionID` int ,`InlineNodeID` int ,`NodeID` int ,`assistTransactionID` int ,`MapCount` int ,`Slock` int , PRIMARY KEY(`InstanceID`,`TokenID`,`TransactionID`) )ENGINE=INNODB;
create index I_BPM_TokenRBInstanceID on `BPM_TokenRB`(`InstanceID`);
create table `BPM_WorkitemInfo` (`InstanceID` bigint ,`OID` bigint ,`WorkitemID` bigint ,`InlineNodeID` int ,`NodeID` int ,`NodeKey` varchar(255) ,`FormKey` varchar(255) ,`ParentWorkitemID` bigint ,`PWorkitemID4Transfer` bigint ,`TransitTo` int ,`backsiteWorkitemID` bigint ,`CountID` int ,`TransactionID` int ,`assistTransactionID` int ,`MapCount` int ,`Slock` int , PRIMARY KEY(`InstanceID`,`WorkitemID`) )ENGINE=INNODB;
create index I_PM_WorkitemInfoInstanceID on `BPM_WorkitemInfo`(`InstanceID`);
create table `BPM_WorkitemInfoRB` (`InstanceID` bigint ,`OID` bigint ,`WorkitemID` bigint ,`TransactionID` int ,`InlineNodeID` int ,`NodeID` int ,`NodeKey` varchar(255) ,`FormKey` varchar(255) ,`ParentWorkitemID` bigint ,`PWorkitemID4Transfer` bigint ,`TransitTo` int ,`backsiteWorkitemID` bigint ,`CountID` int ,`assistTransactionID` int ,`MapCount` int ,`Slock` int , PRIMARY KEY(`InstanceID`,`WorkitemID`,`TransactionID`) )ENGINE=INNODB;
create index I__WorkitemInfoRBInstanceID on `BPM_WorkitemInfoRB`(`InstanceID`);
create table `BPM_EventLog` (`InstanceID` bigint ,`OID` bigint ,`LogID` bigint ,`EventTime` datetime ,`ActionType` int ,`Name` varchar(255) ,`Soperator` bigint ,`Toperator` bigint ,`UserInfo` varchar(255) ,`MapCount` int ,`Slock` int , PRIMARY KEY(`InstanceID`,`LogID`) )ENGINE=INNODB;
create index I_BPM_EventLogInstanceID on `BPM_EventLog`(`InstanceID`);
create table `BPM_AuditRetLog` (`InstanceID` bigint ,`OID` bigint ,`WorkitemID` bigint ,`UserID` bigint ,`AuditResult` int ,`UserInfo` varchar(255) ,`NodeID` int ,`InlineNodeID` int ,`MapCount` int ,`Slock` int , PRIMARY KEY(`InstanceID`,`UserID`) )ENGINE=INNODB;
create index I_BPM_AuditRetLogInstanceID on `BPM_AuditRetLog`(`InstanceID`);
create table `BPM_TransitTo` (`InstanceID` bigint ,`OID` bigint ,`WorkitemID` bigint ,`NodeID` int ,`transitToWorkitem` bigint ,`MapCount` int ,`Slock` int , PRIMARY KEY(`WorkitemID`,`transitToWorkitem`) )ENGINE=INNODB;
create index I_BPM_TransitToInstanceID on `BPM_TransitTo`(`InstanceID`);
create table `BPM_Log` (`InstanceID` bigint ,`OID` bigint ,`LogID` int ,`LogIndex` int ,`InlineNodeID` int ,`NodeID` int ,`WorkitemID` bigint ,`WorkitemName` varchar(255) ,`WorkitemState` int ,`CreatTime` datetime ,`FinishTime` datetime ,`OperatorID` bigint ,`AuditResult` int ,`UserInfo` varchar(4000) ,`ResultInfo` varchar(255) ,`LaunchInfo` varchar(255) ,`TransactionID` int ,`assistTransactionID` int ,`MapCount` int ,`Slock` int , PRIMARY KEY(`InstanceID`,`LogID`) )ENGINE=INNODB;
create index I_BPM_LogInstanceID on `BPM_Log`(`InstanceID`);
create table `BPM_LogRB` (`InstanceID` bigint ,`OID` bigint ,`LogID` int ,`LogIndex` int ,`InlineNodeID` int ,`NodeID` int ,`WorkitemID` bigint ,`WorkitemName` varchar(255) ,`WorkitemState` int ,`CreatTime` datetime ,`FinishTime` datetime ,`OperatorID` bigint ,`AuditResult` int ,`UserInfo` varchar(4000) ,`ResultInfo` varchar(255) ,`LaunchInfo` varchar(255) ,`TransactionID` int ,`assistTransactionID` int ,`MapCount` int ,`Slock` int , PRIMARY KEY(`InstanceID`,`LogID`,`TransactionID`) )ENGINE=INNODB;
create index I_BPM_LogRBInstanceID on `BPM_LogRB`(`InstanceID`);
create table `BPM_TimerEvent` (`InstanceID` bigint ,`OID` bigint ,`InlineNodeID` int ,`NodeID` int ,`EventTime` datetime ,`TransactionID` int ,`AssistTransactionID` int ,`MapCount` int ,`Slock` int , PRIMARY KEY(`InstanceID`,`InlineNodeID`,`NodeID`) )ENGINE=INNODB;
create index I_BPM_TimerEventInstanceID on `BPM_TimerEvent`(`InstanceID`);
create table `BPM_TimerEventRB` (`InstanceID` bigint ,`OID` bigint ,`InlineNodeID` int ,`NodeID` int ,`EventTime` datetime ,`TransactionID` int ,`AssistTransactionID` int ,`MapCount` int ,`Slock` int , PRIMARY KEY(`InstanceID`,`InlineNodeID`,`NodeID`,`TransactionID`) )ENGINE=INNODB;
create index I_PM_TimerEventRBInstanceID on `BPM_TimerEventRB`(`InstanceID`);
create table `BPM_FocusInstance` (`InstanceID` bigint ,`OID` bigint ,`FocusInstanceID` bigint ,`InlineNodeID` int ,`NodeID` int ,`InstanceSyncState` int ,`TransactionID` int ,`AssistTransactionID` int ,`MapCount` int ,`Slock` int , PRIMARY KEY(`InstanceID`,`FocusInstanceID`) )ENGINE=INNODB;
create index I_M_FocusInstanceInstanceID on `BPM_FocusInstance`(`InstanceID`);
create table `BPM_FocusInstanceRB` (`InstanceID` bigint ,`OID` bigint ,`FocusInstanceID` bigint ,`InlineNodeID` int ,`NodeID` int ,`InstanceSyncState` int ,`TransactionID` int ,`AssistTransactionID` int ,`MapCount` int ,`Slock` int , PRIMARY KEY(`InstanceID`,`FocusInstanceID`,`TransactionID`) )ENGINE=INNODB;
create index I_FocusInstanceRBInstanceID on `BPM_FocusInstanceRB`(`InstanceID`);
create table `BPM_FocusedInstance` (`InstanceID` bigint ,`OID` bigint ,`FocusedInstanceID` bigint ,`SyncTriggerType` int ,`TransactionID` int ,`AssistTransactionID` int ,`MapCount` int ,`Slock` int , PRIMARY KEY(`InstanceID`,`FocusedInstanceID`) )ENGINE=INNODB;
create index I_FocusedInstanceInstanceID on `BPM_FocusedInstance`(`InstanceID`);
create table `BPM_FocusedInstanceRB` (`InstanceID` bigint ,`OID` bigint ,`FocusedInstanceID` bigint ,`SyncTriggerType` int ,`TransactionID` int ,`AssistTransactionID` int ,`MapCount` int ,`Slock` int , PRIMARY KEY(`InstanceID`,`FocusedInstanceID`,`TransactionID`) )ENGINE=INNODB;
create index I_cusedInstanceRBInstanceID on `BPM_FocusedInstanceRB`(`InstanceID`);
create table `BPM_Transaction` (`InstanceID` bigint ,`OID` bigint ,`TransactionID` int ,`WorkitemID` bigint ,`OperatorID` bigint ,`WorkitemRevoke` int ,`fieldKey` varchar(255) ,`fieldValue` varchar(255) ,`statusValue` int ,`MapCount` int ,`Slock` int , PRIMARY KEY(`InstanceID`,`TransactionID`) )ENGINE=INNODB;
create index I_BPM_TransactionInstanceID on `BPM_Transaction`(`InstanceID`);
create table `WF_Delegate` (`DelegateID` bigint ,`DelegateType` int ,`SrcOperatorID` int ,`TgtOperatorID` int ,`CreaterID` int ,`ObjectType` int ,`ObjectKey` varchar(255) ,`NodeKey` varchar(255) ,`StartTime` datetime ,`EndTime` datetime ,`AlwaysValid` int ,`Enable` int ,`AutoRetreat` int ,`MapCount` int ,`Slock` int , PRIMARY KEY(`DelegateID`) )ENGINE=INNODB;
create index I_WF_DelegateTime on `WF_Delegate`(`StartTime`,`AlwaysValid`,`EndTime`);
create table `BPM_Timer` (`InstanceID` bigint ,`OID` bigint ,`InlineNodeID` int ,`NodeID` int ,`ItemKey` varchar(255) ,`TriggerTime` datetime ,`MapCount` int ,`Slock` int , PRIMARY KEY(`InstanceID`,`InlineNodeID`,`NodeID`,`ItemKey`) )ENGINE=INNODB;
create index I_BPM_TimerInstanceID on `BPM_Timer`(`InstanceID`,`InlineNodeID`,`NodeID`);
create table `BPM_WorkitemTimer` (`InstanceID` bigint ,`OID` bigint ,`WorkitemID` bigint ,`ItemKey` varchar(255) ,`TriggerTime` datetime ,`MapCount` int ,`Slock` int , PRIMARY KEY(`WorkitemID`,`ItemKey`) )ENGINE=INNODB;
create index I_M_WorkitemTimerWorkitemID on `BPM_WorkitemTimer`(`WorkitemID`);
create table `BPM_StateRB` (`InstanceID` bigint ,`OID` bigint ,`InlineNodeID` int ,`NodeID` int ,`OperatorID` bigint ,`WorkitemID` bigint ,`OperationNodeID` int ,`TransactionID` int ,`AssistTransactionID` int ,`MapCount` int ,`Slock` int , PRIMARY KEY(`InstanceID`,`OperatorID`,`WorkitemID`,`OperationNodeID`,`TransactionID`) )ENGINE=INNODB;
create index I_BPM_StateRBInstanceID on `BPM_StateRB`(`InstanceID`);
create table `BPM_State` (`InstanceID` bigint ,`OID` bigint ,`InlineNodeID` int ,`NodeID` int ,`OperatorID` bigint ,`WorkitemID` bigint ,`OperationNodeID` int ,`TransactionID` int ,`AssistTransactionID` int ,`MapCount` int ,`Slock` int , PRIMARY KEY(`InstanceID`,`OperatorID`,`WorkitemID`,`OperationNodeID`) )ENGINE=INNODB;
create index I_BPM_StateInstanceID on `BPM_State`(`InstanceID`);
create table `BPM_Migration` (`OID` bigint ,`SOID` bigint ,`VERID` bigint ,`DVERID` bigint ,`POID` bigint ,`MapCount` int ,`Slock` int , PRIMARY KEY(`OID`) )ENGINE=INNODB;
create index I_BPM_Migration_SOID on `BPM_Migration`(`SOID`);
create table `BPM_DirectTransition` (`InstanceID` bigint ,`OID` bigint ,`InlineNodeID` int ,`NodeID` int ,`TgtNodeID` int ,`TransactionID` int ,`AssistTransactionID` int ,`MapCount` int ,`Slock` int , PRIMARY KEY(`InstanceID`,`InlineNodeID`,`NodeID`) )ENGINE=INNODB;
create table `BPM_DirectTransitionRB` (`InstanceID` bigint ,`OID` bigint ,`InlineNodeID` int ,`NodeID` int ,`TransactionID` int ,`TgtNodeID` int ,`AssistTransactionID` int ,`MapCount` int ,`Slock` int , PRIMARY KEY(`InstanceID`,`InlineNodeID`,`NodeID`,`TransactionID`) )ENGINE=INNODB;
create table `BPM_AttachmentInfo` (`InstanceID` bigint ,`OID` bigint ,`AttachmentKey` varchar(64) ,`AttachmentInfo` varchar(255) ,`AttachmentPara` varchar(255) ,`TransactionID` int ,`AssistTransactionID` int ,`MapCount` int ,`Slock` int , PRIMARY KEY(`InstanceID`,`AttachmentKey`) )ENGINE=INNODB;
create table `BPM_AttachmentInfoRB` (`InstanceID` bigint ,`OID` bigint ,`AttachmentKey` varchar(64) ,`AttachmentInfo` varchar(255) ,`AttachmentPara` varchar(255) ,`TransactionID` int ,`AssistTransactionID` int ,`MapCount` int ,`Slock` int , PRIMARY KEY(`InstanceID`,`AttachmentKey`,`TransactionID`) )ENGINE=INNODB;
create table `WF_Workitem` (`WorkitemID` bigint ,`OID` bigint ,`WorkitemName` varchar(255) ,`WorkitemState` int ,`CreatTime` datetime ,`FinishTime` datetime ,`OperatorID` bigint ,`SrcOperatorID` bigint ,`TransferType` int ,`AuditResult` int ,`UserInfo` varchar(4000) ,`ResultInfo` varchar(255) ,`InlineNodeID` int ,`NodeID` int ,`NodeKey` varchar(255) ,`NodeType` int ,`TransitTo` int ,`BacksiteWorkitemID` bigint ,`LaunchInfo` varchar(255) ,`TransactionID` int ,`AssistTransactionID` int ,`LogID` int ,`ParentAuditResult` int ,`MapCount` int ,`Slock` int , PRIMARY KEY(`WorkitemID`) )ENGINE=INNODB;
create table `WF_WorkitemRB` (`WorkitemID` bigint ,`OID` bigint ,`WorkitemName` varchar(255) ,`WorkitemState` int ,`CreatTime` datetime ,`FinishTime` datetime ,`OperatorID` bigint ,`SrcOperatorID` bigint ,`TransferType` int ,`AuditResult` int ,`UserInfo` varchar(4000) ,`ResultInfo` varchar(255) ,`InlineNodeID` int ,`NodeID` int ,`NodeType` int ,`TransitTo` int ,`BacksiteWorkitemID` bigint ,`LaunchInfo` varchar(255) ,`TransactionID` int ,`AssistTransactionID` int ,`LogID` int ,`ParentAuditResult` int ,`MapCount` int ,`Slock` int , PRIMARY KEY(`WorkitemID`,`TransactionID`) )ENGINE=INNODB;
create index I_WF_WorkitemRBWorkitemID on `WF_WorkitemRB`(`WorkitemID`);
create table `WF_ParticipatorRB` (`WorkitemID` bigint ,`OperatorID` bigint ,`OID` bigint ,`SrcOperatorID` bigint ,`DelegateID` bigint ,`TransactionID` int ,`AssistTransactionID` int ,`Visible` int ,`MapCount` int ,`Slock` int , PRIMARY KEY(`WorkitemID`,`OperatorID`,`TransactionID`) )ENGINE=INNODB;
create index I__ParticipatorRBWorkitemID on `WF_ParticipatorRB`(`WorkitemID`);
create table `WF_Participator` (`WorkitemID` bigint ,`OperatorID` bigint ,`OID` bigint ,`SrcOperatorID` bigint ,`DelegateID` bigint ,`TransactionID` int ,`AssistTransactionID` int ,`Visible` int ,`MapCount` int ,`Slock` int , PRIMARY KEY(`WorkitemID`,`OperatorID`) )ENGINE=INNODB;
create index I_WF_ParticipatorWorkitemID on `WF_Participator`(`WorkitemID`);
create table `SYS_IDSeed` (`SeedID` int ,`SeedMark` bigint ,`Description` varchar(255) ,`CreateTime` date ,`Slock` int , PRIMARY KEY(`SeedID`) )ENGINE=INNODB;
create table `SYS_Sequence` (`SequenceID` int ,`NoPrefix` varchar(100) ,`Slock` int , PRIMARY KEY(`NoPrefix`) )ENGINE=INNODB;
create table `USER_Attachment` (`OID` bigint ,`SOID` bigint ,`UploadTime` datetime ,`UploadOperator` bigint ,`Path` varchar(150) ,`Name` varchar(150) ,`FileSize` bigint ,`UploadSize` bigint ,`FileMD5` varchar(150) ,`Client` varchar(150) ,`Server` varchar(150) ,`Schedule` double ,`UploadStatus` varchar(20) ,`Slock` int , PRIMARY KEY(`OID`) )ENGINE=INNODB;
create table `SYS_RoleEntryRights` (`RoleID` bigint ,`EntryKey` varchar(512) ,`HasRights` int ,`Slock` int  )ENGINE=INNODB;
create index I_RoleEntryRightsRoleID on `SYS_RoleEntryRights`(`RoleID`);
create table `SYS_WorkingCalendar` (`OID` bigint ,`DateOfYear` varchar(255) ,`ClusterID` bigint ,`isWorkDay` int ,`Slock` int , PRIMARY KEY(`OID`) )ENGINE=INNODB;
create table `SYS_WorkingTime` (`OID` bigint ,`WorkingTime` varchar(255) ,`ClusterID` bigint ,`Slock` int , PRIMARY KEY(`OID`) )ENGINE=INNODB;
create table `SYS_OperatorEntryRights` (`OperatorID` bigint ,`EntryKey` varchar(512) ,`HasRights` int ,`Slock` int  )ENGINE=INNODB;
create index I_atorEntryRightsOperatorID on `SYS_OperatorEntryRights`(`OperatorID`);
create table `SYS_RoleOptRights` (`RoleID` bigint ,`FormKey` varchar(64) ,`OptKey` varchar(64) ,`HasRights` int ,`Slock` int , PRIMARY KEY(`RoleID`,`FormKey`,`OptKey`) )ENGINE=INNODB;
create table `SYS_OperatorOptRights` (`OperatorID` bigint ,`FormKey` varchar(64) ,`OptKey` varchar(64) ,`HasRights` int ,`Slock` int , PRIMARY KEY(`OperatorID`,`FormKey`,`OptKey`) )ENGINE=INNODB;
create table `SYS_RoleFieldRights` (`RoleID` bigint ,`FormKey` varchar(64) ,`FieldKey` varchar(64) ,`Visible` int ,`Enable` int ,`HasRights` int ,`Slock` int , PRIMARY KEY(`RoleID`,`FormKey`,`FieldKey`) )ENGINE=INNODB;
create table `SYS_OperatorFieldRights` (`OperatorID` bigint ,`FormKey` varchar(64) ,`FieldKey` varchar(64) ,`Visible` int ,`Enable` int ,`HasRights` int ,`Slock` int , PRIMARY KEY(`OperatorID`,`FormKey`,`FieldKey`) )ENGINE=INNODB;
create table `SYS_RoleFormRights` (`RoleID` bigint ,`FormKey` varchar(64) ,`HasRights` int ,`Slock` int  )ENGINE=INNODB;
create table `SYS_OperatorFormRights` (`OperatorID` bigint ,`FormKey` varchar(64) ,`HasRights` int ,`Slock` int  )ENGINE=INNODB;
create table `SYS_Para` (`ParaKey` varchar(50) ,`ParaValue` varchar(1024) ,`ParaVer` int ,`Slock` int  )ENGINE=INNODB;
create table `SYS_SessionLog` (`OID` bigint ,`ClientID` varchar(50) ,`Operator` bigint ,`Happentime` datetime ,`Flag` int ,`IP` varchar(50) ,`Session_Mode` int ,`Host` varchar(50) ,`Port` varchar(50) ,`Notes` varchar(100) ,`Slock` int , PRIMARY KEY(`OID`) )ENGINE=INNODB;
create table `SYS_OperatorCertificate` (`OID` bigint ,`OperatorID` bigint ,`Fingerprint` varchar(1024) ,`ClientName` varchar(255) ,`Alias` varchar(100) ,`PublicKey` varchar(1024) ,`PrivateKey` varchar(1024) ,`StartTime` datetime ,`EndTime` datetime ,`UpdateTime` datetime ,`Flag` int ,`Slock` int , PRIMARY KEY(`OID`) )ENGINE=INNODB;
create table `SYS_OperateFingerprintCheck` (`OID` bigint ,`OperatorID` bigint ,`MetaKey` varchar(128) ,`CmdKey` varchar(100) ,`Slock` int , PRIMARY KEY(`OID`) )ENGINE=INNODB;
create table `SYS_RelationDataObject` (`OperatorID` bigint ,`OperationType` int ,`DataObjectKey` varchar(255) ,`Slock` int  )ENGINE=INNODB;
create table `SYS_RelationScript` (`OperatorID` bigint ,`FormKey` varchar(255) ,`ScriptName` varchar(255) ,`Slock` int  )ENGINE=INNODB;
create table `SYS_RelationService` (`OperatorID` bigint ,`ServiceName` varchar(255) ,`Slock` int  )ENGINE=INNODB;
create table `SYS_RoleDataObjectRights` (`RoleID` bigint ,`DataObjectKey` varchar(255) ,`NewOpt` int ,`DeleteOpt` int ,`SaveOpt` int ,`LoadOpt` int ,`Slock` int  )ENGINE=INNODB;
create table `SYS_OperatorDataObjectRights` (`OperatorID` bigint ,`DataObjectKey` varchar(255) ,`NewOpt` int ,`DeleteOpt` int ,`SaveOpt` int ,`LoadOpt` int ,`Slock` int  )ENGINE=INNODB;
create table `SYS_RoleCustomOptRights` (`RoleID` bigint ,`GroupKey` varchar(255) ,`OptKey` varchar(255) ,`HasRights` int ,`Slock` int  )ENGINE=INNODB;
create table `SYS_OperatorCustomOptRights` (`OperatorID` bigint ,`GroupKey` varchar(255) ,`OptKey` varchar(255) ,`HasRights` int ,`Slock` int  )ENGINE=INNODB;
create table `SYS_RoleNamedSqlRights` (`RoleID` bigint ,`Name` varchar(255) ,`HasRights` int ,`Slock` int  )ENGINE=INNODB;
create table `SYS_OperatorNamedSqlRights` (`OperatorID` bigint ,`Name` varchar(255) ,`HasRights` int ,`Slock` int  )ENGINE=INNODB;
create table `SYS_RoleExServiceRights` (`RoleID` bigint ,`Name` varchar(255) ,`HasRights` int ,`Slock` int  )ENGINE=INNODB;
create table `SYS_OperatorExServiceRights` (`OperatorID` bigint ,`Name` varchar(255) ,`HasRights` int ,`Slock` int  )ENGINE=INNODB;
create table `QRTZ_JOB_DETAILS` (`SCHED_NAME` varchar(120) ,`JOB_NAME` varchar(200) ,`JOB_GROUP` varchar(200) ,`DESCRIPTION` varchar(250) ,`JOB_CLASS_NAME` varchar(250) ,`IS_DURABLE` varchar(1) ,`IS_NONCONCURRENT` varchar(1) ,`IS_UPDATE_DATA` varchar(1) ,`REQUESTS_RECOVERY` varchar(1) ,`JOB_DATA` long varbinary ,`Slock` int , PRIMARY KEY(`SCHED_NAME`,`JOB_NAME`,`JOB_GROUP`) )ENGINE=INNODB;
create table `QRTZ_TRIGGERS` (`SCHED_NAME` varchar(120) ,`TRIGGER_NAME` varchar(200) ,`TRIGGER_GROUP` varchar(200) ,`JOB_NAME` varchar(200) ,`JOB_GROUP` varchar(200) ,`DESCRIPTION` varchar(250) ,`NEXT_FIRE_TIME` bigint ,`PREV_FIRE_TIME` bigint ,`PRIORITY` int ,`TRIGGER_STATE` varchar(16) ,`TRIGGER_TYPE` varchar(8) ,`START_TIME` bigint ,`END_TIME` bigint ,`CALENDAR_NAME` varchar(200) ,`MISFIRE_INSTR` int ,`JOB_DATA` long varbinary ,`Slock` int , PRIMARY KEY(`SCHED_NAME`,`TRIGGER_NAME`,`TRIGGER_GROUP`) )ENGINE=INNODB;
create table `QRTZ_SIMPLE_TRIGGERS` (`SCHED_NAME` varchar(120) ,`TRIGGER_NAME` varchar(200) ,`TRIGGER_GROUP` varchar(200) ,`REPEAT_COUNT` bigint ,`REPEAT_INTERVAL` bigint ,`TIMES_TRIGGERED` bigint ,`Slock` int , PRIMARY KEY(`SCHED_NAME`,`TRIGGER_NAME`,`TRIGGER_GROUP`) )ENGINE=INNODB;
create table `QRTZ_CRON_TRIGGERS` (`SCHED_NAME` varchar(120) ,`TRIGGER_NAME` varchar(200) ,`TRIGGER_GROUP` varchar(200) ,`CRON_EXPRESSION` varchar(200) ,`TIME_ZONE_ID` varchar(80) ,`Slock` int , PRIMARY KEY(`SCHED_NAME`,`TRIGGER_NAME`,`TRIGGER_GROUP`) )ENGINE=INNODB;
create table `QRTZ_SIMPROP_TRIGGERS` (`SCHED_NAME` varchar(120) ,`TRIGGER_NAME` varchar(200) ,`TRIGGER_GROUP` varchar(200) ,`STR_PROP_1` varchar(512) ,`STR_PROP_2` varchar(512) ,`STR_PROP_3` varchar(512) ,`INT_PROP_1` int ,`INT_PROP_2` int ,`LONG_PROP_1` bigint ,`LONG_PROP_2` bigint ,`DEC_PROP_1` numeric(13,4) ,`DEC_PROP_2` numeric(13,4) ,`BOOL_PROP_1` varchar(1) ,`BOOL_PROP_2` varchar(1) ,`Slock` int , PRIMARY KEY(`SCHED_NAME`,`TRIGGER_NAME`,`TRIGGER_GROUP`) )ENGINE=INNODB;
create table `QRTZ_BLOB_TRIGGERS` (`SCHED_NAME` varchar(120) ,`TRIGGER_NAME` varchar(200) ,`TRIGGER_GROUP` varchar(200) ,`BLOB_DATA` long varbinary ,`Slock` int , PRIMARY KEY(`SCHED_NAME`,`TRIGGER_NAME`,`TRIGGER_GROUP`) )ENGINE=INNODB;
create table `QRTZ_CALENDARS` (`SCHED_NAME` varchar(120) ,`CALENDAR_NAME` varchar(200) ,`CALENDAR` long varbinary ,`Slock` int , PRIMARY KEY(`SCHED_NAME`,`CALENDAR_NAME`) )ENGINE=INNODB;
create table `QRTZ_PAUSED_TRIGGER_GRPS` (`SCHED_NAME` varchar(120) ,`TRIGGER_GROUP` varchar(200) ,`Slock` int , PRIMARY KEY(`SCHED_NAME`,`TRIGGER_GROUP`) )ENGINE=INNODB;
create table `QRTZ_FIRED_TRIGGERS` (`SCHED_NAME` varchar(120) ,`ENTRY_ID` varchar(95) ,`TRIGGER_NAME` varchar(200) ,`TRIGGER_GROUP` varchar(200) ,`INSTANCE_NAME` varchar(200) ,`FIRED_TIME` bigint ,`SCHED_TIME` bigint ,`PRIORITY` int ,`STATE` varchar(16) ,`JOB_NAME` varchar(200) ,`JOB_GROUP` varchar(200) ,`IS_NONCONCURRENT` varchar(1) ,`REQUESTS_RECOVERY` varchar(1) ,`Slock` int , PRIMARY KEY(`SCHED_NAME`,`ENTRY_ID`) )ENGINE=INNODB;
create table `QRTZ_SCHEDULER_STATE` (`SCHED_NAME` varchar(120) ,`INSTANCE_NAME` varchar(200) ,`LAST_CHECKIN_TIME` bigint ,`CHECKIN_INTERVAL` bigint ,`Slock` int , PRIMARY KEY(`SCHED_NAME`,`INSTANCE_NAME`) )ENGINE=INNODB;
create table `QRTZ_LOCKS` (`SCHED_NAME` varchar(120) ,`LOCK_NAME` varchar(40) ,`Slock` int , PRIMARY KEY(`SCHED_NAME`,`LOCK_NAME`) )ENGINE=INNODB;
D:\shanghaiboke\Yigo\fanxiaofei\fanxiaofei||yigo_fanxiaofei||Fri Sep 28 12:18:09 CST 2018
create table `CityDict` (`OID` bigint ,`SOID` bigint ,`POID` bigint ,`VERID` int ,`DVERID` int ,`Code` varchar(255) ,`Name` varchar(255) ,`NodeType` int ,`ParentID` bigint ,`Status` int ,`Enable` int ,`TLeft` int ,`TRight` int ,`ProvinceID` bigint ,`MapCount` int ,`Slock` int , PRIMARY KEY(`OID`) )ENGINE=INNODB;
create index I_CityDict_SOID on `CityDict`(`SOID`);
create table `CityDict_RR` (`RoleID` bigint ,`FormKey` varchar(128) ,`DictID` bigint ,`HasRights` int , PRIMARY KEY(`RoleID`,`DictID`) )ENGINE=INNODB;
create table `CityDict_OR` (`OperatorID` bigint ,`FormKey` varchar(128) ,`DictID` bigint ,`HasRights` int , PRIMARY KEY(`OperatorID`,`DictID`) )ENGINE=INNODB;
create table `MaterialDict` (`OID` bigint ,`SOID` bigint ,`POID` bigint ,`VERID` int ,`DVERID` int ,`Code` varchar(255) ,`Name` varchar(255) ,`NodeType` int ,`ParentID` bigint ,`Status` int ,`Enable` int ,`TLeft` int ,`TRight` int ,`Unit` varchar(255) ,`Price` numeric(16,2) ,`MapCount` int ,`Slock` int , PRIMARY KEY(`OID`) )ENGINE=INNODB;
create index I_MaterialDict_SOID on `MaterialDict`(`SOID`);
create table `MaterialDict_RR` (`RoleID` bigint ,`FormKey` varchar(128) ,`DictID` bigint ,`HasRights` int , PRIMARY KEY(`RoleID`,`DictID`) )ENGINE=INNODB;
create table `MaterialDict_OR` (`OperatorID` bigint ,`FormKey` varchar(128) ,`DictID` bigint ,`HasRights` int , PRIMARY KEY(`OperatorID`,`DictID`) )ENGINE=INNODB;
create table `ProvinceDict` (`OID` bigint ,`SOID` bigint ,`POID` bigint ,`VERID` int ,`DVERID` int ,`Code` varchar(255) ,`Name` varchar(255) ,`NodeType` int ,`ParentID` bigint ,`Status` int ,`Enable` int ,`TLeft` int ,`TRight` int ,`MapCount` int ,`Slock` int , PRIMARY KEY(`OID`) )ENGINE=INNODB;
create index I_ProvinceDict_SOID on `ProvinceDict`(`SOID`);
create table `ProvinceDict_RR` (`RoleID` bigint ,`FormKey` varchar(128) ,`DictID` bigint ,`HasRights` int , PRIMARY KEY(`RoleID`,`DictID`) )ENGINE=INNODB;
create table `ProvinceDict_OR` (`OperatorID` bigint ,`FormKey` varchar(128) ,`DictID` bigint ,`HasRights` int , PRIMARY KEY(`OperatorID`,`DictID`) )ENGINE=INNODB;
create table `PurchaseHead` (`OID` bigint ,`SOID` bigint ,`POID` bigint ,`VERID` int ,`DVERID` int ,`NO` varchar(255) ,`Status` int ,`BillDate` datetime ,`Creator` bigint ,`CreateTime` datetime ,`Modifier` bigint ,`ModifyTime` datetime ,`InstanceID` bigint ,`MapCount` int ,`Slock` int , PRIMARY KEY(`OID`) )ENGINE=INNODB;
create unique index I_PurchaseHead_SOID on `PurchaseHead`(`SOID`);
create table `PurchaseDetail` (`OID` bigint ,`POID` bigint ,`SOID` bigint ,`VERID` int ,`DVERID` int ,`SEQUENCE` int ,`Province` bigint ,`City` bigint ,`Material` bigint ,`Amount` numeric(16,2) ,`Unit` varchar(255) ,`Price` numeric(16,2) ,`TotalPrice` numeric(16,2) ,`StockInAmount` numeric(16,2) ,`MapCount` int ,`Slock` int , PRIMARY KEY(`OID`) )ENGINE=INNODB;
create index I_PurchaseDetail_SOID on `PurchaseDetail`(`SOID`);
create table `UnitDict` (`OID` bigint ,`SOID` bigint ,`POID` bigint ,`VERID` int ,`DVERID` int ,`Code` varchar(255) ,`Name` varchar(255) ,`NodeType` int ,`ParentID` bigint ,`Status` int ,`Enable` int ,`TLeft` int ,`TRight` int ,`MapCount` int ,`Slock` int , PRIMARY KEY(`OID`) )ENGINE=INNODB;
create index I_UnitDict_SOID on `UnitDict`(`SOID`);
create table `UnitDict_RR` (`RoleID` bigint ,`FormKey` varchar(128) ,`DictID` bigint ,`HasRights` int , PRIMARY KEY(`RoleID`,`DictID`) )ENGINE=INNODB;
create table `UnitDict_OR` (`OperatorID` bigint ,`FormKey` varchar(128) ,`DictID` bigint ,`HasRights` int , PRIMARY KEY(`OperatorID`,`DictID`) )ENGINE=INNODB;
D:\shanghaiboke\Yigo\fanxiaofei\fanxiaofei||yigo_fanxiaofei||Fri Sep 28 12:38:59 CST 2018
alter table `PurchaseHead` add (`PurchaseTotalPrice` numeric(16,2) );
D:\shanghaiboke\Yigo\fanxiaofei\fanxiaofei||yigo_fanxiaofei||Fri Sep 28 14:49:24 CST 2018
create table `InventoryList` (`OID` bigint ,`SOID` bigint ,`POID` bigint ,`VERID` int ,`DVERID` int ,`Province` bigint ,`City` bigint ,`Material` bigint ,`Amount` numeric(16,2) ,`Unit` bigint ,`MapCount` int ,`Slock` int , PRIMARY KEY(`OID`) )ENGINE=INNODB;
create unique index I_InventoryList_MIGR on `InventoryList`(`Province`,`City`,`Material`,`Unit`);
create table `PurchaseDataDetail` (`OID` bigint ,`POID` bigint ,`SOID` bigint ,`VERID` int ,`DVERID` int ,`SEQUENCE` int ,`Province` bigint ,`City` bigint ,`Material` bigint ,`Unit` bigint ,`Amount` numeric(16,2) ,`StockInAmount` numeric(16,2) ,`MapCount` int ,`Slock` int , PRIMARY KEY(`OID`) )ENGINE=INNODB;
create unique index I_chaseDataDetail_SOID on `PurchaseDataDetail`(`SOID`);
create table `StockInHead` (`OID` bigint ,`SOID` bigint ,`POID` bigint ,`VERID` int ,`DVERID` int ,`NO` varchar(255) ,`Status` int ,`BillDate` datetime ,`Creator` bigint ,`CreateTime` datetime ,`Modifier` bigint ,`ModifyTime` datetime ,`InstanceID` bigint ,`MapCount` int ,`Slock` int , PRIMARY KEY(`OID`) )ENGINE=INNODB;
create unique index I_StockInHead_SOID on `StockInHead`(`SOID`);
create table `StockInDetail` (`OID` bigint ,`POID` bigint ,`SOID` bigint ,`VERID` int ,`DVERID` int ,`SEQUENCE` int ,`Province` bigint ,`City` bigint ,`Material` bigint ,`Amount` numeric(16,2) ,`Unit` bigint ,`MapCount` int ,`Slock` int , PRIMARY KEY(`OID`) )ENGINE=INNODB;
create index I_StockInDetail_SOID on `StockInDetail`(`SOID`);
create table `StockOutHead` (`OID` bigint ,`SOID` bigint ,`POID` bigint ,`VERID` int ,`DVERID` int ,`NO` varchar(255) ,`Status` int ,`BillDate` datetime ,`Creator` bigint ,`CreateTime` datetime ,`Modifier` bigint ,`ModifyTime` datetime ,`InstanceID` bigint ,`MapCount` int ,`Slock` int , PRIMARY KEY(`OID`) )ENGINE=INNODB;
create unique index I_StockOutHead_SOID on `StockOutHead`(`SOID`);
create table `StockOutDetail` (`OID` bigint ,`POID` bigint ,`SOID` bigint ,`VERID` int ,`DVERID` int ,`SEQUENCE` int ,`Province` bigint ,`City` bigint ,`Material` bigint ,`Amount` numeric(16,2) ,`Unit` bigint ,`MapCount` int ,`Slock` int , PRIMARY KEY(`OID`) )ENGINE=INNODB;
create index I_StockOutDetail_SOID on `StockOutDetail`(`SOID`);
D:\shanghaiboke\Yigo\fanxiaofei\fanxiaofei||yigo_fanxiaofei||Fri Sep 28 15:40:55 CST 2018
alter table `StockInDetail` add (`MapKey` varchar(255) ,`SrcOID` bigint ,`SrcSOID` bigint );
create index I_StockInDetail_SRCO on `StockInDetail`(`SrcOID`);
create index I_StockInDetail_SRCS on `StockInDetail`(`SrcSOID`);
E:\sc\4.项目阶段\4.02 配置开发\4.02.1 配置库\config||yigo_fanxiaofei||Fri Nov 09 10:14:58 CST 2018
alter table `CHCS_Meals_Provide_Plan_H` add (`Flight_Date_Deviate_stop` datetime ,`IsPandaNo` varchar(255) );
D:\boke\shanghaiboke\config||yigo_fanxiaofei||Mon Nov 12 14:58:58 CST 2018
create table `Annual_Budget_H` (`OID` bigint ,`SOID` bigint ,`POID` bigint ,`VERID` int ,`DVERID` int ,`MapCount` int ,`Slock` int , PRIMARY KEY(`OID`) )ENGINE=INNODB;
create index I_Annual_Budget_H_SOID on `Annual_Budget_H`(`SOID`);
create table `Annual_Budget_L` (`OID` bigint ,`SOID` bigint ,`POID` bigint ,`VERID` int ,`DVERID` int ,`MapCount` int ,`Slock` int , PRIMARY KEY(`OID`) )ENGINE=INNODB;
create index I_Annual_Budget_L_SOID on `Annual_Budget_L`(`SOID`);
D:\boke\shanghaiboke\config||yigo_fanxiaofei||Mon Nov 12 15:45:00 CST 2018
alter table `Annual_Budget_H` add (`Creator` bigint ,`Modifier` bigint ,`CreateTime` datetime ,`ModifyTime` datetime ,`NO` varchar(255) ,`BusinessDate` datetime ,`Status` int );
D:\boke\shanghaiboke\config||yigo_fanxiaofei||Mon Nov 12 16:21:12 CST 2018
alter table `Annual_Budget_H` add (`Budget_Name` varchar(255) ,`Budget_Describe` varchar(255) ,`Budget_Type` varchar(255) ,`Budget_Department` varchar(255) ,`Budget_Date_Range_Start` datetime ,`Budget_Date_Range_Stop` datetime ,`Budget_Total_Tax` numeric(16,2) ,`Cost_Total_No_Tax` numeric(16,2) ,`Total_Tax_Amount` numeric(16,2) ,`Staff` varchar(255) ,`Note` varchar(255) );
D:\boke\shanghaiboke\config||yigo_fanxiaofei||Mon Nov 12 17:18:57 CST 2018
alter table `Annual_Budget_L` add (`Budget_Project` varchar(255) ,`Cost_Project` varchar(255) ,`Routes_Type` varchar(255) ,`Routes` varchar(255) ,`Rate` numeric(16,2) ,`Cost_Budget_Tax` numeric(16,2) ,`Cost_Budget_No_Tax` numeric(16,2) ,`Tax` numeric(16,2) ,`Per_Capita_Budget_Tax` numeric(16,2) ,`Per_Capita_Budget_No_Tax` numeric(16,2) );
D:\boke\shanghaiboke\config||yigo_fanxiaofei||Tue Nov 13 11:17:11 CST 2018
create table `Annual_Budget_H` (`OID` bigint ,`SOID` bigint ,`POID` bigint ,`VERID` int ,`DVERID` int ,`Status` int ,`CREATOR` bigint ,`CREATETIME` datetime ,`MODIFIER` bigint ,`MODIFYTIME` datetime ,`NO` varchar(255) ,`BillDate` datetime ,`Budgetary_Name` varchar(255) ,`Budget_Description` varchar(255) ,`Budgetary_Classiy` varchar(255) ,`Budget_Department` varchar(255) ,`Time_Frame_Start` datetime ,`Time_Frame_Stop` datetime ,`Total_Budget_Amount_Taxes` numeric(16,2) ,`Total_Budget_Amount` numeric(16,2) ,`Total_Amount` numeric(16,2) ,`Staffing` bigint ,`Remark` varchar(255) ,`MapCount` int ,`Slock` int , PRIMARY KEY(`OID`) )ENGINE=INNODB;
create index I_Annual_Budget_H_SOID on `Annual_Budget_H`(`SOID`);
create table `Annual_Budget_L` (`OID` bigint ,`SOID` bigint ,`POID` bigint ,`VERID` int ,`DVERID` int ,`Status` int ,`CREATOR` bigint ,`CREATETIME` datetime ,`MODIFIER` bigint ,`MODIFYTIME` datetime ,`Budget_Items` numeric(16,2) ,`Cost_Item` numeric(16,2) ,`Route_Type_Code` varchar(255) ,`Route` varchar(255) ,`Tax_Rate` numeric(16,2) ,`Cost_Budget_Taxes` numeric(16,2) ,`Cost_Budget` numeric(16,2) ,`Tax_Amount` numeric(16,2) ,`Per_Capita_Cost_Budget_Taxes` numeric(16,2) ,`Per_Capita_Cost_Budget` numeric(16,2) ,`MapCount` int ,`Slock` int , PRIMARY KEY(`OID`) )ENGINE=INNODB;
create index I_Annual_Budget_L_SOID on `Annual_Budget_L`(`SOID`);
D:\boke\shanghaiboke\config||yigo_fanxiaofei||Tue Nov 13 16:14:15 CST 2018
alter table `CHCS_Meals_Provide_Rule_Set_L` add (`Time_Integral` bigint );
D:\boke\shanghaiboke\config||yigo_fanxiaofei||Tue Nov 13 16:26:30 CST 2018
alter table `CHCS_Meals_Provide_Rule_Set_L` add (`Flight_Time` bigint ,`Take_Off_Time` int ,`Landing_Time` int );
D:\boke\shanghaiboke\config||yigo_fanxiaofei||Tue Nov 13 16:37:29 CST 2018
alter table `CHCS_Meals_Provide_Rule_Set_L` add (`Economy_Match` varchar(255) ,`Extra_Economy` varchar(255) ,`Business_Class_Catering` varchar(255) );
D:\boke\shanghaiboke\config||yigo_fanxiaofei||Tue Nov 13 17:41:55 CST 2018
create table `CHCS_Meals_Provide_Rule_Set_T` (`OID` bigint ,`SOID` bigint ,`POID` bigint ,`VERID` int ,`DVERID` int ,`Time_Start` numeric(16,2) ,`Time_End` numeric(16,2) ,`MapCount` int ,`Slock` int , PRIMARY KEY(`OID`) )ENGINE=INNODB;
create index I_vide_Rule_Set_T_SOID on `CHCS_Meals_Provide_Rule_Set_T`(`SOID`);
D:\boke\shanghaiboke\config||yigo_fanxiaofei||Wed Nov 14 09:30:27 CST 2018
alter table `Annual_Budget_H` add (`Staffing` bigint );
D:\boke\shanghaiboke\config||yigo_fanxiaofei||Wed Nov 14 09:36:43 CST 2018
alter table `Annual_Budget_L` add (`Budget_Items` bigint ,`Cost_Item` bigint );
D:\boke\shanghaiboke\config||yigo_fanxiaofei||Wed Nov 14 10:08:48 CST 2018
create table `Annual_Budget` (`OID` bigint ,`SOID` bigint ,`POID` bigint ,`VERID` int ,`DVERID` int ,`Status` int ,`CREATOR` bigint ,`CREATETIME` datetime ,`MODIFIER` bigint ,`MODIFYTIME` datetime ,`NO` varchar(255) ,`BillDate` datetime ,`Budgetary_Name` varchar(255) ,`Budget_Description` varchar(255) ,`Budgetary_Classiy` varchar(255) ,`Budget_Department` varchar(255) ,`Time_Frame_Start` datetime ,`Time_Frame_Stop` datetime ,`Total_Budget_Amount_Taxes` numeric(16,2) ,`Total_Budget_Amount` numeric(16,2) ,`Total_Amount` numeric(16,2) ,`Staffing` bigint ,`Remark` varchar(255) ,`MapCount` int ,`Slock` int , PRIMARY KEY(`OID`) )ENGINE=INNODB;
create index I_Annual_Budget_SOID on `Annual_Budget`(`SOID`);
D:\boke\shanghaiboke\config||yigo_fanxiaofei||Wed Nov 14 10:13:52 CST 2018
create table `Annual_Budget` (`OID` bigint ,`SOID` bigint ,`POID` bigint ,`VERID` int ,`DVERID` int ,`Status` int ,`CREATOR` bigint ,`CREATETIME` datetime ,`MODIFIER` bigint ,`MODIFYTIME` datetime ,`NO` varchar(255) ,`BillDate` datetime ,`Budgetary_Name` varchar(255) ,`Budget_Description` varchar(255) ,`Budgetary_Classiy` varchar(255) ,`Budget_Department` varchar(255) ,`Time_Frame_Start` datetime ,`Time_Frame_Stop` datetime ,`Total_Budget_Amount_Taxes` numeric(16,2) ,`Total_Budget_Amount` numeric(16,2) ,`Total_Amount` numeric(16,2) ,`Staffing` bigint ,`Remark` varchar(255) ,`MapCount` int ,`Slock` int , PRIMARY KEY(`OID`) )ENGINE=INNODB;
create unique index I_Annual_Budget_SOID on `Annual_Budget`(`SOID`);
create table `Annual_Budget_L` (`OID` bigint ,`SOID` bigint ,`POID` bigint ,`VERID` int ,`DVERID` int ,`Status` int ,`CREATOR` bigint ,`CREATETIME` datetime ,`MODIFIER` bigint ,`MODIFYTIME` datetime ,`Budget_Items` bigint ,`Cost_Item` bigint ,`Route_Type_Code` varchar(255) ,`Route` varchar(255) ,`Tax_Rate` numeric(16,2) ,`Cost_Budget_Taxes` numeric(16,2) ,`Cost_Budget` numeric(16,2) ,`Tax_Amount` numeric(16,2) ,`Per_Capita_Cost_Budget_Taxes` numeric(16,2) ,`Per_Capita_Cost_Budget` numeric(16,2) ,`MapCount` int ,`Slock` int , PRIMARY KEY(`OID`) )ENGINE=INNODB;
create index I_Annual_Budget_L_SOID on `Annual_Budget_L`(`SOID`);
D:\boke\shanghaiboke\config||yigo_fanxiaofei||Wed Nov 14 15:24:06 CST 2018
alter table `CHCS_Meals_Provide_Rule_Set_T` add (`Food_Matching_Time_Start` datetime ,`Food_Matching_Time_Stop` datetime );
D:\boke\shanghaiboke\config||yigo_fanxiaofei||Wed Nov 14 15:46:21 CST 2018
create table `CHCS_Passenger_Meal_L` (`OID` bigint ,`SOID` bigint ,`POID` bigint ,`VERID` int ,`DVERID` int ,`Food_Matching_Time_Start` numeric(16,2) ,`Food_Matching_Time_Stop` numeric(16,2) ,`MapCount` int ,`Slock` int , PRIMARY KEY(`OID`) )ENGINE=INNODB;
create index I_assenger_Meal_L_SOID on `CHCS_Passenger_Meal_L`(`SOID`);
D:\boke\shanghaiboke\config||yigo_fanxiaofei||Thu Nov 15 11:47:26 CST 2018
create table `Annual_Budget` (`OID` bigint ,`SOID` bigint ,`POID` bigint ,`VERID` int ,`DVERID` int ,`Status` int ,`CREATOR` bigint ,`CREATETIME` datetime ,`MODIFIER` bigint ,`MODIFYTIME` datetime ,`NO` varchar(255) ,`BillDate` datetime ,`Budgetary_Name` varchar(255) ,`Budget_Description` varchar(255) ,`Budgetary_Classiy` varchar(255) ,`Budget_Department` bigint ,`Time_Frame_Start` datetime ,`Time_Frame_Stop` datetime ,`Total_Budget_Amount_Taxes` numeric(16,2) ,`Total_Budget_Amount` numeric(16,2) ,`Total_Amount` numeric(16,2) ,`Staffing` bigint ,`Remark` varchar(255) ,`MapCount` int ,`Slock` int , PRIMARY KEY(`OID`) )ENGINE=INNODB;
create unique index I_Annual_Budget_SOID on `Annual_Budget`(`SOID`);
create table `Annual_Budget_L` (`OID` bigint ,`SOID` bigint ,`POID` bigint ,`VERID` int ,`DVERID` int ,`Status` int ,`CREATOR` bigint ,`CREATETIME` datetime ,`MODIFIER` bigint ,`MODIFYTIME` datetime ,`Budget_Items` bigint ,`Cost_Item` bigint ,`Route_Type_Code` varchar(255) ,`Route` varchar(255) ,`Tax_Rate` numeric(16,2) ,`Cost_Budget_Taxes` numeric(16,2) ,`Cost_Budget` numeric(16,2) ,`Tax_Amount` numeric(16,2) ,`Per_Capita_Cost_Budget_Taxes` numeric(16,2) ,`Per_Capita_Cost_Budget` numeric(16,2) ,`MapCount` int ,`Slock` int , PRIMARY KEY(`OID`) )ENGINE=INNODB;
create index I_Annual_Budget_L_SOID on `Annual_Budget_L`(`SOID`);
D:\boke\shanghaiboke\config||airs||Mon Nov 19 17:51:47 CST 2018
create table `Annual_Budget` (`OID` bigint ,`SOID` bigint ,`POID` bigint ,`VERID` int ,`DVERID` int ,`Status` int ,`CREATOR` bigint ,`CREATETIME` datetime ,`MODIFIER` bigint ,`MODIFYTIME` datetime ,`NO` varchar(255) ,`BillDate` datetime ,`Budgetary_Name` bigint ,`Budget_Description` bigint ,`Budgetary_Classiy` varchar(255) ,`Budget_Department` bigint ,`Time_Frame_Start` datetime ,`Time_Frame_Stop` datetime ,`Total_Budget_Amount_Taxes` numeric(16,2) ,`Total_Budget_Amount` numeric(16,2) ,`Total_Amount` numeric(16,2) ,`Staffing` bigint ,`Remark` varchar(255) ,`MapCount` int ,`Slock` int , PRIMARY KEY(`OID`) )ENGINE=INNODB;
create unique index I_Annual_Budget_SOID on `Annual_Budget`(`SOID`);
create table `Annual_Budget_L` (`OID` bigint ,`SOID` bigint ,`POID` bigint ,`VERID` int ,`DVERID` int ,`Status` int ,`CREATOR` bigint ,`CREATETIME` datetime ,`MODIFIER` bigint ,`MODIFYTIME` datetime ,`Budget_Items` bigint ,`Cost_Item` bigint ,`Route_Type_Code` varchar(255) ,`Route` varchar(255) ,`Tax_Rate` numeric(16,2) ,`Cost_Budget_Taxes` numeric(16,2) ,`Cost_Budget` numeric(16,2) ,`Tax_Amount` numeric(16,2) ,`Per_Capita_Cost_Budget_Taxes` numeric(16,2) ,`Per_Capita_Cost_Budget` numeric(16,2) ,`MapCount` int ,`Slock` int , PRIMARY KEY(`OID`) )ENGINE=INNODB;
create index I_Annual_Budget_L_SOID on `Annual_Budget_L`(`SOID`);
D:\boke\shanghaiboke\config||airs||Tue Nov 20 10:06:04 CST 2018
create table `CHCS_Replenishment_H` (`OID` bigint ,`SOID` bigint ,`POID` bigint ,`VERID` int ,`DVERID` int ,`Status` int ,`CREATOR` bigint ,`CREATETIME` datetime ,`MODIFIER` bigint ,`MODIFYTIME` datetime ,`NO` varchar(255) ,`BillDate` datetime ,`Approval_Date` datetime ,`Applicant` bigint ,`Approver` bigint ,`Vendor` bigint ,`Count_L` varchar(255) ,`MapCount` int ,`Slock` int , PRIMARY KEY(`OID`) )ENGINE=INNODB;
create unique index I_Replenishment_H_SOID on `CHCS_Replenishment_H`(`SOID`);
create table `CHCS_Replenishment_L` (`OID` bigint ,`SOID` bigint ,`POID` bigint ,`VERID` int ,`DVERID` int ,`Status` int ,`CREATOR` bigint ,`CREATETIME` datetime ,`MODIFIER` bigint ,`MODIFYTIME` datetime ,`Tableware_Name` bigint ,`Standard_Stock` numeric(16,2) ,`Extant_Number` numeric(16,2) ,`Applications_Number` numeric(16,2) ,`Actual_Approvals_Number` numeric(16,2) ,`Unit` varchar(255) ,`IsUrgency` varchar(255) ,`Remark` varchar(255) ,`MapCount` int ,`Slock` int , PRIMARY KEY(`OID`) )ENGINE=INNODB;
create index I_Replenishment_L_SOID on `CHCS_Replenishment_L`(`SOID`);
D:\boke\shanghaiboke\config||airs||Tue Nov 20 11:26:59 CST 2018
alter table `CHCS_Replenishment_H` add (`MapKey` varchar(255) ,`SrcOID` bigint ,`SrcSOID` bigint );
create index I_Replenishment_H_SRCO on `CHCS_Replenishment_H`(`SrcOID`);
create index I_Replenishment_H_SRCS on `CHCS_Replenishment_H`(`SrcSOID`);
D:\boke\shanghaiboke\config||airs||Tue Nov 20 11:32:36 CST 2018
create table `CHCS_Replenishment_H` (`OID` bigint ,`SOID` bigint ,`POID` bigint ,`VERID` int ,`DVERID` int ,`Status` int ,`CREATOR` bigint ,`CREATETIME` datetime ,`MODIFIER` bigint ,`MODIFYTIME` datetime ,`NO` varchar(255) ,`BillDate` datetime ,`Approval_Date` datetime ,`Applicant` bigint ,`Approver` bigint ,`Vendor` bigint ,`Count_L` varchar(255) ,`MapKey` varchar(255) ,`SrcOID` bigint ,`SrcSOID` bigint ,`MapCount` int ,`Slock` int , PRIMARY KEY(`OID`) )ENGINE=INNODB;
create unique index I_Replenishment_H_SOID on `CHCS_Replenishment_H`(`SOID`);
create index I_Replenishment_H_SRCO on `CHCS_Replenishment_H`(`SrcOID`);
create index I_Replenishment_H_SRCS on `CHCS_Replenishment_H`(`SrcSOID`);
create table `CHCS_Replenishment_L` (`OID` bigint ,`SOID` bigint ,`POID` bigint ,`VERID` int ,`DVERID` int ,`Status` int ,`CREATOR` bigint ,`CREATETIME` datetime ,`MODIFIER` bigint ,`MODIFYTIME` datetime ,`Tableware_Name` bigint ,`Standard_Stock` numeric(16,2) ,`Extant_Number` numeric(16,2) ,`Applications_Number` numeric(16,2) ,`Actual_Approvals_Number` numeric(16,2) ,`Unit` bigint ,`IsUrgency` int ,`Remark` varchar(255) ,`MapCount` int ,`Slock` int , PRIMARY KEY(`OID`) )ENGINE=INNODB;
create index I_Replenishment_L_SOID on `CHCS_Replenishment_L`(`SOID`);
D:\boke\shanghaiboke\config||airs||Tue Nov 20 15:50:21 CST 2018
create table `Annual_Budget` (`OID` bigint ,`SOID` bigint ,`POID` bigint ,`VERID` int ,`DVERID` int ,`Status` int ,`CREATOR` bigint ,`CREATETIME` datetime ,`MODIFIER` bigint ,`MODIFYTIME` datetime ,`NO` varchar(255) ,`BillDate` datetime ,`Budgetary_Name` bigint ,`Budget_Description` bigint ,`Budgetary_Classiy` varchar(255) ,`Budget_Department` bigint ,`Time_Frame_Start` datetime ,`Time_Frame_Stop` datetime ,`Total_Budget_Amount_Taxes` numeric(16,2) ,`Total_Budget_Amount` numeric(16,2) ,`Total_Amount` numeric(16,2) ,`Staffing` bigint ,`Remark` varchar(255) ,`MapCount` int ,`Slock` int , PRIMARY KEY(`OID`) )ENGINE=INNODB;
create unique index I_Annual_Budget_SOID on `Annual_Budget`(`SOID`);
create table `Annual_Budget_L` (`OID` bigint ,`SOID` bigint ,`POID` bigint ,`VERID` int ,`DVERID` int ,`Status` int ,`CREATOR` bigint ,`CREATETIME` datetime ,`MODIFIER` bigint ,`MODIFYTIME` datetime ,`Budget_Items` bigint ,`Cost_Item` bigint ,`Route_Type_Code` bigint ,`Route` bigint ,`Tax_Rate` numeric(16,2) ,`Cost_Budget_Taxes` numeric(16,2) ,`Cost_Budget` numeric(16,2) ,`Tax_Amount` numeric(16,2) ,`Per_Capita_Cost_Budget_Taxes` numeric(16,2) ,`Per_Capita_Cost_Budget` numeric(16,2) ,`MapCount` int ,`Slock` int , PRIMARY KEY(`OID`) )ENGINE=INNODB;
create index I_Annual_Budget_L_SOID on `Annual_Budget_L`(`SOID`);
D:\boke\shanghaiboke\config||airs||Tue Nov 20 17:46:05 CST 2018
alter table `CHCS_Replenishment_L` add (`Quantity_Backfilled` numeric(16,2) );
D:\boke\shanghaiboke\config||airs||Wed Nov 21 10:08:59 CST 2018
create table `test` (`OID` bigint ,`SOID` bigint ,`POID` bigint ,`VERID` int ,`DVERID` int ,`Code` varchar(255) ,`Name` varchar(255) ,`NodeType` int ,`ParentID` bigint ,`Status` int ,`Enable` int ,`TLeft` int ,`TRight` int ,`MapCount` int ,`Slock` int , PRIMARY KEY(`OID`) )ENGINE=INNODB;
create index I_test_SOID on `test`(`SOID`);
create table `test_RR` (`RoleID` bigint ,`FormKey` varchar(128) ,`DictID` bigint ,`HasRights` int , PRIMARY KEY(`RoleID`,`DictID`) )ENGINE=INNODB;
create table `test_OR` (`OperatorID` bigint ,`FormKey` varchar(128) ,`DictID` bigint ,`HasRights` int , PRIMARY KEY(`OperatorID`,`DictID`) )ENGINE=INNODB;
D:\boke\shanghaiboke\config||airs||Wed Nov 21 10:47:32 CST 2018
alter table `CHCS_Transfer_L` add (`MapKey` varchar(255) ,`SrcOID` bigint ,`SrcSOID` bigint );
create index I_CHCS_Transfer_L_SRCO on `CHCS_Transfer_L`(`SrcOID`);
create index I_CHCS_Transfer_L_SRCS on `CHCS_Transfer_L`(`SrcSOID`);
D:\boke\shanghaiboke\config||airs||Fri Nov 23 09:13:17 CST 2018
alter table `SYS_Operator` add (`Internal_Users` int ,`Vendor` bigint );
